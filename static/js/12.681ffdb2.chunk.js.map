{"version":3,"sources":["utils/analytics.js","components/Page.js","utils/wrappedCurrency.js","utils/formatNumber.js","hooks/usePairs.js","pages/UdegoHome/components/dashvalues.js","components/carousel/controls/CarouselControlsPaging1.js","components/carousel/controls/CarouselControlsPaging2.js","components/carousel/controls/CarouselControlsArrowsBasic1.js","components/carousel/controls/CarouselControlsArrowsBasic2.js","components/carousel/controls/CarouselControlsArrowsIndex.js","components/carousel/CarouselAnimation.js","components/carousel/CarouselBasic1.js","components/carousel/CarouselBasic2.js","components/carousel/CarouselBasic3.js","components/carousel/CarouselBasic4.js","components/carousel/CarouselCenterMode.js","components/carousel/CarouselThumbnail.js","pages/UdegoHome/components/DashNewsAndUpdates.js","components/charts/BaseOptionChart.js","hooks/useBUSDPrice.js","pages/UdegoHome/components/UdegoTVL.js","hooks/useTokenBalance.js","pages/UdegoHome/components/UdegoTotalSupply.js","pages/UdegoHome/components/UdegoStakeRewards.js","pages/UdegoHome/components/UdegoFarmRewards.js","pages/UdegoHome/components/UdegoRate.js","pages/UdegoHome/index.js"],"names":["setup","window","gtag","track","pageview","props","googleAnalyticsConfig","event","type","Page","forwardRef","ref","children","title","other","pathname","useLocation","sendPageViewEvent","useCallback","page_path","useEffect","Box","wrappedCurrency","currency","chainId","ETHER","WETH","wrappedCurrencyAmount","currencyAmount","token","undefined","TokenAmount","raw","unwrappedToken","equals","fCurrency","number","numeral","format","Number","isInteger","fPercent","fNumber","fBigNumber","decimals","ethers","utils","formatUnits","PAIR_INTERFACE","Interface","IUniswapV2PairABI","PairState","usePairs","currencies","useActiveWeb3React","tokens","useMemo","map","currencyA","currencyB","pairAddresses","tokenA","tokenB","Pair","getAddress","results","useMultipleContractSingleData","result","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","toString","RootStyle","styled","Card","theme","boxShadow","textAlign","backgroundColor","palette","primary","lighter","breakpoints","up","height","display","alignItems","justifyContent","DashValues","CardContent","sx","p","md","pl","color","Typography","gutterBottom","variant","pb","xs","xl","maxWidth","mx","Button","to","component","RouterLink","width","margin","listStyle","position","right","spacing","bottom","opacity","cursor","borderRadius","transition","transitions","create","easing","easeInOut","duration","ICON_SIZE","zIndex","top","ArrowStyle","MIconButton","padding","common","white","CarouselControlsArrowsBasic1","arrowLine","onNext","onPrevious","isRTL","useTheme","direction","size","onClick","icon","roundKeyboardArrowRight","roundKeyboardArrowLeft","arrowRightFill","arrowLeftFill","background","grey","shape","borderRadiusSm","alpha","Array","_","index","id","mockData","text","image","feed","description","objectFit","customShadows","z16","borderRadiusMd","borderBottomLeftRadius","backdropFilter","WebkitBackdropFilter","borderBottomRightRadius","flexDirection","overflow","left","content","backgroundImage","transform","THUMB_SIZE","root","float","TITLES","MOCK_APPS","CarouselImgStyle","CarouselItem","item","isActive","bgcolor","alt","src","open","motion","div","variants","varFadeInRight","mb","noWrap","DashNewsAndUpdates","carouselRef","useRef","useState","length","currentIndex","setCurrentIndex","settings","speed","dots","arrows","autoplay","slidesToShow","slidesToScroll","rtl","Boolean","beforeChange","current","next","appendDots","customPaging","CarouselControlsPaging1","app","slickNext","slickPrev","useStyles","makeStyles","createStyles","border","z24","default","fontWeight","typography","fontWeightBold","mode","borderBottomColor","paper","marginTop","marginRight","lineHeight","textTransform","BaseOptionChart","LABEL_TOTAL","show","label","secondary","subtitle2","LABEL_VALUE","offsetY","h3","colors","main","chart","yellow","blue","violet","green","red","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","value","active","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","axisBorder","axisTicks","markers","strokeColors","tooltip","x","legend","fontSize","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","bar","columnWidth","pie","donut","total","radialBar","strokeWidth","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","values","sm","options","BUSD_MAINNET","mainnetTokens","busd","WBNB","wbnb","useBUSDPrice","wrapped","tokenPairs","currencyEquals","ChainId","MAINNET","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","denominator","numerator","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","JSBI","BigInt","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","multiply","invert","useUDEBusdPrice","ude","ChartWrapperStyle","alignContent","borderTop","CHART_HEIGHT","UdegoTVL","totalSupply","slowRefresh","useRefresh","setTotalSupply","a","udeContract","getUDEContract","supply","BigNumber","fetchTotalSupply","useTotalSupply","udePrice","totalMarketCap","parseFloat","toFixed","CHART_DATA","getBalanceNumber","chartOptions","merge","light","dark","floating","fillSeriesColor","y","formatter","seriesName","val","w","sum","globals","seriesTotals","reduce","b","CardHeader","dir","series","IconWrapperStyle","success","PERCENT","data","UdegoTotalSupply","useUDE","useSelector","state","dispatch","useDispatch","getTotalSupply","sparkline","marker","flexGrow","Stack","mt","trendingUpFill","UdegoStakeRewards","UdegoFarmRewards","UdegoRate","udePriceToDisplay","UdegoHome","themeStretch","useSettings","PAGE_TITLE","Container","Grid","container","lg"],"mappings":"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","file":"static/js/12.681ffdb2.chunk.js","sourcesContent":["import { googleAnalyticsConfig } from '../config';\n\n// ----------------------------------------------------------------------\n\nconst setup = (...args) => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  if (!window.gtag) {\n    return;\n  }\n  window.gtag(...args);\n};\n\nconst track = {\n  pageview: (props) => {\n    setup('config', googleAnalyticsConfig, props);\n  },\n  event: (type, props) => {\n    setup('event', type, props);\n  }\n};\n\nexport default track;\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useLocation } from 'react-router-dom';\nimport { forwardRef, useEffect, useCallback } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n// utils\nimport track from '../utils/analytics';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => {\n  const { pathname } = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <Box ref={ref} {...other}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </Box>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { ETHER, TokenAmount, WETH } from '@pancakeswap/sdk';\n\nexport function wrappedCurrency(currency, chainId) {\n    // eslint-disable-next-line no-nested-ternary\n    return chainId && currency === ETHER ? WETH[chainId] : currency;\n}\nexport function wrappedCurrencyAmount(currencyAmount, chainId) {\n    const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined;\n    return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined;\n}\nexport function unwrappedToken(token) {\n    if (token.equals(WETH[token.chainId]))\n        return ETHER;\n    return token;\n}","import { replace } from 'lodash';\nimport numeral from 'numeral';\nimport {ethers} from \"ethers\";\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fPercent(number) {\n  return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\n  return numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n  return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n  return numeral(number).format('0.0 b');\n}\n\nexport function fBigNumber(number, decimals=18) {\n  return ethers.utils.formatUnits(number, decimals)\n}\n","import { TokenAmount, Pair } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const PairState = {\r\n    \"LOADING\": 0,\r\n    \"NOT_EXISTS\": 1,\r\n    \"EXISTS\": 2,\r\n    \"INVALID\": 3,\r\n}\r\n\r\nexport function usePairs(currencies) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useMemo(() => currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n    ]), [chainId, currencies]);\r\n\r\n    const pairAddresses = useMemo(() => tokens.map(([tokenA, tokenB]) => tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined), [tokens]);\r\n    const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\r\n\r\n    return useMemo(() => results.map((result, i) => {\r\n            const { result: reserves, loading } = result;\r\n            const tokenA = tokens[i][0];\r\n            const tokenB = tokens[i][1];\r\n\r\n            if (loading)\r\n                return [PairState.LOADING, null];\r\n            if (!tokenA || !tokenB || tokenA.equals(tokenB))\r\n                return [PairState.INVALID, null];\r\n            if (!reserves)\r\n                return [PairState.NOT_EXISTS, null];\r\n            const { reserve0, reserve1 } = reserves;\r\n            const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\r\n\r\n            return [\r\n                PairState.EXISTS,\r\n                new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n            ];\r\n        }), [results, tokens]);\r\n}\r\nexport function usePair(tokenA, tokenB) {\r\n    return usePairs([[tokenA, tokenB]])[0];\r\n}","import { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Typography, Button, Card, CardContent } from '@material-ui/core';\r\nimport {BannerUdego} from \"../../../assets\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n    boxShadow: 'none',\r\n    textAlign: 'center',\r\n    backgroundColor: theme.palette.primary.lighter,\r\n    [theme.breakpoints.up('md')]: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        textAlign: 'left',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function DashValues() {\r\n    return (\r\n        <RootStyle>\r\n            <CardContent\r\n                sx={{\r\n                    p: { md: 0 },\r\n                    pl: { md: 5 },\r\n                    color: 'grey.800'\r\n                }}\r\n            >\r\n                <Typography gutterBottom variant=\"h4\">\r\n                    UDEGO FINANCE\r\n                </Typography>\r\n\r\n                <Typography variant=\"body2\" sx={{ pb: { xs: 3, xl: 5 }, maxWidth: 480, mx: 'auto' }}>\r\n                    Reinventing Decentralised Finance on Binance Smart Chain\r\n                </Typography>\r\n\r\n                <Button variant=\"contained\" to=\"/swap\" component={RouterLink}>\r\n                    Invest Now\r\n                </Button>\r\n            </CardContent>\r\n\r\n            <BannerUdego\r\n                sx={{\r\n                    p: 3,\r\n                    width: 360,\r\n                    margin: { xs: 'auto', md: 'inherit' }\r\n                }}\r\n            />\r\n        </RootStyle>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('ul')(({ theme }) => ({\n  display: 'flex',\n  listStyle: 'none',\n  alignItems: 'center',\n  position: 'absolute',\n  right: theme.spacing(3),\n  bottom: theme.spacing(3),\n  '& li': {\n    width: 18,\n    height: 18,\n    opacity: 0.32,\n    cursor: 'pointer',\n    '&.slick-active': { opacity: 1 }\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselControlsPaging1.propTypes = {\n  color: PropTypes.string\n};\n\nexport default function CarouselControlsPaging1({ color, ...other }) {\n  return {\n    appendDots: (dots) => (\n      <>\n        <RootStyle {...other}>{dots}</RootStyle>\n      </>\n    ),\n    customPaging: () => (\n      <Box\n        sx={{\n          width: 1,\n          height: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <Box\n          component=\"span\"\n          sx={{\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            bgcolor: color || 'common.white'\n          }}\n        />\n      </Box>\n    )\n  };\n}\n","import PropTypes from 'prop-types';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('ul')({\n  display: 'flex',\n  listStyle: 'none',\n  justifyContent: 'center',\n  '& li': {\n    width: 24,\n    height: 24,\n    opacity: 0.32,\n    cursor: 'pointer',\n    '&.slick-active': {\n      opacity: 1,\n      '& .dotActive': {\n        width: 18,\n        borderRadius: 8\n      }\n    }\n  }\n});\n\nconst DotStyle = styled('span')(({ theme }) => ({\n  width: 8,\n  height: 8,\n  borderRadius: '50%',\n  transition: theme.transitions.create('all', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: 360\n  })\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselControlsPaging2.propTypes = {\n  color: PropTypes.string\n};\n\nexport default function CarouselControlsPaging2({ color, ...other }) {\n  return {\n    appendDots: (dots) => (\n      <>\n        <RootStyle {...other}>{dots}</RootStyle>\n      </>\n    ),\n    customPaging: () => (\n      <Box\n        sx={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}\n      >\n        <DotStyle\n          className=\"dotActive\"\n          sx={{\n            bgcolor: color || 'primary.main'\n          }}\n        />\n      </Box>\n    )\n  };\n}\n","import PropTypes from 'prop-types';\n\nimport { Icon } from '@iconify/react';\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = {\n  width: 20,\n  height: 20\n};\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  zIndex: 9,\n  display: 'flex',\n  position: 'absolute',\n  top: theme.spacing(2),\n  right: theme.spacing(2)\n}));\n\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\n  padding: 6,\n  opacity: 0.48,\n  color: theme.palette.common.white,\n  '&:hover': { opacity: 1 }\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselControlsArrowsBasic1.propTypes = {\n  arrowLine: PropTypes.bool,\n  onNext: PropTypes.func,\n  onPrevious: PropTypes.func\n};\n\nexport default function CarouselControlsArrowsBasic1({ arrowLine, onNext, onPrevious, ...other }) {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  return (\n    <RootStyle {...other}>\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n\n      <ArrowStyle size=\"small\" onClick={onNext}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\n\nimport { Icon } from '@iconify/react';\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst SIZE = 40;\n\nconst ICON_SIZE = {\n  width: 20,\n  height: 20\n};\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  zIndex: 9,\n  height: SIZE,\n  width: '100%',\n  margin: 'auto',\n  display: 'flex',\n  position: 'absolute',\n  padding: theme.spacing(0, 2),\n  justifyContent: 'space-between'\n}));\n\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\n  width: SIZE,\n  height: SIZE,\n  opacity: 0.48,\n  display: 'flex',\n  cursor: 'pointer',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.common.white,\n  background: theme.palette.grey[900],\n  borderRadius: theme.shape.borderRadiusSm,\n  transition: theme.transitions.create('opacity'),\n  '&:hover': {\n    opacity: 1,\n    background: theme.palette.grey[900]\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselControlsArrowsBasic2.propTypes = {\n  arrowLine: PropTypes.bool,\n  onNext: PropTypes.func,\n  onPrevious: PropTypes.func\n};\n\nexport default function CarouselControlsArrowsBasic2({ arrowLine, onNext, onPrevious, ...other }) {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  return (\n    <RootStyle {...other}>\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n\n      <ArrowStyle size=\"small\" onClick={onNext}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\n// material\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\nimport { Typography, Box } from '@material-ui/core';\n//\nimport { MIconButton } from '../../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst ICON_SIZE = {\n  width: 20,\n  height: 20\n};\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  zIndex: 9,\n  display: 'flex',\n  alignItems: 'center',\n  position: 'absolute',\n  bottom: theme.spacing(2),\n  right: theme.spacing(2),\n  color: theme.palette.common.white,\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.grey[900], 0.48)\n}));\n\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\n  padding: 6,\n  opacity: 0.48,\n  color: theme.palette.common.white,\n  '&:hover': { opacity: 1 }\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselControlsArrowsIndex.propTypes = {\n  index: PropTypes.number,\n  total: PropTypes.number,\n  arrowLine: PropTypes.bool,\n  onNext: PropTypes.func,\n  onPrevious: PropTypes.func\n};\n\nexport default function CarouselControlsArrowsIndex({ arrowLine, index, total, onNext, onPrevious, ...other }) {\n  const theme = useTheme();\n  const isRTL = theme.direction === 'rtl';\n\n  return (\n    <RootStyle {...other}>\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n\n      <Typography variant=\"subtitle2\">\n        {index + 1}/{total}\n      </Typography>\n\n      <ArrowStyle size=\"small\" onClick={onNext}>\n        {arrowLine ? (\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\n        ) : (\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\n        )}\n      </ArrowStyle>\n    </RootStyle>\n  );\n}\n","import Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { motion } from 'framer-motion';\nimport { useState, useRef } from 'react';\n// material\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\nimport { Box, Card, Paper, Button, Typography, CardContent } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { varFadeInRight, MotionContainer } from '../animate';\nimport { CarouselControlsArrowsIndex } from './controls';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst CarouselImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\n// ----------------------------------------------------------------------\n\nCarouselItem.propTypes = {\n  item: PropTypes.object,\n  isActive: PropTypes.bool\n};\n\nfunction CarouselItem({ item, isActive }) {\n  const theme = useTheme();\n  const { image, title } = item;\n\n  return (\n    <Paper\n      sx={{\n        position: 'relative',\n        paddingTop: { xs: '100%', md: '50%' }\n      }}\n    >\n      <CarouselImgStyle alt={title} src={image} />\n      <Box\n        sx={{\n          top: 0,\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          backgroundImage: `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(\n            theme.palette.grey[900],\n            0\n          )} 100%)`\n        }}\n      />\n      <CardContent\n        sx={{\n          bottom: 0,\n          width: '100%',\n          maxWidth: 480,\n          textAlign: 'left',\n          position: 'absolute',\n          color: 'common.white'\n        }}\n      >\n        <MotionContainer open={isActive}>\n          <motion.div variants={varFadeInRight}>\n            <Typography variant=\"h3\" gutterBottom>\n              {item.title}\n            </Typography>\n          </motion.div>\n          <motion.div variants={varFadeInRight}>\n            <Typography variant=\"body2\" noWrap gutterBottom>\n              {item.description}\n            </Typography>\n          </motion.div>\n          <motion.div variants={varFadeInRight}>\n            <Button variant=\"contained\" sx={{ mt: 3 }}>\n              View More\n            </Button>\n          </motion.div>\n        </MotionContainer>\n      </CardContent>\n    </Paper>\n  );\n}\n\nexport default function CarouselAnimation() {\n  const theme = useTheme();\n  const carouselRef = useRef();\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0);\n\n  const settings = {\n    speed: 800,\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current, next) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item, index) => (\n          <CarouselItem key={item.title} item={item} isActive={index === currentIndex} />\n        ))}\n      </Slider>\n\n      <CarouselControlsArrowsIndex\n        index={currentIndex}\n        total={MOCK_CAROUSELS.length}\n        onNext={handleNext}\n        onPrevious={handlePrevious}\n      />\n    </Card>\n  );\n}\n","import Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { useState, useRef } from 'react';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Card } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { CarouselControlsArrowsIndex } from './controls';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nCarouselItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction CarouselItem({ item }) {\n  const { image, title } = item;\n\n  return <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />;\n}\n\nexport default function CarouselBasic1() {\n  const theme = useTheme();\n  const carouselRef = useRef();\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0);\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current, next) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n\n      <CarouselControlsArrowsIndex\n        index={currentIndex}\n        total={MOCK_CAROUSELS.length}\n        onNext={handleNext}\n        onPrevious={handlePrevious}\n      />\n    </Card>\n  );\n}\n","import Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { useState, useRef } from 'react';\n// material\nimport { useTheme } from '@material-ui/core/styles';\nimport { Box, Card, Typography, CardContent } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { CarouselControlsArrowsIndex } from './controls';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nCarouselItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction CarouselItem({ item }) {\n  const { image, title, description } = item;\n\n  return (\n    <>\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 370, objectFit: 'cover' }} />\n\n      <CardContent sx={{ textAlign: 'left' }}>\n        <Typography variant=\"h6\" noWrap gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n          {description}\n        </Typography>\n      </CardContent>\n    </>\n  );\n}\n\nexport default function CarouselBasic2() {\n  const theme = useTheme();\n  const carouselRef = useRef();\n  const [currentIndex, setCurrentIndex] = useState(2);\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: currentIndex,\n    fade: Boolean(theme.direction !== 'rtl'),\n    rtl: Boolean(theme.direction === 'rtl'),\n    beforeChange: (current, next) => setCurrentIndex(next)\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n\n      <CarouselControlsArrowsIndex\n        index={currentIndex}\n        total={MOCK_CAROUSELS.length}\n        onNext={handleNext}\n        onPrevious={handlePrevious}\n        sx={{ bottom: 120 }}\n      />\n    </Card>\n  );\n}\n","import Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\n// material\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { CarouselControlsPaging2, CarouselControlsArrowsBasic2 } from './controls';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  position: 'relative',\n  '& .slick-list': {\n    boxShadow: theme.customShadows.z16,\n    borderRadius: theme.shape.borderRadiusMd\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction CarouselItem({ item }) {\n  const { image, title } = item;\n\n  return <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />;\n}\n\nexport default function CarouselBasic3() {\n  const theme = useTheme();\n  const carouselRef = useRef();\n\n  const settings = {\n    dots: true,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    rtl: Boolean(theme.direction === 'rtl'),\n    ...CarouselControlsPaging2({\n      sx: { mt: 3 }\n    })\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <RootStyle>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\n    </RootStyle>\n  );\n}\n","import Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport { Icon } from '@iconify/react';\nimport moreHorizontalFill from '@iconify/icons-eva/more-horizontal-fill';\n// material\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\nimport { Box, Card, Typography } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { CarouselControlsArrowsBasic2 } from './controls';\n//\nimport { MIconButton } from '../@material-extend';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst ContentItemStyle = styled('div')(({ theme }) => ({\n  bottom: 0,\n  zIndex: 9,\n  width: '100%',\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  padding: theme.spacing(3),\n  borderBottomLeftRadius: 16,\n  backdropFilter: 'blur(8px)',\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\n  borderBottomRightRadius: 16,\n  justifyContent: 'space-between',\n  backgroundColor: alpha(theme.palette.grey[900], 0.72),\n  flexDirection: theme.direction === 'rtl' ? 'row-reverse' : 'row'\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction CarouselItem({ item }) {\n  const { image, title } = item;\n\n  return (\n    <Box sx={{ position: 'relative', zIndex: 0 }}>\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />\n\n      <ContentItemStyle>\n        <Typography variant=\"h6\" sx={{ color: 'common.white' }}>\n          {item.title}\n        </Typography>\n        <MIconButton\n          onClick={() => {}}\n          sx={{\n            color: 'common.white',\n            '&:hover': {\n              bgcolor: (theme) => alpha(theme.palette.common.white, theme.palette.action.hoverOpacity)\n            }\n          }}\n        >\n          <Icon icon={moreHorizontalFill} />\n        </MIconButton>\n      </ContentItemStyle>\n    </Box>\n  );\n}\n\nexport default function CarouselBasic4() {\n  const theme = useTheme();\n  const carouselRef = useRef();\n\n  const settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    fade: Boolean(theme.direction !== 'rtl'),\n    rtl: Boolean(theme.direction === 'rtl')\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <Card>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\n    </Card>\n  );\n}\n","import { useRef } from 'react';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport arrowForwardFill from '@iconify/icons-eva/arrow-forward-fill';\n// material\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\nimport { Box, Paper, Link, Typography, CardContent } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { CarouselControlsArrowsBasic2 } from './controls';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  '&:before, &:after': {\n    top: 0,\n    left: 0,\n    zIndex: 8,\n    width: 48,\n    content: \"''\",\n    height: '100%',\n    display: 'none',\n    position: 'absolute',\n    backgroundImage: 'linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%)',\n    [theme.breakpoints.up(480)]: {\n      display: 'block'\n    }\n  },\n  '&:after': {\n    right: 0,\n    left: 'auto',\n    transform: 'scaleX(-1)'\n  }\n}));\n\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute',\n  transition: theme.transitions.create('all')\n}));\n\n// ----------------------------------------------------------------------\n\nCarouselItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction CarouselItem({ item }) {\n  const { image, title } = item;\n\n  return (\n    <Paper\n      sx={{\n        mx: 1,\n        borderRadius: 2,\n        overflow: 'hidden',\n        paddingTop: 'calc(16 /9 * 100%)',\n        position: 'relative',\n        '&:hover img': {\n          width: '120%',\n          height: '120%'\n        }\n      }}\n    >\n      <CarouselImgStyle alt={title} src={image} />\n      <CardContent\n        sx={{\n          bottom: 0,\n          zIndex: 9,\n          width: '100%',\n          textAlign: 'left',\n          position: 'absolute',\n          color: 'common.white',\n          backgroundImage: (theme) =>\n            `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(theme.palette.grey[900], 0)} 100%)`\n        }}\n      >\n        <Typography variant=\"h4\" paragraph>\n          {title}\n        </Typography>\n        <Link\n          to=\"#\"\n          color=\"inherit\"\n          variant=\"overline\"\n          component={RouterLink}\n          sx={{\n            opacity: 0.72,\n            alignItems: 'center',\n            display: 'inline-flex',\n            transition: (theme) => theme.transitions.create('opacity'),\n            '&:hover': { opacity: 1 }\n          }}\n        >\n          learn More\n          <Box component={Icon} icon={arrowForwardFill} sx={{ width: 16, height: 16, ml: 1 }} />\n        </Link>\n      </CardContent>\n    </Paper>\n  );\n}\n\nexport default function CarouselCenterMode() {\n  const carouselRef = useRef();\n  const theme = useTheme();\n\n  const settings = {\n    slidesToShow: 3,\n    centerMode: true,\n    centerPadding: '60px',\n    rtl: Boolean(theme.direction === 'rtl'),\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: { slidesToShow: 2 }\n      },\n      {\n        breakpoint: 600,\n        settings: { slidesToShow: 2 }\n      },\n      {\n        breakpoint: 480,\n        settings: { slidesToShow: 1, centerPadding: '0' }\n      }\n    ]\n  };\n\n  const handlePrevious = () => {\n    carouselRef.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    carouselRef.current.slickNext();\n  };\n\n  return (\n    <RootStyle>\n      <Slider ref={carouselRef} {...settings}>\n        {MOCK_CAROUSELS.map((item) => (\n          <CarouselItem key={item.title} item={item} />\n        ))}\n      </Slider>\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\n    </RootStyle>\n  );\n}\n","import Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport { useState, useRef, useEffect } from 'react';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n// utils\nimport mockData from '../../utils/mock-data';\n//\nimport { CarouselControlsArrowsIndex } from './controls';\n\n// ----------------------------------------------------------------------\n\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: mockData.text.title(index),\n  image: mockData.image.feed(index),\n  description: mockData.text.description(index)\n}));\n\nconst THUMB_SIZE = 64;\n\nconst RootStyle = styled('div')(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    root: {\n      '& .slick-slide': {\n        float: isRTL ? 'right' : 'left'\n      }\n    }\n  };\n});\n\nconst LargeImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\nconst ThumbImgStyle = styled('img')(({ theme }) => ({\n  opacity: 0.48,\n  width: THUMB_SIZE,\n  cursor: 'pointer',\n  height: THUMB_SIZE,\n  margin: theme.spacing(0, 1),\n  borderRadius: theme.shape.borderRadiusSm,\n  '&:hover': {\n    opacity: 0.72,\n    transition: theme.transitions.create('opacity')\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nLargeItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction LargeItem({ item }) {\n  const { image, title } = item;\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        paddingTop: {\n          xs: '100%',\n          md: '50%'\n        }\n      }}\n    >\n      <LargeImgStyle alt={title} src={image} />\n    </Box>\n  );\n}\n\nThumbnailItem.propTypes = {\n  item: PropTypes.object\n};\n\nfunction ThumbnailItem({ item }) {\n  const { image, title } = item;\n\n  return <ThumbImgStyle alt={title} src={image} />;\n}\n\nexport default function CarouselThumbnail() {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [nav1, setNav1] = useState(null);\n  const [nav2, setNav2] = useState(null);\n  const slider1 = useRef(null);\n  const slider2 = useRef(null);\n\n  const settings1 = {\n    dots: false,\n    arrows: false,\n    slidesToShow: 1,\n    draggable: false,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n    beforeChange: (current, next) => setCurrentIndex(next)\n  };\n\n  const settings2 = {\n    dots: false,\n    arrows: false,\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    variableWidth: true,\n    centerPadding: '0px',\n    slidesToShow: MOCK_CAROUSELS.length > 3 ? 3 : MOCK_CAROUSELS.length\n  };\n\n  useEffect(() => {\n    setNav1(slider1.current);\n    setNav2(slider2.current);\n  }, []);\n\n  const handlePrevious = () => {\n    slider2.current.slickPrev();\n  };\n\n  const handleNext = () => {\n    slider2.current.slickNext();\n  };\n\n  return (\n    <RootStyle>\n      <Box\n        sx={{\n          zIndex: 0,\n          borderRadius: 2,\n          overflow: 'hidden',\n          position: 'relative'\n        }}\n      >\n        <Slider {...settings1} asNavFor={nav2} ref={slider1}>\n          {MOCK_CAROUSELS.map((item) => (\n            <LargeItem key={item} item={item} />\n          ))}\n        </Slider>\n        <CarouselControlsArrowsIndex\n          index={currentIndex}\n          total={MOCK_CAROUSELS.length}\n          onNext={handleNext}\n          onPrevious={handlePrevious}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          mt: 3,\n          mx: 'auto',\n          ...(MOCK_CAROUSELS.length === 1 && { maxWidth: THUMB_SIZE * 1 + 16 }),\n          ...(MOCK_CAROUSELS.length === 2 && { maxWidth: THUMB_SIZE * 2 + 32 }),\n          ...(MOCK_CAROUSELS.length === 3 && { maxWidth: THUMB_SIZE * 3 + 48 }),\n          ...(MOCK_CAROUSELS.length === 4 && { maxWidth: THUMB_SIZE * 3 + 48 }),\n          ...(MOCK_CAROUSELS.length === 5 && { maxWidth: THUMB_SIZE * 6 }),\n          '& .slick-current img': {\n            opacity: 1,\n            border: (theme) => `solid 3px ${theme.palette.primary.main}`\n          }\n        }}\n      >\n        <Slider {...settings2} asNavFor={nav1} ref={slider2}>\n          {MOCK_CAROUSELS.map((item) => (\n            <ThumbnailItem key={item} item={item} />\n          ))}\n        </Slider>\n      </Box>\n    </RootStyle>\n  );\n}\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport { useState, useRef } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { CardContent, Box, Card, Typography } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport { varFadeInRight, MotionContainer } from '../../../components/animate';\r\nimport { CarouselControlsPaging1, CarouselControlsArrowsBasic1 } from '../../../components/carousel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TITLES = ['Udego Launches on Binance Smart Chain', 'Get High Yield APRs', 'Join the pool and earn upto 100x with staking LPs '];\r\n\r\nconst MOCK_APPS = [...Array(3)].map((_, index) => ({\r\n    id: mockData.id(index),\r\n    title: TITLES[index],\r\n    description: mockData.text.title(index),\r\n    image: mockData.image.feed(index)\r\n}));\r\n\r\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\r\n    height: 280,\r\n    width: '100%',\r\n    objectFit: 'cover',\r\n    [theme.breakpoints.up('xl')]: {\r\n        height: 320\r\n    }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n    item: PropTypes.object,\r\n    isActive: PropTypes.bool\r\n};\r\n\r\nfunction CarouselItem({ item, isActive }) {\r\n    const { image, title, description } = item;\r\n\r\n    return (\r\n        <RouterLink to=\"#\">\r\n            <Box sx={{ position: 'relative' }}>\r\n                <Box\r\n                    sx={{\r\n                        top: 0,\r\n                        width: 1,\r\n                        height: 1,\r\n                        position: 'absolute',\r\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\r\n                    }}\r\n                />\r\n                <CarouselImgStyle alt={title} src={image} />\r\n                <CardContent\r\n                    sx={{\r\n                        bottom: 0,\r\n                        width: 1,\r\n                        textAlign: 'left',\r\n                        position: 'absolute',\r\n                        color: 'common.white'\r\n                    }}\r\n                >\r\n                    <MotionContainer open={isActive}>\r\n                        <motion.div variants={varFadeInRight}>\r\n                            <Typography\r\n                                variant=\"overline\"\r\n                                sx={{\r\n                                    mb: 1,\r\n                                    opacity: 0.48,\r\n                                    display: 'block'\r\n                                }}\r\n                            >\r\n                                Udego Features\r\n                            </Typography>\r\n                        </motion.div>\r\n                        <motion.div variants={varFadeInRight}>\r\n                            <Typography variant=\"h5\" gutterBottom noWrap>\r\n                                {title}\r\n                            </Typography>\r\n                        </motion.div>\r\n                        <motion.div variants={varFadeInRight}>\r\n                            <Typography variant=\"body2\" noWrap>\r\n                                {description}\r\n                            </Typography>\r\n                        </motion.div>\r\n                    </MotionContainer>\r\n                </CardContent>\r\n            </Box>\r\n        </RouterLink>\r\n    );\r\n}\r\n\r\nexport default function DashNewsAndUpdates() {\r\n    const theme = useTheme();\r\n    const carouselRef = useRef();\r\n    const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_APPS.length - 1 : 0);\r\n\r\n    const settings = {\r\n        speed: 800,\r\n        dots: true,\r\n        arrows: false,\r\n        autoplay: true,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        rtl: Boolean(theme.direction === 'rtl'),\r\n        beforeChange: (current, next) => setCurrentIndex(next),\r\n        ...CarouselControlsPaging1({\r\n            color: 'primary.main',\r\n            sx: {\r\n                top: theme.spacing(3),\r\n                left: theme.spacing(3),\r\n                bottom: 'auto',\r\n                right: 'auto'\r\n            }\r\n        })\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        carouselRef.current.slickPrev();\r\n    };\r\n\r\n    const handleNext = () => {\r\n        carouselRef.current.slickNext();\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Slider ref={carouselRef} {...settings}>\r\n                {MOCK_APPS.map((app, index) => (\r\n                    <CarouselItem key={app.id} item={app} isActive={index === currentIndex} />\r\n                ))}\r\n            </Slider>\r\n\r\n            <CarouselControlsArrowsBasic1 onNext={handleNext} onPrevious={handlePrevious} />\r\n        </Card>\r\n    );\r\n}\r\n","// material\nimport { createStyles, makeStyles } from '@material-ui/styles';\nimport { useTheme } from '@material-ui/core/styles';\n\n// ----------------------------------------------------------------------\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    '@global': {\n      // Tooltip\n      '.apexcharts-tooltip,.apexcharts-xaxistooltip': {\n        border: '0 !important',\n        boxShadow: `${theme.customShadows.z24} !important`,\n        color: `${theme.palette.text.primary} !important`,\n        borderRadius: `${theme.shape.borderRadiusSm}px !important`,\n        backgroundColor: `${theme.palette.background.default} !important`\n      },\n      '.apexcharts-tooltip-title': {\n        border: '0 !important',\n        fontWeight: theme.typography.fontWeightBold,\n        backgroundColor: `${theme.palette.grey[500_16]} !important`,\n        color: theme.palette.text[theme.palette.mode === 'light' ? 'secondary' : 'primary']\n      },\n      '.apexcharts-xaxistooltip-bottom': {\n        '&:before': {\n          borderBottomColor: 'transparent !important'\n        },\n        '&:after': {\n          borderBottomColor: `${theme.palette.background.paper} !important`\n        }\n      },\n\n      // Legend\n      '.apexcharts-legend': {\n        padding: '0 !important'\n      },\n      '.apexcharts-legend-series': {\n        alignItems: 'center',\n        display: 'flex !important'\n      },\n      '.apexcharts-legend-marker': {\n        marginTop: '-2px !important',\n        marginRight: '8px !important'\n      },\n      '.apexcharts-legend-text': {\n        lineHeight: '18px',\n        textTransform: 'capitalize'\n      }\n    }\n  })\n);\n\nexport default function BaseOptionChart() {\n  useStyles();\n  const theme = useTheme();\n\n  const LABEL_TOTAL = {\n    show: true,\n    label: 'Total',\n    color: theme.palette.text.secondary,\n    ...theme.typography.subtitle2\n  };\n\n  const LABEL_VALUE = {\n    offsetY: 8,\n    color: theme.palette.text.primary,\n    ...theme.typography.h3\n  };\n\n  return {\n    // Colors\n    colors: [\n      theme.palette.primary.main,\n      theme.palette.chart.yellow[0],\n      theme.palette.chart.blue[0],\n      theme.palette.chart.violet[0],\n      theme.palette.chart.green[0],\n      theme.palette.chart.red[0]\n    ],\n\n    // Chart\n    chart: {\n      toolbar: { show: false },\n      zoom: { enabled: false },\n      // animations: { enabled: false },\n      foreColor: theme.palette.text.disabled,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    // States\n    states: {\n      hover: {\n        filter: {\n          type: 'lighten',\n          value: 0.04\n        }\n      },\n      active: {\n        filter: {\n          type: 'darken',\n          value: 0.88\n        }\n      }\n    },\n\n    // Fill\n    fill: {\n      opacity: 1,\n      gradient: {\n        type: 'vertical',\n        shadeIntensity: 0,\n        opacityFrom: 0.4,\n        opacityTo: 0,\n        stops: [0, 100]\n      }\n    },\n\n    // Datalabels\n    dataLabels: { enabled: false },\n\n    // Stroke\n    stroke: {\n      width: 3,\n      curve: 'smooth',\n      lineCap: 'round'\n    },\n\n    // Grid\n    grid: {\n      strokeDashArray: 3,\n      borderColor: theme.palette.divider\n    },\n\n    // Xaxis\n    xaxis: {\n      axisBorder: { show: false },\n      axisTicks: { show: false }\n    },\n\n    // Markers\n    markers: {\n      size: 0,\n      strokeColors: theme.palette.background.paper\n    },\n\n    // Tooltip\n    tooltip: {\n      x: {\n        show: false\n      }\n    },\n\n    // Legend\n    legend: {\n      show: true,\n      fontSize: 13,\n      position: 'top',\n      horizontalAlign: 'right',\n      markers: {\n        radius: 12\n      },\n      fontWeight: 500,\n      itemMargin: { horizontal: 12 },\n      labels: {\n        colors: theme.palette.text.primary\n      }\n    },\n\n    // plotOptions\n    plotOptions: {\n      // Bar\n      bar: {\n        columnWidth: '28%',\n        borderRadius: 4\n      },\n      // Pie + Donut\n      pie: {\n        donut: {\n          labels: {\n            show: true,\n            value: LABEL_VALUE,\n            total: LABEL_TOTAL\n          }\n        }\n      },\n      // Radialbar\n      radialBar: {\n        track: {\n          strokeWidth: '100%',\n          background: theme.palette.grey[500_16]\n        },\n        dataLabels: {\n          value: LABEL_VALUE,\n          total: LABEL_TOTAL\n        }\n      },\n      // Radar\n      radar: {\n        polygons: {\n          fill: { colors: ['transparent'] },\n          strokeColors: theme.palette.divider,\n          connectorColors: theme.palette.divider\n        }\n      },\n      // polarArea\n      polarArea: {\n        rings: {\n          strokeColor: theme.palette.divider\n        },\n        spokes: {\n          connectorColors: theme.palette.divider\n        }\n      }\n    },\n\n    // Responsive\n    responsive: [\n      {\n        // sm\n        breakpoint: theme.breakpoints.values.sm,\n        options: {\n          plotOptions: { bar: { columnWidth: '40%' } }\n        }\n      },\n      {\n        // md\n        breakpoint: theme.breakpoints.values.md,\n        options: {\n          plotOptions: { bar: { columnWidth: '32%' } }\n        }\n      }\n    ]\n  };\n}\n","import { ChainId, currencyEquals, JSBI, Price } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport tokens, { mainnetTokens } from '../config/tokens';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { PairState, usePairs } from './usePairs';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst BUSD_MAINNET = mainnetTokens.busd;\r\nconst { wbnb: WBNB } = tokens;\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const wrapped = wrappedCurrency(currency, chainId);\r\n    const tokenPairs = useMemo(() => [\r\n        [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\r\n        // eslint-disable-next-line no-void\r\n        [(wrapped === null || wrapped === void 0 ? void 0 : wrapped.equals(BUSD_MAINNET)) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n        [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n    ], [chainId, currency, wrapped]);\r\n    const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs);\r\n    return useMemo(() => {\r\n        if (!currency || !wrapped || !chainId) {\r\n            return undefined;\r\n        }\r\n        // handle weth/eth\r\n        if (wrapped.equals(WBNB)) {\r\n            if (busdPair) {\r\n                const price = busdPair.priceOf(WBNB);\r\n                return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator);\r\n            }\r\n            return undefined;\r\n        }\r\n        // handle busd\r\n        if (wrapped.equals(BUSD_MAINNET)) {\r\n            return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1');\r\n        }\r\n        // eslint-disable-next-line no-void\r\n        const ethPairETHAmount = ethPair === null || ethPair === void 0 ? void 0 : ethPair.reserveOf(WBNB);\r\n        const ethPairETHBUSDValue = ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0);\r\n        // all other tokens\r\n        // first try the busd pair\r\n        if (busdPairState === PairState.EXISTS &&\r\n            busdPair &&\r\n            busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)) {\r\n            const price = busdPair.priceOf(wrapped);\r\n            return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator);\r\n        }\r\n        if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n            if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\r\n                const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET);\r\n                const currencyEthPrice = ethPair.priceOf(WBNB);\r\n                const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert();\r\n                return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator);\r\n            }\r\n        }\r\n        return undefined;\r\n    }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped]);\r\n}\r\nexport const useUDEBusdPrice = () => {\r\n    const udeBusdPrice = useBUSDPrice(tokens.ude);\r\n    return udeBusdPrice;\r\n};\r\nexport const useBNBBusdPrice = () => {\r\n    const bnbBusdPrice = useBUSDPrice(tokens.wbnb);\r\n    return bnbBusdPrice;\r\n};","import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Card, CardHeader } from '@material-ui/core';\r\n// utils\r\nimport {ethers} from \"ethers\";\r\nimport { fNumber } from '../../../utils/formatNumber';\r\n//\r\nimport { BaseOptionChart } from '../../../components/charts';\r\nimport {useLockedLiquidity, useTotalSupply} from \"../../../hooks/useTokenBalance\";\r\nimport {usePriceUdeBusd} from \"../../../state/farms/hooks\";\r\nimport {getBalanceNumber} from \"../../../utils/formatBalance\";\r\nimport {useUDEBusdPrice} from \"../../../hooks/useBUSDPrice\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_HEIGHT = 392;\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\r\n    height: CHART_HEIGHT,\r\n    marginTop: theme.spacing(5),\r\n    '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\r\n    '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\r\n        overflow: 'visible'\r\n    },\r\n    '& .apexcharts-legend': {\r\n        height: LEGEND_HEIGHT,\r\n        alignContent: 'center',\r\n        position: 'relative !important',\r\n        borderTop: `solid 1px ${theme.palette.divider}`,\r\n        top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\r\n    }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UdegoTVL() {\r\n    const theme = useTheme();\r\n    const totalSupply = useTotalSupply()\r\n    const udePrice = useUDEBusdPrice()\r\n    // const liquidLocked = useLockedLiquidity()\r\n\r\n    const totalMarketCap = parseFloat(udePrice?.toFixed(18)) * parseFloat(totalSupply?.toFixed(5))\r\n    const CHART_DATA = [getBalanceNumber(totalMarketCap)]\r\n\r\n    const chartOptions = merge(BaseOptionChart(), {\r\n        colors: [\r\n            theme.palette.primary.light,\r\n            theme.palette.primary.main,\r\n            theme.palette.primary.dark\r\n        ],\r\n        labels: ['Market Cap'],\r\n        stroke: { colors: [theme.palette.background.paper] },\r\n        legend: { floating: true, horizontalAlign: 'center' },\r\n        tooltip: {\r\n            fillSeriesColor: false,\r\n            y: {\r\n                formatter: (seriesName) => fNumber(seriesName),\r\n                title: {\r\n                    formatter: (seriesName) => `${seriesName}`\r\n                }\r\n            }\r\n        },\r\n        plotOptions: {\r\n            pie: {\r\n                donut: {\r\n                    size: '90%',\r\n                    labels: {\r\n                        value: {\r\n                            formatter: (val) => `$ ${fNumber(val)}`\r\n                        },\r\n                        total: {\r\n                            formatter: (w) => {\r\n                                const sum = w.globals.seriesTotals.reduce((a, b) => a + b, 0);\r\n                                return `$ ${fNumber(sum)}`;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title=\"Udego Market Cap\" />\r\n            <ChartWrapperStyle dir=\"ltr\">\r\n                <ReactApexChart type=\"donut\" series={CHART_DATA} options={chartOptions} height={280} />\r\n            </ChartWrapperStyle>\r\n        </Card>\r\n    );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport BigNumber from 'bignumber.js';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport {ChainId} from \"@udegoswap/sdk\";\r\nimport { getBep20Contract, getUDEContract } from '../utils/contractHelpers';\r\nimport { BIG_ZERO } from '../utils/bigNumber';\r\nimport { simpleRpcProvider } from '../utils/providers';\r\nimport tokens from \"../config/tokens\";\r\nimport useRefresh from './useRefresh';\r\nimport useLastUpdated from './useLastUpdated';\r\nimport {useUDEBusdPrice} from \"./useBUSDPrice\";\r\nimport {useUDE} from \"./useContract\";\r\nimport {farmsConfig} from \"../config/constants/index\";\r\nimport {FARMING} from \"../config/constants\";\r\nimport {formatBigNumberToFixed} from \"../utils/formatBalance\";\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport {getContract, getLPPrice} from \"../config/helpers\";\r\n\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const FetchStatus = {\r\n    NOT_FETCHED: \"not-fetched\",\r\n    SUCCESS: \"success\",\r\n    FAILED: \"failed\"\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress) => {\r\n    const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus;\r\n    const [balanceState, setBalanceState] = useState({\r\n        balance: BIG_ZERO,\r\n        fetchStatus: NOT_FETCHED,\r\n    });\r\n    const { account } = useWeb3React();\r\n    const { fastRefresh } = useRefresh();\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            const contract = getBep20Contract(tokenAddress);\r\n            try {\r\n                const res = await contract.balanceOf(account);\r\n                setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS });\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n                setBalanceState((prev) => ({...prev, fetchStatus: FAILED}));\r\n            }\r\n        };\r\n        if (account) {\r\n            fetchBalance();\r\n        }\r\n    }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED]);\r\n    return balanceState;\r\n};\r\nexport const useTotalSupply = () => {\r\n    const { slowRefresh } = useRefresh();\r\n    const [totalSupply, setTotalSupply] = useState();\r\n    useEffect(() => {\r\n        async function fetchTotalSupply() {\r\n            const udeContract = getUDEContract();\r\n            const supply = await udeContract.totalSupply();\r\n            setTotalSupply(new BigNumber(supply.toString()));\r\n        }\r\n        fetchTotalSupply();\r\n    }, [slowRefresh]);\r\n    return totalSupply;\r\n};\r\nexport const useBurnedBalance = (tokenAddress) => {\r\n    const [balance, setBalance] = useState(BIG_ZERO);\r\n    const { slowRefresh } = useRefresh();\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            const contract = getBep20Contract(tokenAddress);\r\n            const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD');\r\n            setBalance(new BigNumber(res.toString()));\r\n        };\r\n        fetchBalance();\r\n    }, [tokenAddress, slowRefresh]);\r\n    return balance;\r\n};\r\nexport const useGetBnbBalance = () => {\r\n    const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED);\r\n    const [balance, setBalance] = useState(ethers.BigNumber.from(0));\r\n    const { account } = useWeb3React();\r\n    const { lastUpdated, setLastUpdated } = useLastUpdated();\r\n    useEffect(() => {\r\n        const fetchBalance = async () => {\r\n            try {\r\n                const walletBalance = await simpleRpcProvider.getBalance(account);\r\n                setBalance(walletBalance);\r\n                setFetchStatus(FetchStatus.SUCCESS);\r\n            }\r\n            catch (_a) {\r\n                setFetchStatus(FetchStatus.FAILED);\r\n            }\r\n        };\r\n        if (account) {\r\n            fetchBalance();\r\n        }\r\n    }, [account, lastUpdated, setBalance, setFetchStatus]);\r\n    return { balance, fetchStatus, refresh: setLastUpdated };\r\n};\r\nexport const useGetUdeBalance = () => {\r\n    const { balance, fetchStatus } = useTokenBalance(tokens.ude.address);\r\n    // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\r\n    return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus };\r\n};\r\n\r\nexport const useLockedLiquidity = (liquid=0) => {\r\n    const {library} = useActiveWeb3React()\r\n    const udePrice = useUDEBusdPrice()\r\n    const ude = useUDE()\r\n    const [liquidity, setLiquidity] = useState(0)\r\n    useEffect(() => {\r\n        const getLiquidity = async () => {\r\n            try{\r\n                const balance = await ude.balanceOf(FARMING)\r\n                const totalStaked = parseFloat(udePrice?.toFixed(8)) * formatBigNumberToFixed(balance)\r\n                liquid += (liquidity+totalStaked)\r\n                setLiquidity(liquid)\r\n            }catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        getLiquidity()\r\n    }, [ude, udePrice, setLiquidity])\r\n    return liquidity\r\n}\r\n\r\nexport default useTokenBalance;","import { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {fBigNumber, fNumber, fPercent} from '../../../utils/formatNumber';\r\nimport {useUDE} from \"../../../hooks/useContract\";\r\nimport {getTotalSupply} from \"../../../redux/slices/ude\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.success.main,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PERCENT = 0.67;\r\nconst CHART_DATA = [{ data: [10,1,1,1,1,1,1,5] }];\r\n\r\nexport default function UdegoTotalSupply() {\r\n    const theme = useTheme();\r\n    const ude = useUDE()\r\n    const totalSupply = useSelector((state) => state.ude.totalSupply);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getTotalSupply(ude))\r\n    }, [dispatch, ude])\r\n\r\n    const chartOptions = {\r\n        colors: [theme.palette.chart.blue[0]],\r\n        chart: { sparkline: { enabled: true } },\r\n        plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n        labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n        tooltip: {\r\n            x: { show: false },\r\n            y: {\r\n                formatter: (seriesName) => fNumber(seriesName),\r\n                title: {\r\n                    formatter: () => ''\r\n                }\r\n            },\r\n            marker: { show: false }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Typography variant=\"subtitle2\">Total Circulating Supply</Typography>\r\n\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\r\n                    <IconWrapperStyle\r\n                        sx={{\r\n                            ...(PERCENT < 0 && {\r\n                                color: 'error.main',\r\n                                bgcolor: alpha(theme.palette.error.main, 0.16)\r\n                            })\r\n                        }}\r\n                    >\r\n                        <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\r\n                    </IconWrapperStyle>\r\n                    <Typography component=\"span\" variant=\"subtitle2\">\r\n                        {PERCENT > 0 && '+'}\r\n                        {fPercent(PERCENT)}\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <Typography variant=\"h3\">{fNumber(fBigNumber(totalSupply))} UDE</Typography>\r\n            </Box>\r\n\r\n            <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\r\n        </Card>\r\n    );\r\n}\r\n","import { Box, Card, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\nconst STAKE_REWARDS = 0;\r\n\r\nexport default function UdegoStakeRewards() {\r\n    return (\r\n        <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Typography variant=\"subtitle2\">Stake Rewards</Typography>\r\n                <Typography variant=\"h3\">{STAKE_REWARDS} UDE</Typography>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n","import { Box, Card, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst FARM_REWARDS = 0;\r\n\r\nexport default function UdegoFarmRewards() {\r\n    return (\r\n        <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Typography variant=\"subtitle2\">Farm Rewards</Typography>\r\n                <Typography variant=\"h3\">{FARM_REWARDS} UDE</Typography>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fNumber, fPercent } from '../../../utils/formatNumber';\r\nimport {useUDEBusdPrice} from \"../../../hooks/useBUSDPrice\";\r\nimport {getBalanceNumber} from \"../../../utils/formatBalance\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: theme.palette.success.main,\r\n    backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PERCENT = 0.13;\r\n\r\nexport default function UdegoRate() {\r\n    const theme = useTheme();\r\n    const udePrice = useUDEBusdPrice()\r\n\r\n    const udePriceToDisplay = udePrice ? `$${udePrice.toFixed(3)}` : '...'\r\n\r\n    const chartOptions = {\r\n        colors: [theme.palette.chart.green[0]],\r\n        chart: { sparkline: { enabled: true } },\r\n        plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n        tooltip: {\r\n            x: { show: false },\r\n            y: {\r\n                formatter: (seriesName) => fNumber(seriesName),\r\n                title: {\r\n                    formatter: () => ''\r\n                }\r\n            },\r\n            marker: { show: false }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Typography variant=\"subtitle2\">Udego Price</Typography>\r\n\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\r\n                    {/* <IconWrapperStyle */}\r\n                    {/*    sx={{ */}\r\n                    {/*        ...(PERCENT < 0 && { */}\r\n                    {/*            color: 'error.main', */}\r\n                    {/*            bgcolor: alpha(theme.palette.error.main, 0.16) */}\r\n                    {/*        }) */}\r\n                    {/*    }} */}\r\n                    {/* > */}\r\n                    {/*    <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} /> */}\r\n                    {/* </IconWrapperStyle> */}\r\n                    {/* <Typography component=\"span\" variant=\"subtitle2\"> */}\r\n                    {/*    {PERCENT > 0 && '+'} */}\r\n                    {/*    {fPercent(PERCENT)} */}\r\n                    {/* </Typography> */}\r\n                </Stack>\r\n\r\n                <Typography variant=\"h3\">{udePriceToDisplay}</Typography>\r\n            </Box>\r\n\r\n            {/* <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} /> */}\r\n        </Card>\r\n    );\r\n}\r\n","// material\r\nimport { Container, Grid } from '@material-ui/core';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport {\r\n    DashNewsAndUpdates,\r\n    DashValues, UdegoFarmRewards, UdegoRate,\r\n    UdegoStakeRewards,\r\n    UdegoTotalSupply,\r\n    UdegoTVL\r\n} from \"./components\";\r\nimport {PAGE_TITLE} from \"../../contexts/Constants\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UdegoHome() {\r\n    const { themeStretch } = useSettings();\r\n\r\n    return (\r\n        <Page title={`Home | ${PAGE_TITLE}`}>\r\n            <Container maxWidth={themeStretch ? false : 'xl'}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={8}>\r\n                        <DashValues />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={4}>\r\n                        <DashNewsAndUpdates />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6} lg={4}>\r\n                        <UdegoTVL />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} lg={8} md={6}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <UdegoTotalSupply />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <UdegoRate />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <UdegoStakeRewards />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <UdegoFarmRewards />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Page>\r\n    );\r\n}\r\n"],"sourceRoot":""}