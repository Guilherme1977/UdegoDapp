{"version":3,"sources":["utils/analytics.js","components/Page.js","utils/wrappedCurrency.js","state/user/hooks/index.js","state/wallet/hooks.js","utils/prices.js","hooks/useCallWithGasPrice.js","hooks/usePairs.js","utils/isZero.js","state/transactions/hooks.js","components/Layout/Column.js","utils/trades.js","hooks/Trades.js","components/Layout/Row.js","hooks/ENS/useENS.js","hooks/ENS/useENSName.js","hooks/ENS/useENSAddress.js","state/swap/hooks.js","hooks/useParsedQueryString.js","hooks/useTokenAllowance.js","hooks/useApproveCallback.js","utils/maxAmountSpend.js","hooks/useHttpLocations.js","hooks/ENS/useENSContentHash.js","utils/getTokenLogoURL.js","components/Logo/Logo.js","components/Logo/CurrencyLogo.js","components/Logo/DoubleLogo.js","components/Logo/ListLogo.js","hooks/useTransactionDeadline.js","hooks/useCurrentBlockTimestamp.js","../node_modules/@material-ui/icons/esm/SwapHorizRounded.js","pages/pool-udego/ListToken.js","pages/pool-udego/TokenSelect.js","hooks/useUDEPairs.js","hooks/useTotalSupply.js","state/mint/hooks.js","utils/currencyId.js","pages/pool-udego/PoolPriceBar.js","components/Loader/Dots.js","pages/pool-udego/components/pool-details.js","pages/pool-udego/index.js","pages/UdegoPool.js"],"names":["setup","window","gtag","track","pageview","props","googleAnalyticsConfig","event","type","Page","forwardRef","ref","children","title","other","pathname","useLocation","sendPageViewEvent","useCallback","page_path","useEffect","Box","wrappedCurrency","currency","chainId","ETHER","WETH","wrappedCurrencyAmount","currencyAmount","token","undefined","TokenAmount","raw","unwrappedToken","equals","useIsExpertMode","useSelector","state","user","userExpertMode","useExpertModeManager","dispatch","useDispatch","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","slippage","updateUserSlippageTolerance","useGasPrice","userGas","gasPrice","process","ChainId","MAINNET","toString","GAS_PRICE_GWEI","testnet","toV2LiquidityToken","tokenA","tokenB","Token","UDEPair","getAddress","useTrackedTokenPairs","useActiveWeb3React","tokens","useAllTokens","pinnedPairs","useMemo","PINNED_PAIRS","generatedPairs","flatMap","Object","keys","tokenAddress","BASES_TO_TRACK_LIQUIDITY_FOR","map","base","address","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","token0","token1","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key","useTokenBalancesWithLoadingIndicator","validatedTokens","_a","t","isAddress","validatedTokenAddresses","vt","balances","useMultipleContractSingleData","ERC20_INTERFACE","anyLoading","some","callState","loading","length","i","value","result","amount","JSBI","BigInt","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","a","sort","results","useSingleContractMultipleData","_b","CurrencyAmount","ether","useBNBBalances","useCurrencyBalance","BASE_FEE","Percent","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","route","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","computeSlippageAdjustedAmounts","allowedSlippage","pct","basisPointsToPercent","Field","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","useCallWithGasPrice","callWithGasPrice","contract","methodName","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","tx","PAIR_INTERFACE","Interface","IUniswapV2PairABI","PairState","usePairs","currencyA","currencyB","pairAddresses","Pair","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","isZero","hexNumberString","test","useTransactionAdder","response","summary","approval","claim","hash","Error","addTransaction","from","useAllTransactions","s","transactions","useHasPendingApproval","spender","allTransactions","receipt","Date","getTime","addedTime","isTransactionRecent","Column","styled","div","AutoColumn","gap","justify","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","outputAmount","equalTo","executionPrice","add","useAllCommonPairs","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","otherBase","allPairCombinations","Boolean","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","allPairs","values","curr","liquidityToken","useTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","bestTradeExactIn","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","useTradeExactOut","currencyIn","currencyAmountOut","bestTradeExactOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","includes","Row","width","align","padding","border","borderRadius","AutoRow","useENS","nameOrAddress","validated","reverseLookup","_c","debouncedAddress","useDebounce","ensNodeArgument","namehash","toLowerCase","substr","error","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","name","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","useSwapState","swap","useSwapActionHandlers","onCurrencySelection","field","selectCurrency","currencyId","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","typedValueParsed","parseUnits","decimals","console","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","pair","useDerivedSwapInfo","inputError","independentField","inputCurrencyId","outputCurrencyId","inputCurrency","useCurrency","outputCurrency","recipientLookup","to","relevantTokenBalances","isExactIn","parsedAmount","v2Trade","currencyBalances","formattedTo","indexOf","slippageAdjustedAmounts","balanceIn","amountIn","symbol","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","useState","setResult","parsed","replaceSwapState","useTokenAllowance","owner","useTokenContract","inputs","allowance","ApprovalState","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","approvalState","APPROVED","log","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","calculateGasMargin","then","useApproveCallbackFromTrade","PC_ROUTER_ADDRESS","useApproveCallbackForRemove","pairToApprove","toFixed","maxAmountSpend","greaterThan","MIN_BNB","useHttpLocations","uri","ens","parseENSAddress","resolvedContentHash","contenthash","useENSContentHash","uriToHttp","contenthashToUri","getTokenLogoURL","BAD_SRCS","Logo","srcs","alt","rest","e","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","__rest","refresh","src","React","createElement","onError","HelpIcon","StyledLogo","size","CurrencyLogo","style","uriLocations","WrappedTokenInfo","logoURI","BinanceIcon","margin","useTransactionDeadline","ttl","userDeadline","blockTimestamp","multicall","useCurrentBlockTimestamp","createSvgIcon","_jsx","d","ListToken","item","selectedToken","tokenSelected","currencyBalance","ListItem","button","selected","onClick","disabled","secondaryAction","Typography","toSignificant","ListItemAvatar","Avatar","tokenImg","srcSet","ListItemText","primary","secondary","inputRegex","RegExp","TokenSelect","tokenSymbol","isMax","label","placeHolder","inputValue","onInputChange","onItemChange","showApprove","onApprove","approveText","onMax","isDisabled","setSymbol","setToken","setAddress","isDialogOpen","setDialog","pooltokens","getPoolTokens","handleClose","selectedCurrencyBalance","Card","sx","maxWidth","CardContent","background","Button","variant","marginLeft","marginTop","Grid","container","spacing","xs","md","TextField","fullWidth","placeholder","onChange","nextUserInput","target","replace","escapeRegExp","display","justifyContent","alignItems","slice","ArrowDropDown","Dialog","open","onClose","DialogTitle","DialogContent","LoadingButton","List","cols","tokenItem","DialogActions","useUDEPair","useUDEPairs","useTotalSupply","totalSupply","ZERO","useMintState","mint","PoolPriceBar","Dots","span","PoolDetails","library","currency0","currency1","userPoolBalance","totalPoolTokens","UDE_ROUTER","isApproveRemove","approvePairCallback","removeLiquid","getContract","routerABI","getSigner","router","pairABI","pairC","totalSupp","getTokenAAddr","getTokenBAddr","tokenAbi","tempTokenAContract","tempTokenBContract","balanceOf","total0Supp","total1Supp","lpTokens","finPoolA","finPoolB","poolShare","removeLiquidity","getMin","getDeadline","txn","showPromise","wait","showError","data","message","poolTokenPercentage2","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","textAlign","CardHeader","subheader","color","PoolUdego","navigate","useNavigate","currencyIdA","setCurrencyA","currencyIdB","setCurrencyB","resetMintState","otherTypedValue","dependentField","CURRENCY_A","CURRENCY_B","pairState","noLiquidity","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","parsedAmounts","price","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","poolTokenPercentage","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","deadline","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","getUDERouterContract","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","tokenBIsETH","estimate","addLiquidityETH","method","args","toHexString","BigNumber","addLiquidity","estimatedGasLimit","err","code","handleCurrencyASelect","currencyA_","newCurrencyIdA","currB","handleCurrencyBSelect","currencyB_","newCurrencyIdB","trackedTokenPairs","tokenPairsWithLiquidityTokens","liquidityTokens","tpwlt","v2PairsBalances","udePair","elevation","APP_NAME","action","ButtonGroup","IconButton","SwapHorizRounded","bnb","toExact","Add","ALL_TOKENS","ude","WalletPopover","invert","ONE_BIPS","UdegoPool","themeStretch","useSettings","PAGE_TITLE","Container"],"mappings":"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","file":"static/js/9.24bd90f8.chunk.js","sourcesContent":["import { googleAnalyticsConfig } from '../config';\n\n// ----------------------------------------------------------------------\n\nconst setup = (...args) => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  if (!window.gtag) {\n    return;\n  }\n  window.gtag(...args);\n};\n\nconst track = {\n  pageview: (props) => {\n    setup('config', googleAnalyticsConfig, props);\n  },\n  event: (type, props) => {\n    setup('event', type, props);\n  }\n};\n\nexport default track;\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useLocation } from 'react-router-dom';\nimport { forwardRef, useEffect, useCallback } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n// utils\nimport track from '../utils/analytics';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => {\n  const { pathname } = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <Box ref={ref} {...other}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </Box>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { ETHER, TokenAmount, WETH } from '@pancakeswap/sdk';\n\nexport function wrappedCurrency(currency, chainId) {\n    // eslint-disable-next-line no-nested-ternary\n    return chainId && currency === ETHER ? WETH[chainId] : currency;\n}\nexport function wrappedCurrencyAmount(currencyAmount, chainId) {\n    const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined;\n    return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined;\n}\nexport function unwrappedToken(token) {\n    if (token.equals(WETH[token.chainId]))\n        return ETHER;\n    return token;\n}","import { ChainId, Pair, Token } from '@pancakeswap/sdk';\r\nimport { Pair as UDEPair } from '@udegoswap/sdk';\r\nimport flatMap from 'lodash/flatMap';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../../config/constants/index';\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport { useAllTokens } from '../../../hooks/Tokens';\r\nimport { addSerializedPair, addSerializedToken, FarmStakedOnly, muteAudio, removeSerializedToken, toggleTheme as toggleThemeAction, unmuteAudio, updateUserDeadline, updateUserExpertMode, updateUserFarmStakedOnly, updateUserSingleHopOnly, updateUserSlippageTolerance, updateGasPrice, addWatchlistToken, addWatchlistPool, updateUserPoolStakedOnly, updateUserPoolsViewMode, updateUserFarmsViewMode, updateUserPredictionChartDisclaimerShow, updateUserPredictionAcceptedRisk, updateUserUsernameVisibility, updateUserExpertModeAcknowledgementShow, } from '../actions';\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers';\r\n\r\nexport function useAudioModeManager() {\r\n    const dispatch = useDispatch();\r\n    const audioPlay = useSelector((state) => state.user.audioPlay);\r\n    const toggleSetAudioMode = useCallback(() => {\r\n        if (audioPlay) {\r\n            dispatch(muteAudio());\r\n        }\r\n        else {\r\n            dispatch(unmuteAudio());\r\n        }\r\n    }, [audioPlay, dispatch]);\r\n    return [audioPlay, toggleSetAudioMode];\r\n}\r\nexport function useIsExpertMode() {\r\n    return useSelector((state) => state.user.userExpertMode);\r\n}\r\nexport function useExpertModeManager() {\r\n    const dispatch = useDispatch();\r\n    const expertMode = useIsExpertMode();\r\n    const toggleSetExpertMode = useCallback(() => {\r\n        dispatch(updateUserExpertMode({ userExpertMode: !expertMode }));\r\n    }, [expertMode, dispatch]);\r\n    return [expertMode, toggleSetExpertMode];\r\n}\r\nexport function useThemeManager() {\r\n    const dispatch = useDispatch();\r\n    const isDark = useSelector((state) => state.user.isDark);\r\n    const toggleTheme = useCallback(() => {\r\n        dispatch(toggleThemeAction());\r\n    }, [dispatch]);\r\n    return [isDark, toggleTheme];\r\n}\r\nexport function useUserSingleHopOnly() {\r\n    const dispatch = useDispatch();\r\n    const singleHopOnly = useSelector((state) => state.user.userSingleHopOnly);\r\n    const setSingleHopOnly = useCallback((newSingleHopOnly) => {\r\n        dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }));\r\n    }, [dispatch]);\r\n    return [singleHopOnly, setSingleHopOnly];\r\n}\r\nexport function useUserSlippageTolerance() {\r\n    const dispatch = useDispatch();\r\n    const userSlippageTolerance = useSelector((state) => state.user.userSlippageTolerance);\r\n    const setUserSlippageTolerance = useCallback((slippage) => {\r\n        dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }));\r\n    }, [dispatch]);\r\n    return [userSlippageTolerance, setUserSlippageTolerance];\r\n}\r\nexport function useUserFarmStakedOnly(isActive) {\r\n    const dispatch = useDispatch();\r\n    const userFarmStakedOnly = useSelector((state) => state.user.userFarmStakedOnly);\r\n    const setUserFarmStakedOnly = useCallback((stakedOnly) => {\r\n        const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE;\r\n        dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }));\r\n    }, [dispatch]);\r\n    return [\r\n        userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n        setUserFarmStakedOnly,\r\n    ];\r\n}\r\nexport function useUserPoolStakedOnly() {\r\n    const dispatch = useDispatch();\r\n    const userPoolStakedOnly = useSelector((state) => state.user.userPoolStakedOnly);\r\n    const setUserPoolStakedOnly = useCallback((stakedOnly) => {\r\n        dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }));\r\n    }, [dispatch]);\r\n    return [userPoolStakedOnly, setUserPoolStakedOnly];\r\n}\r\nexport function useUserPoolsViewMode() {\r\n    const dispatch = useDispatch();\r\n    const userPoolsViewMode = useSelector((state) => state.user.userPoolsViewMode);\r\n    const setUserPoolsViewMode = useCallback((viewMode) => {\r\n        dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }));\r\n    }, [dispatch]);\r\n    return [userPoolsViewMode, setUserPoolsViewMode];\r\n}\r\nexport function useUserFarmsViewMode() {\r\n    const dispatch = useDispatch();\r\n    const userFarmsViewMode = useSelector((state) => state.user.userFarmsViewMode);\r\n    const setUserFarmsViewMode = useCallback((viewMode) => {\r\n        dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }));\r\n    }, [dispatch]);\r\n    return [userFarmsViewMode, setUserFarmsViewMode];\r\n}\r\nexport function useUserPredictionAcceptedRisk() {\r\n    const dispatch = useDispatch();\r\n    const userPredictionAcceptedRisk = useSelector((state) => state.user.userPredictionAcceptedRisk);\r\n    const setUserPredictionAcceptedRisk = useCallback((acceptedRisk) => {\r\n        dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }));\r\n    }, [dispatch]);\r\n    return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk];\r\n}\r\nexport function useUserPredictionChartDisclaimerShow() {\r\n    const dispatch = useDispatch();\r\n    const userPredictionChartDisclaimerShow = useSelector((state) => state.user.userPredictionChartDisclaimerShow);\r\n    const setPredictionUserChartDisclaimerShow = useCallback((showDisclaimer) => {\r\n        dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }));\r\n    }, [dispatch]);\r\n    return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow];\r\n}\r\nexport function useUserExpertModeAcknowledgementShow() {\r\n    const dispatch = useDispatch();\r\n    const userExpertModeAcknowledgementShow = useSelector((state) => state.user.userExpertModeAcknowledgementShow);\r\n    const setUserExpertModeAcknowledgementShow = useCallback((showAcknowledgement) => {\r\n        dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }));\r\n    }, [dispatch]);\r\n    return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow];\r\n}\r\nexport function useUserUsernameVisibility() {\r\n    const dispatch = useDispatch();\r\n    const userUsernameVisibility = useSelector((state) => state.user.userUsernameVisibility);\r\n    const setUserUsernameVisibility = useCallback((usernameVisibility) => {\r\n        dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }));\r\n    }, [dispatch]);\r\n    return [userUsernameVisibility, setUserUsernameVisibility];\r\n}\r\nexport function useUserTransactionTTL() {\r\n    const dispatch = useDispatch();\r\n    const userDeadline = useSelector((state) => state.user.userDeadline);\r\n    const setUserDeadline = useCallback((deadline) => {\r\n        dispatch(updateUserDeadline({ userDeadline: deadline }));\r\n    }, [dispatch]);\r\n    return [userDeadline, setUserDeadline];\r\n}\r\nexport function useAddUserToken() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((token) => {\r\n        dispatch(addSerializedToken({ serializedToken: serializeToken(token) }));\r\n    }, [dispatch]);\r\n}\r\nexport function useRemoveUserAddedToken() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((chainId, address) => {\r\n        dispatch(removeSerializedToken({ chainId, address }));\r\n    }, [dispatch]);\r\n}\r\nexport function useGasPrice() {\r\n    const chainId = process.env.REACT_APP_CHAIN_ID;\r\n    const userGas = useSelector((state) => state.user.gasPrice);\r\n    return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet;\r\n}\r\nexport function useGasPriceManager() {\r\n    const dispatch = useDispatch();\r\n    const userGasPrice = useGasPrice();\r\n    const setGasPrice = useCallback((gasPrice) => {\r\n        dispatch(updateGasPrice({ gasPrice }));\r\n    }, [dispatch]);\r\n    return [userGasPrice, setGasPrice];\r\n}\r\nfunction serializePair(pair) {\r\n    return {\r\n        token0: serializeToken(pair.token0),\r\n        token1: serializeToken(pair.token1),\r\n    };\r\n}\r\nexport function usePairAdder() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((pair) => {\r\n        dispatch(addSerializedPair({ serializedPair: serializePair(pair) }));\r\n    }, [dispatch]);\r\n}\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]) {\r\n    return new Token(tokenA.chainId, UDEPair.getAddress(tokenA, tokenB), 18, 'UDE-LP', 'UDEGO LPs');\r\n}\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs() {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useAllTokens();\r\n    // pinned pairs\r\n    // eslint-disable-next-line no-cond-assign,no-void,no-nested-ternary\r\n    const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n    // pairs for every token against every base\r\n    const generatedPairs = useMemo(() => chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress];\r\n            // for each token on the current chain,\r\n            return (\r\n            // loop though all bases on the current chain\r\n                // eslint-disable-next-line no-cond-assign,no-void\r\n                (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                if (base.address === token.address) {\r\n                    return null;\r\n                }\r\n                return [base, token];\r\n            })\r\n                .filter((p) => p !== null));\r\n        })\r\n        : [], [tokens, chainId]);\r\n    // pairs saved by users\r\n    const savedSerializedPairs = useSelector(({ user: { pairs } }) => pairs);\r\n    const userPairs = useMemo(() => {\r\n        if (!chainId || !savedSerializedPairs)\r\n            return [];\r\n        const forChain = savedSerializedPairs[chainId];\r\n        if (!forChain)\r\n            return [];\r\n        return Object.keys(forChain).map((pairId) => [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]);\r\n    }, [savedSerializedPairs, chainId]);\r\n    const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\r\n    return useMemo(() => {\r\n        // dedupes pairs of tokens in the combined list\r\n        const keyed = combinedList.reduce((memo, [tokenA, tokenB]) => {\r\n            const sorted = tokenA.sortsBefore(tokenB);\r\n            const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\r\n            if (memo[key])\r\n                return memo;\r\n            memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\r\n            return memo;\r\n        }, {});\r\n        return Object.keys(keyed).map((key) => keyed[key]);\r\n    }, [combinedList]);\r\n}\r\nexport const useWatchlistTokens = () => {\r\n    let _a;\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const savedTokens = (_a = useSelector((state) => state.user.watchlistTokens)) !== null && _a !== void 0 ? _a : [];\r\n    const updatedSavedTokens = useCallback((address) => {\r\n        dispatch(addWatchlistToken({ address }));\r\n    }, [dispatch]);\r\n    return [savedTokens, updatedSavedTokens];\r\n};\r\nexport const useWatchlistPools = () => {\r\n    let _a;\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const savedPools = (_a = useSelector((state) => state.user.watchlistPools)) !== null && _a !== void 0 ? _a : [];\r\n    const updateSavedPools = useCallback((address) => {\r\n        dispatch(addWatchlistPool({ address }));\r\n    }, [dispatch]);\r\n    return [savedPools, updateSavedPools];\r\n};","import { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport ERC20_INTERFACE from '../../config/abi/erc20';\r\nimport { useAllTokens } from '../../hooks/Tokens';\r\nimport { useMulticallContract } from '../../hooks/useContract';\r\nimport { isAddress } from '../../utils';\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks';\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses) {\r\n    const multicallContract = useMulticallContract();\r\n    const addresses = useMemo(() => uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a) => a !== false)\r\n            .sort()\r\n        : [], [uncheckedAddresses]);\r\n    const results = useSingleContractMultipleData(multicallContract, 'getEthBalance', addresses.map((address) => [address]));\r\n    return useMemo(() => addresses.reduce((memo, address, i) => {\r\n        let _a; let _b;\r\n        // eslint-disable-next-line no-cond-assign,no-void\r\n        const value = (_b = (_a = results === null || results === void 0 ? void 0 : results[i]) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b[0];\r\n        if (value)\r\n            memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()));\r\n        return memo;\r\n    }, {}), [addresses, results]);\r\n}\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(address, tokens) {\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const validatedTokens = useMemo(() => { let _a; return (_a = tokens === null || tokens === void 0 ? void 0 : tokens.filter((t) => isAddress(t === null || t === void 0 ? void 0 : t.address) !== false)) !== null && _a !== void 0 ? _a : []; }, [tokens]);\r\n    const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens]);\r\n    const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address]);\r\n    const anyLoading = useMemo(() => balances.some((callState) => callState.loading), [balances]);\r\n    return [\r\n        useMemo(\r\n            () =>\r\n                address && validatedTokens.length > 0\r\n                    ? validatedTokens.reduce((memo, token, i) => {\r\n                const value = balances?.[i]?.result?.[0]\r\n                const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n                if (amount) {\r\n                    memo[token.address] = new TokenAmount(token, amount)\r\n                }\r\n                return memo\r\n            }, {})\r\n        : {},\r\n            [address, validatedTokens, balances],\r\n        ),\r\n        anyLoading,\r\n    ];\r\n}\r\nexport function useTokenBalances(address, tokens) {\r\n    return useTokenBalancesWithLoadingIndicator(address, tokens)[0];\r\n}\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account, token) {\r\n    const tokenBalances = useTokenBalances(account, [token]);\r\n    if (!token)\r\n        return undefined;\r\n    return tokenBalances[token.address];\r\n}\r\nexport function useCurrencyBalances(account, currencies) {\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const tokens = useMemo(() => { let _a; return (_a = currencies === null || currencies === void 0 ? void 0 : currencies.filter((currency) => true)) !== null && _a !== void 0 ? _a : []; }, [currencies]);\r\n    const tokenBalances = useTokenBalances(account, tokens)\r\n    const containsBNB = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n    const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n    return useMemo(() =>\r\n        currencies?.map((currency) => {\r\n            if (!account || !currency) return undefined\r\n            if (currency === ETHER) return ethBalance[account]\r\n            if (currency) return tokenBalances[currency.address]\r\n            return undefined\r\n        }) ?? []\r\n    , [account, currencies, ethBalance, tokenBalances]);\r\n}\r\nexport function useCurrencyBalance(account, currency) {\r\n    return useCurrencyBalances(account, [currency])[0];\r\n}\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances() {\r\n    const { account } = useWeb3React();\r\n    const allTokens = useAllTokens();\r\n    // eslint-disable-next-line no-void\r\n    const allTokensArray = useMemo(() => Object.values(allTokens !== null && allTokens !== void 0 ? allTokens : {}), [allTokens]);\r\n    // eslint-disable-next-line no-void\r\n    const balances = useTokenBalances(account !== null && account !== void 0 ? account : undefined, allTokensArray);\r\n    // eslint-disable-next-line no-void\r\n    return balances !== null && balances !== void 0 ? balances : {};\r\n}\r\n","import { CurrencyAmount, JSBI, Percent, TokenAmount } from '@pancakeswap/sdk';\r\nimport { BLOCKED_PRICE_IMPACT_NON_EXPERT, ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM, } from '../config/constants/index';\r\nimport { Field } from '../state/swap/actions';\r\nimport { basisPointsToPercent } from './index';\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000));\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000));\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE);\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade) {\r\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n    const realizedLPFee = !trade\r\n        ? undefined\r\n        : ONE_HUNDRED_PERCENT.subtract(trade.route.pairs.reduce((currentFee) => currentFee.multiply(INPUT_FRACTION_AFTER_FEE), ONE_HUNDRED_PERCENT));\r\n    // remove lp fees from price impact\r\n    const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined;\r\n    // the x*y=k impact\r\n    const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n        // eslint-disable-next-line no-void\r\n        ? new Percent(priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.numerator, priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.denominator)\r\n        : undefined;\r\n    // the amount of the input that accrues to LPs\r\n    const realizedLPFeeAmount = realizedLPFee &&\r\n        trade &&\r\n        (trade.inputAmount instanceof TokenAmount\r\n            ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n            : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient));\r\n    return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount };\r\n}\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(trade, allowedSlippage) {\r\n    const pct = basisPointsToPercent(allowedSlippage);\r\n    return {\r\n        // eslint-disable-next-line no-void\r\n        [Field.INPUT]: trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(pct),\r\n        // eslint-disable-next-line no-void\r\n        [Field.OUTPUT]: trade === null || trade === void 0 ? void 0 : trade.minimumAmountOut(pct),\r\n    };\r\n}\r\nexport function warningSeverity(priceImpact) {\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)))\r\n        return 4;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)))\r\n        return 3;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)))\r\n        return 2;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_LOW)))\r\n        return 1;\r\n    return 0;\r\n}\r\nexport function formatExecutionPrice(trade, inverted) {\r\n    if (!trade) {\r\n        return '';\r\n    }\r\n    return inverted\r\n        ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${trade.outputAmount.currency.symbol}`\r\n        : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${trade.inputAmount.currency.symbol}`;\r\n}\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price, amount, significantDigits = 18) => {\r\n    if (!price) {\r\n        return 0;\r\n    }\r\n    return parseFloat(price.toSignificant(significantDigits)) * amount;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { get } from 'lodash';\r\nimport { useGasPrice } from '../state/user/hooks';\r\n/**\r\n * Perform a contract call with a gas price returned from useGasPrice\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport function useCallWithGasPrice() {\r\n    const gasPrice = useGasPrice();\r\n    const callWithGasPrice = useCallback(async (contract, methodName, methodArgs = [], overrides = null) => {\r\n        const contractMethod = get(contract, methodName);\r\n        const hasManualGasPriceOverride = overrides === null || overrides === undefined ? undefined : overrides.gasPrice;\r\n        const tx = await contractMethod(...methodArgs, hasManualGasPriceOverride ? ({ ...overrides}) : ({...overrides, gasPrice}));\r\n        return tx;\r\n    }, [gasPrice]);\r\n    return { callWithGasPrice };\r\n}","import { TokenAmount, Pair } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const PairState = {\r\n    \"LOADING\": 0,\r\n    \"NOT_EXISTS\": 1,\r\n    \"EXISTS\": 2,\r\n    \"INVALID\": 3,\r\n}\r\n\r\nexport function usePairs(currencies) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useMemo(() => currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n    ]), [chainId, currencies]);\r\n\r\n    const pairAddresses = useMemo(() => tokens.map(([tokenA, tokenB]) => tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined), [tokens]);\r\n    const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\r\n\r\n    return useMemo(() => results.map((result, i) => {\r\n            const { result: reserves, loading } = result;\r\n            const tokenA = tokens[i][0];\r\n            const tokenB = tokens[i][1];\r\n\r\n            if (loading)\r\n                return [PairState.LOADING, null];\r\n            if (!tokenA || !tokenB || tokenA.equals(tokenB))\r\n                return [PairState.INVALID, null];\r\n            if (!reserves)\r\n                return [PairState.NOT_EXISTS, null];\r\n            const { reserve0, reserve1 } = reserves;\r\n            const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\r\n\r\n            return [\r\n                PairState.EXISTS,\r\n                new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n            ];\r\n        }), [results, tokens]);\r\n}\r\nexport function usePair(tokenA, tokenB) {\r\n    return usePairs([[tokenA, tokenB]])[0];\r\n}","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString) {\r\n    return /^0x0*$/.test(hexNumberString);\r\n}","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport { addTransaction } from './actions';\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder() {\r\n    const { chainId, account } = useActiveWeb3React();\r\n    const dispatch = useDispatch();\r\n    return useCallback((response, { summary, approval, claim, } = {}) => {\r\n        if (!account)\r\n            return;\r\n        if (!chainId)\r\n            return;\r\n        const { hash } = response;\r\n        if (!hash) {\r\n            throw Error('No transaction hash found.');\r\n        }\r\n        dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }));\r\n    }, [dispatch, chainId, account]);\r\n}\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions() {\r\n    let _a;\r\n    const { chainId } = useActiveWeb3React();\r\n    const state = useSelector((s) => s.transactions);\r\n    // eslint-disable-next-line no-nested-ternary,no-cond-assign,no-void\r\n    return chainId ? (_a = state[chainId]) !== null && _a !== void 0 ? _a : {} : {};\r\n}\r\nexport function useIsTransactionPending(transactionHash) {\r\n    const transactions = useAllTransactions();\r\n    if (!transactionHash || !transactions[transactionHash])\r\n        return false;\r\n    return !transactions[transactionHash].receipt;\r\n}\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx) {\r\n    return new Date().getTime() - tx.addedTime < 86400000;\r\n}\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress, spender) {\r\n    const allTransactions = useAllTransactions();\r\n    return useMemo(() => typeof tokenAddress === 'string' &&\r\n        typeof spender === 'string' &&\r\n        Object.keys(allTransactions).some((hash) => {\r\n            const tx = allTransactions[hash];\r\n            if (!tx)\r\n                return false;\r\n            if (tx.receipt) {\r\n                return false;\r\n            }\r\n            const { approval } = tx;\r\n            if (!approval)\r\n                return false;\r\n            return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }), [allTransactions, spender, tokenAddress]);\r\n}","import styled from 'styled-components';\n\nconst Column = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nexport const ColumnCenter = styled(Column) `\n  width: 100%;\n  align-items: center;\n`;\nexport const AutoColumn = styled.div `\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`;\nexport default Column;\n","import { currencyEquals } from '@pancakeswap/sdk';\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index';\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(tradeA, tradeB, minimumDelta = ZERO_PERCENT) {\r\n    if (tradeA && !tradeB)\r\n        return false;\r\n    if (tradeB && !tradeA)\r\n        return true;\r\n    if (!tradeA || !tradeB)\r\n        return undefined;\r\n    if (tradeA.tradeType !== tradeB.tradeType ||\r\n        !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n        !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)) {\r\n        throw new Error('Trades are not comparable');\r\n    }\r\n    if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n        return tradeA.executionPrice.lessThan(tradeB.executionPrice);\r\n    }\r\n    return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);\r\n}\r\nexport default isTradeBetter;","import { Trade } from '@pancakeswap/sdk';\r\nimport flatMap from 'lodash/flatMap';\r\nimport { useMemo } from 'react';\r\nimport { isTradeBetter } from '../utils/trades';\r\nimport { useUserSingleHopOnly } from '../state/user/hooks';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES, BETTER_TRADE_LESS_HOPS_THRESHOLD, ADDITIONAL_BASES, } from '../config/constants/index';\r\nimport { PairState, usePairs } from './usePairs';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\nimport { useUnsupportedTokens } from './Tokens';\r\n\r\nfunction useAllCommonPairs(currencyA, currencyB) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const [tokenA, tokenB] = chainId\r\n        ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n        : [undefined, undefined];\r\n\r\n    const bases = useMemo(() => {\r\n        if (!chainId)\r\n            return [];\r\n        // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n        const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n        const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n        const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n        return [...common, ...additionalA, ...additionalB];\r\n    }, [chainId, tokenA, tokenB]);\r\n\r\n    const basePairs = useMemo(() => flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase])), [bases]);\r\n    const allPairCombinations = useMemo(() => tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base) => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base) => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n        ]\r\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            .filter(([tokenA_, tokenB_]) => {\r\n            if (!chainId)\r\n                return true;\r\n            const customBases = CUSTOM_BASES[chainId];\r\n            // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n            const customBasesA = customBases === null || customBases === undefined ? undefined : customBases[tokenA_.address];\r\n            // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n            const customBasesB = customBases === null || customBases === undefined ? undefined : customBases[tokenB_.address];\r\n            if (!customBasesA && !customBasesB)\r\n                return true;\r\n            if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base)))\r\n                return false;\r\n            if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base)))\r\n                return false;\r\n            return true;\r\n        })\r\n        : [], [tokenA, tokenB, bases, basePairs, chainId]);\r\n    const allPairs = usePairs(allPairCombinations);\r\n    // only pass along valid pairs, non-duplicated pairs\r\n    return useMemo(() => Object.values(allPairs\r\n        // filter out invalid pairs\r\n        .filter((result) => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n        // filter out duplicated pairs\r\n        .reduce((memo, [, curr]) => {\r\n        let _a;\r\n            // eslint-disable-next-line no-cond-assign,no-void\r\n        memo[curr.liquidityToken.address] = (_a = memo[curr.liquidityToken.address]) !== null && _a !== undefined ? _a : curr;\r\n        return memo;\r\n    }, {})), [allPairs]);\r\n}\r\nconst MAX_HOPS = 3;\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\n// eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\nexport function useTradeExactIn(currencyAmountIn, currencyOut) {\r\n    // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n    const allowedPairs = useAllCommonPairs(currencyAmountIn === null || currencyAmountIn === undefined ? undefined : currencyAmountIn.currency, currencyOut);\r\n    const [singleHopOnly] = useUserSingleHopOnly();\r\n    return useMemo(() => {\r\n        if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n            if (singleHopOnly) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                return Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ?? null\r\n            }\r\n            // search through trades with varying hops, find best trade out of them\r\n            let bestTradeSoFar = null;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 1; i <= MAX_HOPS; i++) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                const currentTrade = Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ?? null\r\n                // if current trade is best yet, save it\r\n                if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n                    bestTradeSoFar = currentTrade;\r\n                }\r\n            }\r\n            return bestTradeSoFar;\r\n        }\r\n        return null;\r\n    }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly]);\r\n}\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\n\r\nexport function useTradeExactOut(currencyIn, currencyAmountOut) {\r\n    // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n    const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut === null || currencyAmountOut === undefined ? undefined : currencyAmountOut.currency);\r\n    const [singleHopOnly] = useUserSingleHopOnly();\r\n    return useMemo(() => {\r\n        if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n            if (singleHopOnly) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                return Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ?? null\r\n            }\r\n            // search through trades with varying hops, find best trade out of them\r\n            let bestTradeSoFar = null;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 1; i <= MAX_HOPS; i++) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                const currentTrade = Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ?? null\r\n                if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n                    bestTradeSoFar = currentTrade;\r\n                }\r\n            }\r\n            return bestTradeSoFar;\r\n        }\r\n        return null;\r\n    }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly]);\r\n}\r\nexport function useIsTransactionUnsupported(currencyIn, currencyOut) {\r\n    const unsupportedTokens = useUnsupportedTokens();\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokenIn = wrappedCurrency(currencyIn, chainId);\r\n    const tokenOut = wrappedCurrency(currencyOut, chainId);\r\n    // if unsupported list loaded & either token on list, mark as unsupported\r\n    if (unsupportedTokens) {\r\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n            return true;\r\n        }\r\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import styled from 'styled-components';\r\nimport { Box } from '@pancakeswap/uikit';\r\n\r\nconst Row = styled(Box) `\r\n  width: ${({ width }) => width !== null && width !== undefined ? width : '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align !== null && align !== undefined ? align : 'center'};\r\n  justify-content: ${({ justify }) => justify !== null && justify !== undefined ? justify : 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`;\r\nexport const RowBetween = styled(Row) `\r\n  justify-content: space-between;\r\n`;\r\nexport const RowFlat = styled.div `\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\nexport const AutoRow = styled(Row) `\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`;\r\nexport const RowFixed = styled(Row) `\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`;\r\nexport default Row;","import { isAddress } from '../../utils';\r\nimport useENSAddress from './useENSAddress';\r\nimport useENSName from './useENSName';\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress) {\r\n    const validated = isAddress(nameOrAddress);\r\n    const reverseLookup = useENSName(validated || undefined);\r\n    const lookup = useENSAddress(nameOrAddress);\r\n    return {\r\n        loading: reverseLookup.loading || lookup.loading,\r\n        address: validated || lookup.address,\r\n        // eslint-disable-next-line no-nested-ternary\r\n        name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n    };\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport { isAddress, isZero } from '../../utils';\r\n\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\nimport useDebounce from '../useDebounce';\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address) {\r\n    let _a; let _b; let _c;\r\n    const debouncedAddress = useDebounce(address, 200);\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!debouncedAddress || !isAddress(debouncedAddress))\r\n            return [undefined];\r\n        try {\r\n            return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [debouncedAddress]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const resolverAddressResult = (_a = resolverAddress.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\r\n    const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\r\n    const changed = debouncedAddress !== address;\r\n    return {\r\n        // eslint-disable-next-line no-nested-ternary,no-cond-assign,no-void\r\n        ENSName: changed ? null : (_c = (_b = name.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: changed || resolverAddress.loading || name.loading,\r\n    };\r\n}","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport isZero from '../../utils/isZero';\r\n\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\nimport useDebounce from '../useDebounce';\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName) {\r\n    let _a; let _b; let _c;\r\n    const debouncedName = useDebounce(ensName, 200);\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!debouncedName)\r\n            return [undefined];\r\n        try {\r\n            return debouncedName ? [namehash(debouncedName)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [debouncedName]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-void,no-cond-assign\r\n    const resolverAddressResult = (_a = resolverAddress.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\r\n    const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\r\n    const changed = debouncedName !== ensName;\r\n    return {\r\n        // eslint-disable-next-line no-cond-assign,no-nested-ternary,no-void\r\n        address: changed ? null : (_c = (_b = addr.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: changed || resolverAddress.loading || addr.loading,\r\n    };\r\n}\r\n","import { parseUnits } from '@ethersproject/units';\r\nimport { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString';\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades';\r\nimport { isAddress } from '../../utils';\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices';\r\nimport { useCurrency } from '../../hooks/Tokens';\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport useENS from \"../../hooks/ENS/useENS\";\r\nimport { useCurrencyBalances } from '../wallet/hooks';\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions';\r\nimport { useUserSlippageTolerance } from '../user/hooks';\r\n\r\nexport function useSwapState() {\r\n    return useSelector((state) => state.swap);\r\n}\r\nexport function useSwapActionHandlers() {\r\n    const dispatch = useDispatch();\r\n    const onCurrencySelection = useCallback((field, currency) => {\r\n        dispatch(selectCurrency({\r\n            field,\r\n            // eslint-disable-next-line no-nested-ternary\r\n            currencyId: currency ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        }));\r\n    }, [dispatch]);\r\n    const onSwitchTokens = useCallback(() => {\r\n        dispatch(switchCurrencies());\r\n    }, [dispatch]);\r\n    const onUserInput = useCallback((field, typedValue) => {\r\n        dispatch(typeInput({ field, typedValue }));\r\n    }, [dispatch]);\r\n    const onChangeRecipient = useCallback((recipient) => {\r\n        dispatch(setRecipient({ recipient }));\r\n    }, [dispatch]);\r\n    return {\r\n        onSwitchTokens,\r\n        onCurrencySelection,\r\n        onUserInput,\r\n        onChangeRecipient,\r\n    };\r\n}\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value, currency) {\r\n    if (!value || !currency) {\r\n        return undefined;\r\n    }\r\n    try {\r\n        const typedValueParsed = parseUnits(value, currency.decimals).toString();\r\n        if (typedValueParsed !== '0') {\r\n            return currency instanceof Token\r\n                ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n                : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed));\r\n        }\r\n    }\r\n    catch (error) {\r\n        // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n        console.debug(`Failed to parse input amount: \"${value}\"`, error);\r\n    }\r\n    // necessary for all paths to return a value\r\n    return undefined;\r\n}\r\nconst BAD_RECIPIENT_ADDRESSES = [\r\n    '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\r\n    '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a',\r\n    '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\r\n];\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade, checksummedAddress) {\r\n    return (trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n        trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress));\r\n}\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo() {\r\n    let _a; let _b;\r\n    const { account } = useActiveWeb3React();\r\n\r\n    const {\r\n        independentField,\r\n        typedValue,\r\n        [Field.INPUT]: {\r\n            currencyId: inputCurrencyId\r\n        },\r\n        [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId\r\n        },\r\n        recipient,\r\n    } = useSwapState();\r\n\r\n    const inputCurrency = useCurrency(inputCurrencyId);\r\n    const outputCurrency = useCurrency(outputCurrencyId);\r\n\r\n    const recipientLookup = useENS(recipient !== null && recipient !== undefined ? recipient : undefined);\r\n    // eslint-disable-next-line no-cond-assign\r\n    const to = (_a = (recipient === null ? account : recipientLookup.address)) !== null && _a !== undefined ? _a : null;\r\n    const relevantTokenBalances = useCurrencyBalances(account !== null && account !== undefined ? account : undefined, [\r\n        inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined,\r\n        outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined,\r\n    ]);\r\n    const isExactIn = independentField === Field.INPUT;\r\n    // eslint-disable-next-line no-cond-assign\r\n    const parsedAmount = tryParseAmount(typedValue, (_b = (isExactIn ? inputCurrency : outputCurrency)) !== null && _b !== undefined ? _b : undefined);\r\n\r\n    const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined);\r\n    const bestTradeExactOut = useTradeExactOut(inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined, !isExactIn ? parsedAmount : undefined);\r\n\r\n    const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut;\r\n    const currencyBalances = {\r\n        [Field.INPUT]: relevantTokenBalances[0],\r\n        [Field.OUTPUT]: relevantTokenBalances[1],\r\n    };\r\n    const currencies = {\r\n        [Field.INPUT]: inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined,\r\n        [Field.OUTPUT]: outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined,\r\n    };\r\n    let inputError;\r\n    if (!account) {\r\n        inputError = 'Connect Wallet';\r\n    }\r\n    if (!parsedAmount) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Enter an amount';\r\n    }\r\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Select a token';\r\n    }\r\n    const formattedTo = isAddress(to);\r\n    if (!to || !formattedTo) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Enter a recipient';\r\n    }\r\n    else if (BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n        (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n        (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Invalid recipient';\r\n    }\r\n    const [allowedSlippage] = useUserSlippageTolerance();\r\n    const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage);\r\n    // compare input balance to max input based on version\r\n    const [balanceIn, amountIn] = [\r\n        currencyBalances[Field.INPUT],\r\n        slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n    ];\r\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n        // eslint-disable-next-line no-sequences\r\n        inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n    }\r\n    return {\r\n        currencies,\r\n        currencyBalances,\r\n        parsedAmount,\r\n        v2Trade: v2Trade !== null && v2Trade !== undefined ? v2Trade : undefined,\r\n        inputError,\r\n    };\r\n}\r\nfunction parseCurrencyFromURLParameter(urlParam) {\r\n    if (typeof urlParam === 'string') {\r\n        const valid = isAddress(urlParam);\r\n        if (valid)\r\n            return valid;\r\n        if (urlParam.toUpperCase() === 'BNB')\r\n            return 'BNB';\r\n        if (valid === false)\r\n            return 'BNB';\r\n    }\r\n    return 'BNB';\r\n}\r\nfunction parseTokenAmountURLParameter(urlParam) {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : '';\r\n}\r\nfunction parseIndependentFieldURLParameter(urlParam) {\r\n    return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT;\r\n}\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nfunction validatedRecipient(recipient) {\r\n    if (typeof recipient !== 'string')\r\n        return null;\r\n    const address = isAddress(recipient);\r\n    if (address)\r\n        return address;\r\n    if (ENS_NAME_REGEX.test(recipient))\r\n        return recipient;\r\n    if (ADDRESS_REGEX.test(recipient))\r\n        return recipient;\r\n    return null;\r\n}\r\nexport function queryParametersToSwapState(parsedQs) {\r\n    let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency);\r\n    let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency);\r\n\r\n    if (inputCurrency === outputCurrency) {\r\n        if (typeof parsedQs.outputCurrency === 'string') {\r\n            inputCurrency = '';\r\n        }\r\n        else {\r\n            outputCurrency = '';\r\n        }\r\n    }\r\n    const recipient = validatedRecipient(parsedQs.recipient);\r\n    return {\r\n        [Field.INPUT]: {\r\n            currencyId: inputCurrency,\r\n        },\r\n        [Field.OUTPUT]: {\r\n            currencyId: outputCurrency,\r\n        },\r\n        typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n        independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n        recipient,\r\n    };\r\n}\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch() {\r\n    const { chainId } = useActiveWeb3React();\r\n    const dispatch = useDispatch();\r\n    const parsedQs = useParsedQueryString();\r\n    const [result, setResult] = useState();\r\n    useEffect(() => {\r\n        if (!chainId)\r\n            return;\r\n        const parsed = queryParametersToSwapState(parsedQs);\r\n        dispatch(replaceSwapState({\r\n            typedValue: parsed.typedValue,\r\n            field: parsed.independentField,\r\n            inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n            outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n            recipient: null,\r\n        }));\r\n        setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, chainId]);\r\n    return result;\r\n}","import { parse } from 'qs';\r\nimport { useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function useParsedQueryString() {\r\n    const { search } = useLocation();\r\n    return useMemo(() => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}), [search]);\r\n}\r\n","import { TokenAmount } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useTokenContract } from './useContract';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\n\r\nfunction useTokenAllowance(token, owner, spender) {\r\n    // eslint-disable-next-line no-void\r\n    const contract = useTokenContract(token === null || token === void 0 ? void 0 : token.address, false);\r\n    const inputs = useMemo(() => [owner, spender], [owner, spender]);\r\n    const allowance = useSingleCallResult(contract, 'allowance', inputs).result;\r\n    return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [token, allowance]);\r\n}\r\nexport default useTokenAllowance;","import { MaxUint256 } from '@ethersproject/constants';\r\nimport { TokenAmount, ETHER } from '@pancakeswap/sdk';\r\nimport { useCallback, useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { PC_ROUTER_ADDRESS } from '../config/config';\r\nimport useTokenAllowance from './useTokenAllowance';\r\nimport { Field } from '../state/swap/actions';\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\r\nimport { calculateGasMargin } from '../utils';\r\nimport { useTokenContract } from './useContract';\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice';\r\n\r\nexport const ApprovalState = {\r\n    \"UNKNOWN\": 0,\r\n    \"NOT_APPROVED\": 1,\r\n    \"PENDING\": 2,\r\n    \"APPROVED\": 3\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(amountToApprove, spender) {\r\n    const { account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\r\n    const currentAllowance = useTokenAllowance(token, account !== null && account !== undefined ? account : undefined, spender);\r\n    const pendingApproval = useHasPendingApproval(token === null || token === undefined ? undefined : token.address, spender);\r\n    // check the current approval status\r\n    const approvalState = useMemo(() => {\r\n        if (!amountToApprove || !spender)\r\n            return ApprovalState.UNKNOWN;\r\n        if (amountToApprove.currency === ETHER)\r\n            return ApprovalState.APPROVED;\r\n        // we might not have enough data to know whether or not we need to approve\r\n        if (!currentAllowance)\r\n            return ApprovalState.UNKNOWN;\r\n        console.log(amountToApprove)\r\n        // amountToApprove will be defined if currentAllowance is\r\n        // eslint-disable-next-line no-nested-ternary\r\n        return currentAllowance.lessThan(amountToApprove)\r\n            ? pendingApproval\r\n                ? ApprovalState.PENDING\r\n                : ApprovalState.NOT_APPROVED\r\n            : ApprovalState.APPROVED;\r\n    }, [amountToApprove, currentAllowance, pendingApproval, spender]);\r\n    const tokenContract = useTokenContract(token === null || token === undefined ? undefined : token.address);\r\n    const addTransaction = useTransactionAdder();\r\n    const approve = useCallback(async () => {\r\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n            console.error('approve was called unnecessarily');\r\n            return;\r\n        }\r\n        if (!token) {\r\n            console.error('no token');\r\n            return;\r\n        }\r\n        if (!tokenContract) {\r\n            console.error('tokenContract is null');\r\n            return;\r\n        }\r\n        if (!amountToApprove) {\r\n            console.error('missing amount to approve');\r\n            return;\r\n        }\r\n        if (!spender) {\r\n            console.error('no spender');\r\n            return;\r\n        }\r\n        let useExact = false;\r\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n            // general fallback for tokens who restrict approval amounts\r\n            useExact = true;\r\n            return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\r\n        });\r\n        // eslint-disable-next-line consistent-return\r\n        return callWithGasPrice(tokenContract, 'approve', [spender, useExact ? amountToApprove.raw.toString() : MaxUint256], {\r\n            gasLimit: calculateGasMargin(estimatedGas),\r\n        })\r\n            .then((response) => {\r\n            addTransaction(response, {\r\n                summary: `Approve ${amountToApprove.currency.symbol}`,\r\n                approval: { tokenAddress: token.address, spender },\r\n            });\r\n        })\r\n            .catch((error) => {\r\n            console.error('Failed to approve token', error);\r\n            throw error;\r\n        });\r\n    }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice]);\r\n    return [approvalState, approve];\r\n}\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade, allowedSlippage = 0) {\r\n    const amountToApprove = useMemo(() => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined), [trade, allowedSlippage]);\r\n    return useApproveCallback(amountToApprove, PC_ROUTER_ADDRESS);\r\n}\r\n\r\nexport function useApproveCallbackForRemove(pairToApprove, spender) {\r\n    const { account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const token = pairToApprove ? pairToApprove.liquidityToken : undefined;\r\n    const currentAllowance = useTokenAllowance(token, account !== null && account !== undefined ? account : undefined, spender);\r\n    const pendingApproval = useHasPendingApproval(token === null || token === undefined ? undefined : token.address, spender);\r\n    // check the current approval status\r\n    const approvalState = useMemo(() => {\r\n        if (!pairToApprove || !spender)\r\n            return ApprovalState.UNKNOWN;\r\n        if (pairToApprove.currency === ETHER)\r\n            return ApprovalState.APPROVED;\r\n        // we might not have enough data to know whether or not we need to approve\r\n        if (!currentAllowance)\r\n            return ApprovalState.UNKNOWN;\r\n        // pairToApprove will be defined if currentAllowance is\r\n        // eslint-disable-next-line no-nested-ternary\r\n        return parseFloat(currentAllowance.toFixed(2)) <= 0\r\n            ? pendingApproval\r\n                ? ApprovalState.PENDING\r\n                : ApprovalState.NOT_APPROVED\r\n            : ApprovalState.APPROVED;\r\n    }, [pairToApprove, currentAllowance, pendingApproval, spender]);\r\n    const tokenContract = useTokenContract(token === null || token === undefined ? undefined : token.address);\r\n    const addTransaction = useTransactionAdder();\r\n    const approve = useCallback(async () => {\r\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n            console.error('approve was called unnecessarily');\r\n            return;\r\n        }\r\n        if (!token) {\r\n            console.error('no token');\r\n            return;\r\n        }\r\n        if (!tokenContract) {\r\n            console.error('tokenContract is null');\r\n            return;\r\n        }\r\n        if (!pairToApprove) {\r\n            console.error('missing amount to approve');\r\n            return;\r\n        }\r\n        if (!spender) {\r\n            console.error('no spender');\r\n            return;\r\n        }\r\n        let useExact = false;\r\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n            // general fallback for tokens who restrict approval amounts\r\n            useExact = true;\r\n            return tokenContract.estimateGas.approve(spender, pairToApprove.raw.toString());\r\n        });\r\n        // eslint-disable-next-line consistent-return\r\n        return callWithGasPrice(tokenContract, 'approve', [spender, useExact ? pairToApprove.raw.toString() : MaxUint256], {\r\n            gasLimit: calculateGasMargin(estimatedGas),\r\n        })\r\n            .then((response) => {\r\n                addTransaction(response, {\r\n                    summary: `Approve ${pairToApprove.liquidityToken.symbol}`,\r\n                    approval: { tokenAddress: token.address, spender },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Failed to approve token', error);\r\n                throw error;\r\n            });\r\n    }, [approvalState, token, tokenContract, pairToApprove, spender, addTransaction, callWithGasPrice]);\r\n    return [approvalState, approve];\r\n}\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk';\r\nimport { MIN_BNB } from '../config/constants/index';\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount) {\r\n    if (!currencyAmount)\r\n        return undefined;\r\n    if (currencyAmount.currency === ETHER) {\r\n        if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n            return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB));\r\n        }\r\n        return CurrencyAmount.ether(JSBI.BigInt(0));\r\n    }\r\n    return currencyAmount;\r\n}\r\nexport default maxAmountSpend;\r\n","import { useMemo } from 'react';\r\nimport contenthashToUri from '../utils/contenthashToUri';\r\nimport { parseENSAddress } from '../utils/ENS/parseENSAddress';\r\nimport uriToHttp from '../utils/uriToHttp';\r\nimport useENSContentHash from './ENS/useENSContentHash';\r\n\r\nexport default function useHttpLocations(uri) {\r\n    const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri]);\r\n    const resolvedContentHash = useENSContentHash(ens === null || ens === undefined ? undefined : ens.ensName);\r\n    return useMemo(() => {\r\n        if (ens) {\r\n            return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : [];\r\n        }\r\n        return uri ? uriToHttp(uri) : [];\r\n    }, [ens, resolvedContentHash.contenthash, uri]);\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport isZero from '../../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName) {\r\n    let _a; let _b; let _c;\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!ensName)\r\n            return [undefined];\r\n        try {\r\n            return ensName ? [namehash(ensName)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [ensName]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-void,no-cond-assign\r\n    const resolverAddress = (_a = resolverAddressResult.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress, false);\r\n    const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument);\r\n    return {\r\n        // eslint-disable-next-line no-cond-assign,no-void\r\n        contenthash: (_c = (_b = contenthash.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: resolverAddressResult.loading || contenthash.loading,\r\n    };\r\n}\r\n","const getTokenLogoURL = (address) => `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`;\r\nexport default getTokenLogoURL;","import React, { useState } from 'react';\r\nimport { HelpIcon } from '@pancakeswap/uikit';\r\n\r\nfunction __rest (s, e) {\r\n    const t = {};\r\n    // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top,no-plusplus,no-redeclare\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\nconst BAD_SRCS = {};\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo = (_a) => {\r\n    const { srcs, alt } = _a; const rest = __rest(_a, [\"srcs\", \"alt\"]);\r\n    const [, refresh] = useState(0);\r\n    const src = srcs.find((s) => !BAD_SRCS[s]);\r\n    if (src) {\r\n        return (React.createElement(\"img\", { ...rest, alt, src, onError: () => {\r\n                if (src)\r\n                    BAD_SRCS[src] = true;\r\n                refresh((i) => i + 1);\r\n            }}));\r\n    }\r\n    return React.createElement(HelpIcon, { ...rest});\r\n};\r\nexport default Logo;","import { ETHER, Token } from '@pancakeswap/sdk';\r\nimport { BinanceIcon } from '@pancakeswap/uikit';\r\nimport React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport useHttpLocations from '../../hooks/useHttpLocations';\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL';\r\nimport Logo from './Logo';\r\n\r\nconst StyledLogo = styled(Logo) `\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`;\r\nexport default function CurrencyLogo({ currency, size = '24px', style, }) {\r\n    let _a;\r\n    const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\r\n    const srcs = useMemo(() => {\r\n        if (currency === ETHER)\r\n            return [];\r\n        if (currency instanceof Token) {\r\n            if (currency instanceof WrappedTokenInfo) {\r\n                return [...uriLocations, getTokenLogoURL(currency.address)];\r\n            }\r\n            return [getTokenLogoURL(currency.address)];\r\n        }\r\n        return [];\r\n    }, [currency, uriLocations]);\r\n    if (currency === ETHER) {\r\n        return React.createElement(BinanceIcon, { width: size, style });\r\n    }\r\n    // eslint-disable-next-line no-cond-assign\r\n    return React.createElement(StyledLogo, { size, srcs, alt: `${(_a = currency === null || currency === undefined ? undefined : currency.symbol) !== null && _a !== undefined ? _a : 'token'} logo`, style });\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CurrencyLogo from './CurrencyLogo';\r\n\r\nconst Wrapper = styled.div `\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`;\r\nexport default function DoubleCurrencyLogo({ currency0, currency1, size = 20, margin = false, }) {\r\n    return (React.createElement(Wrapper, { margin },\r\n        currency0 && React.createElement(CurrencyLogo, { currency: currency0, size: `${size.toString()}px`, style: { marginRight: '4px' } }),\r\n        currency1 && React.createElement(CurrencyLogo, { currency: currency1, size: `${size.toString()}px` })));\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useHttpLocations from '../../hooks/useHttpLocations';\r\nimport Logo from './Logo';\r\n\r\nconst StyledListLogo = styled(Logo) `\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`;\r\nexport default function ListLogo({ logoURI, style, size = '24px', alt, }) {\r\n    const srcs = useHttpLocations(logoURI);\r\n    return React.createElement(StyledListLogo, { alt, size, srcs, style });\r\n}\r\n","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline() {\r\n    const ttl = useSelector((state) => state.user.userDeadline);\r\n    const blockTimestamp = useCurrentBlockTimestamp();\r\n    return useMemo(() => {\r\n        if (blockTimestamp && ttl)\r\n            return blockTimestamp.add(ttl);\r\n        return undefined;\r\n    }, [blockTimestamp, ttl]);\r\n}","import { useSingleCallResult } from '../state/multicall/hooks';\r\nimport { useMulticallContract } from './useContract';\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp() {\r\n    let _a; let _b;\r\n    const multicall = useMulticallContract();\r\n    // eslint-disable-next-line no-cond-assign\r\n    return (_b = (_a = useSingleCallResult(multicall, 'getCurrentBlockTimestamp')) === null || _a === undefined ? undefined : _a.result) === null || _b === undefined ? undefined : _b[0];\r\n}","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m6.14 11.86-2.78 2.79c-.19.2-.19.51 0 .71l2.78 2.79c.31.32.85.09.85-.35V16H13c.55 0 1-.45 1-1s-.45-1-1-1H6.99v-1.79c0-.45-.54-.67-.85-.35zm14.51-3.21-2.78-2.79c-.31-.32-.85-.09-.85.35V8H11c-.55 0-1 .45-1 1s.45 1 1 1h6.01v1.79c0 .45.54.67.85.35l2.78-2.79c.2-.19.2-.51.01-.7z\"\n}), 'SwapHorizRounded');","import PropTypes from 'prop-types'\r\nimport {Avatar, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\n\r\nListToken.propTypes = {\r\n    currency: PropTypes.any,\r\n    item: PropTypes.any,\r\n    selectedToken: PropTypes.any,\r\n    tokenSelected: PropTypes.func\r\n}\r\nexport default function ListToken ({currency, item, selectedToken, tokenSelected}) {\r\n    const {account} = useActiveWeb3React()\r\n    const currencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n\r\n    return (\r\n        <ListItem\r\n            key={item?.address} button selected={(selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()) || (selectedToken?.symbol?.toLowerCase() === item?.symbol?.toLowerCase())}\r\n            onClick={() => {tokenSelected(item)}}\r\n            disabled={selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()}\r\n            secondaryAction={\r\n                <Typography\r\n                >\r\n                    {`${currencyBalance?.toSignificant(6) ?? 'Loading'}`}\r\n                </Typography>\r\n            }\r\n        >\r\n            <ListItemAvatar>\r\n                <Avatar\r\n                    src={`${item?.tokenImg}?w=248&fit=crop&auto=format`}\r\n                    srcSet={`${item?.tokenImg}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n                    alt={item?.name}\r\n                    loading=\"lazy\"\r\n                />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={item?.name}\r\n                secondary={item?.symbol}\r\n            />\r\n        </ListItem>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport {useEffect, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Grid, ImageList, ImageListItem, ImageListItemBar, ListSubheader, Paper, IconButton,\r\n    TextField,\r\n    Typography, ListItem, List, ListItemAvatar, ListItemText, Avatar, DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {ArrowDropDown, InfoOutlined} from \"@material-ui/icons\";\r\nimport {LoadingButton} from \"@material-ui/lab\";\r\nimport {useDispatch, useSelector} from \"../../redux/store\";\r\nimport {getPoolTokens} from \"../../redux/slices/tokens\";\r\nimport {escapeRegExp} from \"../../utils\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {CurrencyLogo} from \"../../components/Logo/index\";\r\nimport ListToken from \"./ListToken\";\r\nimport {mainnetTokens} from \"../../config/tokens\";\r\n\r\nTokenSelect.propTypes = {\r\n    tokenSymbol: PropTypes.string.isRequired,\r\n    isMax: PropTypes.bool,\r\n    showApprove: PropTypes.bool,\r\n    tokenAddress: PropTypes.string,\r\n    label: PropTypes.string,\r\n    placeHolder: PropTypes.string,\r\n    inputValue: PropTypes.number,\r\n    tokenImg: PropTypes.string,\r\n    onItemChange: PropTypes.func,\r\n    onInputChange: PropTypes.func,\r\n    onApprove: PropTypes.func,\r\n    approveText: PropTypes.any,\r\n    onMax: PropTypes.func,\r\n    selectedToken: PropTypes.any,\r\n    isDisabled: PropTypes.bool\r\n}\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`)\r\n\r\nexport default function TokenSelect(\r\n    {\r\n        tokenSymbol = \"bnb\",\r\n        isMax=false,\r\n        tokenAddress=\"\",\r\n        label=\"\",\r\n        placeHolder=\"\",\r\n        inputValue=\"\",\r\n        onInputChange=null,\r\n        onItemChange=null,\r\n        tokenImg='./tokens/bnb.png',\r\n        showApprove=true,\r\n        onApprove=null,\r\n        approveText='',\r\n        onMax=null,\r\n        selectedToken,\r\n        isDisabled= true\r\n    }\r\n) {\r\n    const [symbol, setSymbol] = useState(tokenSymbol);\r\n    const [token, setToken] = useState(tokenImg);\r\n    const [address, setAddress] = useState(tokenAddress);\r\n    const { account } = useActiveWeb3React()\r\n\r\n    const [isDialogOpen, setDialog] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { tokens, pooltokens } = useSelector((state) => state.tokens);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPoolTokens());\r\n    }, [dispatch]);\r\n\r\n    const selectDialog = () => {\r\n        setDialog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialog(false)\r\n    }\r\n\r\n    const tokenSelected = (item) => {\r\n        console.log(item)\r\n        setToken(item.tokenImg)\r\n        setAddress(item.address)\r\n        setSymbol(item.symbol)\r\n        setDialog(false)\r\n        onItemChange(item)\r\n    }\r\n\r\n    const enforcer = (nextUserInput) => {\r\n        if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n            onInputChange(nextUserInput)\r\n        }\r\n    }\r\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, selectedToken ?? undefined)\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{maxWidth: 620}}>\r\n                <CardContent sx={{background: '#e7e9ec', margin: '5px', borderRadius:'inherit'}}>\r\n                    <div>\r\n                        <p>\r\n                            {selectedToken\r\n                                ? `Balance: ${selectedCurrencyBalance?.toSignificant(6) ?? 'Loading' } `\r\n                                : ' - '}\r\n                            {\r\n                                (account && isMax && selectedToken) &&\r\n                                <Button variant=\"outlined\" style={{marginLeft:'3px'}} onClick={onMax} size=\"small\">Max</Button>\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                    <div style={{marginTop: '5px'}}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={10}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    fullWidth\r\n                                    value={inputValue}\r\n                                    variant=\"filled\"\r\n                                    label={label}\r\n                                    placeholder={placeHolder}\r\n                                    title={label}\r\n                                    onChange={(event) => {\r\n                                        enforcer(event.target.value.replace(/,/g, '.'))\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} md={2} sx={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                                <Button onClick={selectDialog} variant='text' sx={{padding:'5px'}}>\r\n                                    <CurrencyLogo currency={selectedToken} />\r\n                                    <Typography sx={{marginLeft:'5px'}}>\r\n                                        {(selectedToken && selectedToken.symbol && selectedToken.symbol.length > 20\r\n                                            ? `${selectedToken.symbol.slice(0, 4)}...${selectedToken.symbol.slice(\r\n                                                selectedToken.symbol.length - 5,\r\n                                                selectedToken.symbol.length,\r\n                                            )}`\r\n                                            : selectedToken?.symbol) || 'Select token'}\r\n                                    </Typography>\r\n                                    <ArrowDropDown />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    {\r\n                        showApprove !== 0 && <Button\r\n                            variant='outlined'\r\n                            disabled={symbol.toLowerCase() === \"bnb\" ? true : isDisabled}\r\n                            onClick={onApprove}\r\n                            sx={{marginTop:'7px'}}\r\n                        >\r\n                            {\r\n                                approveText\r\n                            }\r\n                        </Button>\r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n                open={isDialogOpen} onClose={handleClose}>\r\n                <DialogTitle>\r\n                    Select Token\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        !pooltokens && <LoadingButton loading>Loading Token List...</LoadingButton>\r\n                    }\r\n                    <List cols={4} gap={8}>\r\n                        {pooltokens?.map((tokenItem) => (\r\n                            <ListToken item={tokenItem} tokenSelected={tokenSelected} selectedToken={selectedToken} currency={tokenItem} />\r\n                        ))}\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { TokenAmount, Pair } from '@udegoswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const PairState = {\r\n    \"LOADING\": 0,\r\n    \"NOT_EXISTS\": 1,\r\n    \"EXISTS\": 2,\r\n    \"INVALID\": 3,\r\n}\r\n\r\nexport function useUDEPairs(currencies) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useMemo(() => currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n    ]), [chainId, currencies]);\r\n\r\n    const pairAddresses = useMemo(() => tokens.map(([tokenA, tokenB]) => tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined), [tokens]);\r\n    const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\r\n\r\n    return useMemo(() => results.map((result, i) => {\r\n        const { result: reserves, loading } = result;\r\n        const tokenA = tokens[i][0];\r\n        const tokenB = tokens[i][1];\r\n\r\n        if (loading)\r\n            return [PairState.LOADING, null];\r\n        if (!tokenA || !tokenB || tokenA.equals(tokenB))\r\n            return [PairState.INVALID, null];\r\n        if (!reserves)\r\n            return [PairState.NOT_EXISTS, null];\r\n        const { reserve0, reserve1 } = reserves;\r\n        const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\r\n\r\n        return [\r\n            PairState.EXISTS,\r\n            new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n        ];\r\n    }), [results, tokens]);\r\n}\r\nexport function useUDEPair(tokenA, tokenB) {\r\n    return useUDEPairs([[tokenA, tokenB]])[0];\r\n}","import { TokenAmount } from '@pancakeswap/sdk';\r\nimport { useTokenContract } from './useContract';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token) {\r\n    const contract = useTokenContract(token?.address, false)\r\n    const totalSupply = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n    return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined;\r\n}\r\nexport default useTotalSupply;","import {CurrencyAmount, ETHER, JSBI, Percent, Price, Token} from '@udegoswap/sdk';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useActiveWeb3React from '../../hooks/useWeb3';\r\nimport { PairState, useUDEPair } from '../../hooks/useUDEPairs';\r\nimport useTotalSupply from '../../hooks/useTotalSupply';\r\n\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from '../../utils/wrappedCurrency';\r\nimport { tryParseAmount } from '../swap/hooks';\r\nimport { useCurrencyBalances } from '../wallet/hooks';\r\nimport { Field, typeInput } from './actions';\r\nimport {lessThan} from \"../../utils\";\r\n\r\nconst ZERO = JSBI.BigInt(0);\r\nexport function useMintState() {\r\n    return useSelector((state) => state.mint);\r\n}\r\nexport function useMintActionHandlers(noLiquidity) {\r\n    const dispatch = useDispatch();\r\n    const onFieldAInput = useCallback((typedValue) => {\r\n        dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }));\r\n    }, [dispatch, noLiquidity]);\r\n    const onFieldBInput = useCallback((typedValue) => {\r\n        dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }));\r\n    }, [dispatch, noLiquidity]);\r\n    return {\r\n        onFieldAInput,\r\n        onFieldBInput,\r\n    };\r\n}\r\nexport function useDerivedMintInfo(currencyA, currencyB) {\r\n    const { account, chainId } = useActiveWeb3React();\r\n    const { independentField, typedValue, otherTypedValue } = useMintState();\r\n    const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A;\r\n    // tokens\r\n    const currencies = useMemo(() => ({\r\n        [Field.CURRENCY_A]: currencyA !== null && currencyA !== undefined ? currencyA : undefined,\r\n        [Field.CURRENCY_B]: currencyB !== null && currencyB !== undefined ? currencyB : undefined,\r\n    }), [currencyA, currencyB]);\r\n    // pair\r\n    const [pairState, pair] = useUDEPair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]);\r\n    const totalSupply = useTotalSupply(pair === null || pair === undefined ? undefined : pair.liquidityToken);\r\n    const noLiquidity = pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO));\r\n    // balances\r\n    const balances = useCurrencyBalances(account !== null && account !== undefined ? account : undefined, [\r\n        currencies[Field.CURRENCY_A],\r\n        currencies[Field.CURRENCY_B],\r\n    ]);\r\n\r\n    const currencyBalances = {\r\n        [Field.CURRENCY_A]: balances[0],\r\n        [Field.CURRENCY_B]: balances[1],\r\n    };\r\n    // amounts\r\n    const independentAmount = tryParseAmount(typedValue, currencies[independentField]);\r\n    const dependentAmount = useMemo(() => {\r\n        if (noLiquidity) {\r\n            if (otherTypedValue && currencies[dependentField]) {\r\n                return tryParseAmount(otherTypedValue, currencies[dependentField]);\r\n            }\r\n            return undefined;\r\n        }\r\n        if (independentAmount) {\r\n            // we wrap the currencies just to get the price in terms of the other token\r\n            const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId);\r\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)];\r\n            if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n                const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA;\r\n                const dependentTokenAmount = dependentField === Field.CURRENCY_B\r\n                    ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n                    : pair.priceOf(tokenB).quote(wrappedIndependentAmount);\r\n\r\n                return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount;\r\n            }\r\n            return undefined;\r\n        }\r\n        return undefined;\r\n    }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair]);\r\n    const parsedAmounts = useMemo(() => ({\r\n        [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n        [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }), [dependentAmount, independentAmount, independentField]);\r\n    const price = useMemo(() => {\r\n        if (noLiquidity) {\r\n            const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts;\r\n            if (currencyAAmount && currencyBAmount) {\r\n                return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw);\r\n            }\r\n            return undefined;\r\n        }\r\n        const wrappedCurrencyA = wrappedCurrency(currencyA, chainId);\r\n        return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined;\r\n    }, [chainId, currencyA, noLiquidity, pair, parsedAmounts]);\r\n    // liquidity minted\r\n    const liquidityMinted = useMemo(() => {\r\n        const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts;\r\n        const [tokenAmountA, tokenAmountB] = [\r\n            wrappedCurrencyAmount(currencyAAmount, chainId),\r\n            wrappedCurrencyAmount(currencyBAmount, chainId),\r\n        ];\r\n\r\n        if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n            // console.log(tokenAmountA, tokenAmountB)\r\n            return undefined\r\n        }\r\n        return undefined;\r\n    }, [parsedAmounts, chainId, pair, totalSupply]);\r\n    const poolTokenPercentage = useMemo(() => {\r\n        if (liquidityMinted && totalSupply) {\r\n            return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw);\r\n        }\r\n        return undefined;\r\n    }, [liquidityMinted, totalSupply]);\r\n    let error;\r\n    if (!account) {\r\n        error = 'Connect Wallet';\r\n    }\r\n    if (pairState === PairState.INVALID) {\r\n        error = error !== null && error !== undefined ? error : 'Invalid pair';\r\n    }\r\n    if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n        error = error !== null && error !== undefined ? error : 'Enter an amount';\r\n    }\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts;\r\n    if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A] && lessThan(currencyBalances?.[Field.CURRENCY_A], (currencyAAmount))) {\r\n        error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`;\r\n    }\r\n\r\n    if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B] && lessThan(currencyBalances?.[Field.CURRENCY_B], (currencyBAmount))) {\r\n        error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\r\n    }\r\n    return {\r\n        dependentField,\r\n        currencies,\r\n        pair,\r\n        pairState,\r\n        currencyBalances,\r\n        parsedAmounts,\r\n        price,\r\n        noLiquidity,\r\n        liquidityMinted,\r\n        poolTokenPercentage,\r\n        error,\r\n    };\r\n}","import { ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency) {\r\n    if (currency === ETHER) return 'BNB'\r\n    if (currency) return currency.address\r\n    throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { ONE_BIPS } from '../../config/constants/index'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n      currencies,\r\n      noLiquidity,\r\n      poolTokenPercentage,\r\n      price,\r\n}) {\r\n\r\n    return (\r\n        <AutoColumn gap=\"md\">\r\n            <AutoRow justify=\"space-around\" gap=\"4px\">\r\n                <AutoColumn justify=\"center\">\r\n                    <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n                    <Text fontSize=\"14px\" pt={1}>\r\n                        {`${currencies[Field.CURRENCY_B]?.symbol ?? ''} per ${currencies[Field.CURRENCY_A]?.symbol ?? ''}`}\r\n                    </Text>\r\n                </AutoColumn>\r\n                <AutoColumn justify=\"center\">\r\n                    <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n                    <Text fontSize=\"14px\" pt={1}>\r\n                        {`${currencies[Field.CURRENCY_A]?.symbol ?? ''} per ${currencies[Field.CURRENCY_B]?.symbol ?? ''}`}\r\n                    </Text>\r\n                </AutoColumn>\r\n                <AutoColumn justify=\"center\">\r\n                    <Text>\r\n                        {noLiquidity && price\r\n                            ? '100'\r\n                            : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n                        %\r\n                    </Text>\r\n                    <Text fontSize=\"14px\" pt={1}>\r\n                        Share of Pool\r\n                    </Text>\r\n                </AutoColumn>\r\n            </AutoRow>\r\n        </AutoColumn>\r\n    )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import PropTypes from 'prop-types';\r\nimport {Button, Card, CardContent, CardHeader, Grid} from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {JSBI, Percent} from \"@pancakeswap/sdk\";\r\nimport Dots from \"../../../components/Loader/Dots\";\r\nimport {unwrappedToken} from \"../../../utils/wrappedCurrency\";\r\nimport {useTokenBalance} from \"../../../state/wallet/hooks\";\r\nimport useTotalSupply from \"../../../hooks/useTotalSupply\";\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport {ApprovalState, useApproveCallbackForRemove} from \"../../../hooks/useApproveCallback\";\r\nimport {UDE_ROUTER} from \"../../../config/config\";\r\nimport {getContract, getDeadline, getMin, showError, showPromise} from \"../../../config/helpers\";\r\nimport tokenAbi, {pairABI, routerABI} from \"../../../config/abis\";\r\n\r\nPoolDetails.propTypes = {\r\n    pair: PropTypes.any\r\n}\r\n\r\nexport function PoolDetails({pair}) {\r\n    const {account, library} = useActiveWeb3React()\r\n\r\n    const currency0 = unwrappedToken(pair.token0)\r\n    const currency1 = unwrappedToken(pair.token1)\r\n\r\n    const [showMore, setShowMore] = useState(false)\r\n\r\n    const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n    const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n    const [isApproveRemove, approvePairCallback] = useApproveCallbackForRemove(pair, UDE_ROUTER)\r\n\r\n    const removeLiquid = async () => {\r\n        try{\r\n            const router = await getContract(UDE_ROUTER, routerABI, library.getSigner())\r\n            const pairC = await getContract(pair.liquidityToken.address, pairABI, library.getSigner())\r\n            if(router != null) {\r\n                const totalSupp = await pairC.totalSupply()\r\n\r\n                const getTokenAAddr = await pairC.token0()\r\n                const getTokenBAddr = await pairC.token1()\r\n\r\n                const tempTokenAContract = await getContract(getTokenAAddr, tokenAbi, library.getSigner())\r\n                const tempTokenBContract = await getContract(getTokenBAddr, tokenAbi, library.getSigner())\r\n\r\n                const total0Supp = await tempTokenAContract.balanceOf(pairC.address)\r\n                const total1Supp = await tempTokenBContract.balanceOf(pairC.address)\r\n\r\n                const lpTokens = await pairC.balanceOf(account)\r\n                const token0Amount = (lpTokens * total0Supp) / totalSupp\r\n                const token1Amount = (lpTokens * total1Supp) / totalSupp\r\n\r\n                const finPoolA = token0Amount\r\n                const finPoolB = token1Amount\r\n\r\n                let poolShare = (lpTokens/totalSupp)\r\n                if(poolShare > 99.99) {\r\n                    poolShare = 99.99\r\n                }\r\n                else if(poolShare<0.01){\r\n                    poolShare = 0.01\r\n                }\r\n\r\n                console.log(lpTokens)\r\n\r\n                const txn = await router.removeLiquidity(\r\n                    getTokenAAddr,\r\n                    getTokenBAddr,\r\n                    lpTokens,\r\n                    getMin(finPoolA),\r\n                    getMin(finPoolB),\r\n                    account,\r\n                    getDeadline()\r\n                )\r\n                showPromise(txn.wait())\r\n            }\r\n        }catch (e) {\r\n            console.log(e)\r\n            showError(\r\n                e.data ? e.data.message : e.message\r\n            )\r\n        }\r\n    }\r\n\r\n    const poolTokenPercentage2 =\r\n        !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n            ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n            : undefined\r\n\r\n    const [token0Deposited, token1Deposited] =\r\n        !!pair &&\r\n        !!totalPoolTokens &&\r\n        !!userPoolBalance &&\r\n        // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n        JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n            ? [\r\n                pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n                pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n            ]\r\n            : [undefined, undefined]\r\n\r\n    return (\r\n        <Grid item xs={12} md={12} sx={{textAlign: 'center'}}>\r\n            <Card>\r\n                <CardHeader\r\n                    title=\"Pool Details\"\r\n                    subheader=\"Pool balances in your wallet\"\r\n                />\r\n                <CardContent>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6} md={6}>\r\n                            {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol} LPs`}\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <b>{userPoolBalance?.toSignificant(4)}</b>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6} md={6}>\r\n                            {currency0.symbol} Tokens\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <b>\r\n                                {token0Deposited ? (\r\n                                    token0Deposited?.toSignificant(6)\r\n                                ) : (\r\n                                    '-'\r\n                                )}\r\n                            </b>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6} md={6}>\r\n                            {currency1.symbol} Tokens\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <b>\r\n                                {token1Deposited ? (\r\n                                    token1Deposited?.toSignificant(6)\r\n                                ) : (\r\n                                    '-'\r\n                                )}\r\n                            </b>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6} md={6}>\r\n                            Pool Shares\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <b style={{color: 'green'}}>\r\n                                {poolTokenPercentage2\r\n                                    ? `${poolTokenPercentage2.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage2.toFixed(2)}%`\r\n                                    : '-'}\r\n                            </b>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6} md={6}>\r\n                            <Button variant=\"contained\" fullWidth sx={{maxWidth: 620, borderRadius: 25}} onClick={approvePairCallback} size=\"large\" disabled={isApproveRemove === ApprovalState.APPROVED}>\r\n                                Approve Remove\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6} md={6}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"error\"\r\n                                onClick={removeLiquid}\r\n                                fullWidth\r\n                                sx={{maxWidth: 620, borderRadius: 25}}\r\n                                size=\"large\"\r\n                                disabled={isApproveRemove !== ApprovalState.APPROVED || parseFloat(userPoolBalance.toFixed(2)) <= 0}>\r\n                                Remove Liquidity\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","// material\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    ButtonGroup,\r\n    IconButton,\r\n    TextField,\r\n    Grid,\r\n    Typography, Button\r\n} from '@material-ui/core';\r\nimport {\r\n    Add, ArrowDropDown,\r\n    History,\r\n    SwapHorizRounded\r\n} from \"@material-ui/icons\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n// hooks\r\nimport { useDispatch } from 'react-redux'\r\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\r\nimport {currencyEquals, ETHER, JSBI, Percent, WETH} from \"@pancakeswap/sdk\";\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport {Text} from \"@pancakeswap/uikit\";\r\nimport {FACTORY_ADDRESS} from \"@udegoswap/sdk\";\r\nimport {ethers} from \"ethers\";\r\nimport {formatEther} from \"ethers/lib/utils\";\r\nimport {APP_NAME} from \"../../contexts/Constants\";\r\nimport TokenImage from \"../../components/udego/TokenImage\"\r\nimport {ALL_TOKENS} from \"../../contexts/TokenList\";\r\nimport TokenSelect from \"./TokenSelect\";\r\nimport tokens from \"../../config/tokens\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {\r\n    toV2LiquidityToken,\r\n    useGasPrice,\r\n    useIsExpertMode,\r\n    useTrackedTokenPairs,\r\n    useUserSlippageTolerance\r\n} from \"../../state/user/hooks\";\r\nimport {useCurrency} from \"../../hooks/Tokens\";\r\nimport {resetMintState, Field} from \"../../state/mint/actions\";\r\nimport {useDerivedMintInfo, useMintActionHandlers, useMintState} from \"../../state/mint/hooks\";\r\nimport useTransactionDeadline from \"../../hooks/useTransactionDeadline\";\r\nimport {maxAmountSpend} from \"../../utils/maxAmountSpend\";\r\nimport {ApprovalState, useApproveCallback, useApproveCallbackForRemove} from \"../../hooks/useApproveCallback\";\r\nimport {useTransactionAdder} from \"../../state/transactions/hooks\";\r\nimport {calculateGasMargin, calculateSlippageAmount, getUDERouterContract} from \"../../utils\";\r\nimport {unwrappedToken, wrappedCurrency} from \"../../utils/wrappedCurrency\";\r\nimport { UDE_ROUTER} from \"../../config/config\";\r\nimport {currencyId} from \"../../utils/currencyId\";\r\nimport {useIsTransactionUnsupported} from \"../../hooks/Trades\";\r\nimport {PairState} from \"../../hooks/usePairs\";\r\nimport PoolPriceBar from \"./PoolPriceBar\";\r\nimport WalletPopover from \"../../layouts/dashboard/WalletPopover\";\r\nimport Dots from \"../../components/Loader/Dots\";\r\nimport {ONE_BIPS} from \"../../config/constants/index\";\r\nimport {useTokenBalance, useTokenBalancesWithLoadingIndicator} from \"../../state/wallet/hooks\";\r\nimport {useUDEPair, useUDEPairs} from \"../../hooks/useUDEPairs\";\r\nimport {getContract, getDeadline, getMin, showError, showPromise} from \"../../config/helpers\";\r\nimport useTotalSupply from \"../../hooks/useTotalSupply\";\r\nimport {PoolDetails} from \"./components/pool-details\";\r\nimport {factoryABI, pairABI, routerABI} from \"../../config/abis\";\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PoolUdego() {\r\n    const { account, chainId, library } = useActiveWeb3React()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const gasPrice = useGasPrice()\r\n\r\n    const [currencyIdA, setCurrencyA] = useState('');\r\n    const [currencyIdB, setCurrencyB] = useState('');\r\n\r\n    const currencyA = useCurrency(currencyIdA)\r\n    const currencyB = useCurrency(currencyIdB)\r\n\r\n    useEffect(() => {\r\n        if (!currencyIdA && !currencyIdB) {\r\n            dispatch(resetMintState())\r\n        }\r\n    }, [dispatch, currencyIdA, currencyIdB])\r\n\r\n    const oneCurrencyIsWETH = Boolean(\r\n        chainId &&\r\n        ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n            (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n    )\r\n\r\n    const expertMode = useIsExpertMode()\r\n\r\n    // mint state\r\n    const { independentField, typedValue, otherTypedValue } = useMintState()\r\n    const {\r\n        dependentField,\r\n        currencies,\r\n        pair,\r\n        pairState,\r\n        currencyBalances,\r\n        parsedAmounts,\r\n        price,\r\n        noLiquidity,\r\n        liquidityMinted,\r\n        poolTokenPercentage,\r\n        error,\r\n    } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n    const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n    const isValid = !error\r\n\r\n    // modal and loading\r\n    const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n    // txn values\r\n    const deadline = useTransactionDeadline() // custom from users settings\r\n    const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n    const [txHash, setTxHash] = useState('')\r\n\r\n    // get formatted amounts\r\n    const formattedAmounts = {\r\n        [independentField]: typedValue,\r\n        [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n    }\r\n\r\n    const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n        (accumulator, field) => ({\r\n                ...accumulator,\r\n                [field]: maxAmountSpend(currencyBalances[field]),\r\n            }),\r\n        {},\r\n    )\r\n\r\n    const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n        (accumulator, field) => ({\r\n                ...accumulator,\r\n                [field]: maxAmounts[field] === (parsedAmounts[field] ?? '0'),\r\n            }),\r\n        {},\r\n    )\r\n\r\n    // check whether the user has approved the router on the tokens\r\n    const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], UDE_ROUTER)\r\n    const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], UDE_ROUTER)\r\n    const addTransaction = useTransactionAdder()\r\n\r\n\r\n    async function onAdd() {\r\n        if (!chainId || !library || !account) return\r\n        const router = getUDERouterContract(chainId, library, account)\r\n\r\n        const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n        if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n            return\r\n        }\r\n\r\n        const amountsMin = {\r\n            [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n            [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n        }\r\n\r\n        let estimate;\r\n        let method;\r\n        let args;\r\n        let value;\r\n        if (currencyA === ETHER || currencyB === ETHER) {\r\n            const tokenBIsETH = currencyB === ETHER\r\n            estimate = router.estimateGas.addLiquidityETH\r\n            method = router.addLiquidityETH\r\n            args = [\r\n                wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n                (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n                amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n                amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n                account,\r\n                deadline.toHexString(),\r\n            ]\r\n            value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n        } else {\r\n            estimate = router.estimateGas.addLiquidity\r\n            method = router.addLiquidity\r\n            args = [\r\n                wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n                wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n                parsedAmountA.raw.toString(),\r\n                parsedAmountB.raw.toString(),\r\n                amountsMin[Field.CURRENCY_A].toString(),\r\n                amountsMin[Field.CURRENCY_B].toString(),\r\n                account,\r\n                deadline.toHexString(),\r\n            ]\r\n            value = null\r\n        }\r\n\r\n        setAttemptingTxn(true)\r\n        await estimate(...args, value ? { value } : {})\r\n            .then((estimatedGasLimit) =>\r\n                method(...args, {\r\n                    ...(value ? { value } : {}),\r\n                    gasLimit: calculateGasMargin(estimatedGasLimit),\r\n                    gasPrice,\r\n                }).then((response) => {\r\n                    setAttemptingTxn(false)\r\n                    showPromise(response.wait())\r\n\r\n                    addTransaction(response, {\r\n                        summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n                            currencies[Field.CURRENCY_A]?.symbol\r\n                        } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n                    })\r\n\r\n                    setTxHash(response.hash)\r\n                }),\r\n            )\r\n            .catch((err) => {\r\n                setAttemptingTxn(false)\r\n                showError(err.data ? err.data.message : err.message)\r\n                // we only care if the error is something _other_ than the user rejected the tx\r\n                if (err?.code !== 4001) {\r\n                    console.error(err)\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleCurrencyASelect = useCallback(\r\n        (currencyA_) => {\r\n            const newCurrencyIdA = currencyId(currencyA_)\r\n            if (newCurrencyIdA === currencyIdB) {\r\n                const currB = currencyIdB\r\n                setCurrencyB(currencyIdA)\r\n                setCurrencyA(currB)\r\n            }else{\r\n                setCurrencyA(newCurrencyIdA)\r\n            }\r\n        },\r\n        [currencyIdB, currencyIdA],\r\n    )\r\n    const handleCurrencyBSelect = useCallback(\r\n        (currencyB_) => {\r\n            const newCurrencyIdB = currencyId(currencyB_)\r\n            if (currencyIdA === newCurrencyIdB) {\r\n                const currB = currencyIdB\r\n                setCurrencyB(currencyIdA)\r\n                setCurrencyA(currB)\r\n            } else {\r\n                setCurrencyB(newCurrencyIdB)\r\n            }\r\n        },\r\n        [currencyIdA, currencyIdB],\r\n    )\r\n\r\n    const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n    const openSwap = () => {\r\n        navigate('/swap')\r\n    }\r\n\r\n    // Pool Balances\r\n    const trackedTokenPairs = useTrackedTokenPairs()\r\n    const tokenPairsWithLiquidityTokens = useMemo(\r\n        () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n        [trackedTokenPairs],\r\n    )\r\n    const liquidityTokens = useMemo(\r\n        () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\r\n        [tokenPairsWithLiquidityTokens],\r\n    )\r\n    const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n        account ?? undefined,\r\n        liquidityTokens,\r\n    )\r\n\r\n    // fetch the reserves for all V2 pools in which the user has a balance\r\n    const liquidityTokensWithBalances = useMemo(\r\n        () =>\r\n            tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n                v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\r\n            ),\r\n        [tokenPairsWithLiquidityTokens, v2PairsBalances],\r\n    )\r\n\r\n    const udePair = useUDEPair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Card elevation={1}>\r\n                        <CardHeader\r\n                            title=\"LIQUIDITY POOL\"\r\n                            subheader={`Add token liquidity to ${APP_NAME} AMM and get LP Tokens`}\r\n                            action={\r\n                                <ButtonGroup>\r\n                                    {/* <IconButton aria-label=\"recent transactions\"> */}\r\n                                    {/*    <History /> */}\r\n                                    {/* </IconButton> */}\r\n                                    <IconButton aria-label=\"swap tokens\" onClick={openSwap}>\r\n                                        <SwapHorizRounded />\r\n                                    </IconButton>\r\n                                </ButtonGroup>\r\n                            }\r\n                        />\r\n                        <CardContent />\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TokenSelect\r\n                        placeHolder=\"Token A Amount\"\r\n                        label=\"Token A\"\r\n                        isMax={!atMaxAmounts[Field.CURRENCY_A]}\r\n                        tokenAddress={tokens.bnb.address}\r\n                        tokenSymbol=\"bnb\"\r\n                        inputValue={formattedAmounts[Field.CURRENCY_A]}\r\n                        onInputChange={onFieldAInput}\r\n                        onMax={() => {\r\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n                        }}\r\n                        showApprove={approvalA}\r\n                        onApprove={approveACallback}\r\n                        isDisabled={approvalA === ApprovalState.APPROVED}\r\n                        onItemChange={handleCurrencyASelect}\r\n                        approveText={\r\n                            /* eslint-disable-next-line no-nested-ternary */\r\n                            approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{`Approving ${currencies[Field.CURRENCY_A]?.symbol}`}</Dots>\r\n                        ) : (\r\n                            approvalA === ApprovalState.APPROVED ?\r\n                            `Approved ${currencies[Field.CURRENCY_A]?.symbol}`\r\n                                :\r\n                            `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\r\n                        )}\r\n                        selectedToken={currencies[Field.CURRENCY_A]}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} sx={{display:'flex', justifyContent:'center', alignItems:'center', textAlign: 'center'}}>\r\n                    <div>\r\n                        <IconButton disabled>\r\n                            <Add />\r\n                        </IconButton>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TokenSelect\r\n                        placeHolder=\"Token B Amount\"\r\n                        label=\"Token B\"\r\n                        isMax={!atMaxAmounts[Field.CURRENCY_B]}\r\n                        tokenAddress={ALL_TOKENS.ude}\r\n                        tokenSymbol=\"ude\"\r\n                        inputValue={formattedAmounts[Field.CURRENCY_B]}\r\n                        onInputChange={onFieldBInput}\r\n                        onMax={() => {\r\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n                        }}\r\n                        showApprove={approvalB}\r\n                        onApprove={approveBCallback}\r\n                        isDisabled={approvalB === ApprovalState.APPROVED}\r\n                        onItemChange={handleCurrencyBSelect}\r\n                        selectedToken={currencies[Field.CURRENCY_B]}\r\n                        approveText={\r\n                            /* eslint-disable-next-line no-nested-ternary */\r\n                            approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{`Approving ${currencies[Field.CURRENCY_B]?.symbol}`}</Dots>\r\n                        ) : (\r\n                            approvalB === ApprovalState.APPROVED ?\r\n                                `Approved ${currencies[Field.CURRENCY_B]?.symbol}` :\r\n                            `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={12} sx={{display: 'flex', justifyContent:'center', alignItems: 'center'}}>\r\n                    {\r\n                        !account && <WalletPopover />\r\n                    }\r\n                    {\r\n                        account && <Button\r\n                            variant=\"contained\"\r\n                            onClick={onAdd}\r\n                            fullWidth\r\n                            sx={{maxWidth: 620, borderRadius: 25}}\r\n                            size=\"large\"\r\n                            disabled={!isValid}\r\n                        >\r\n                            {error ?? 'Supply Liquidity'}\r\n                        </Button>\r\n                    }\r\n                </Grid>\r\n\r\n\r\n                {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n                    <>\r\n                        <Grid item xs={12} md={12} sx={{textAlign: 'center'}}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    title={noLiquidity ? 'Initial prices and pool share' : 'Prices and pool share'}\r\n                                    subheader=\"Pool shares and token to token prices\"\r\n                                />\r\n                                <CardContent>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            {`${currencies[Field.CURRENCY_B]?.symbol ?? ''} per ${currencies[Field.CURRENCY_A]?.symbol ?? ''}`}\r\n                                        </Grid>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            <b>\r\n                                                {price?.toSignificant(6) ?? '-'}\r\n                                            </b>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            {`${currencies[Field.CURRENCY_A]?.symbol ?? ''} per ${currencies[Field.CURRENCY_B]?.symbol ?? ''}`}\r\n                                        </Grid>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            <b>{price?.invert()?.toSignificant(6) ?? '-'}</b>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container spacing={1}>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            Share of Pool\r\n                                        </Grid>\r\n                                        <Grid item xs={6} md={6}>\r\n                                            <b>{noLiquidity && price\r\n                                                ? '100'\r\n                                                : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n                                                %</b>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n\r\n                {\r\n                    udePair[1] &&\r\n                    <PoolDetails pair={udePair[1]} />\r\n                }\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","// material\r\nimport { Container, Grid } from '@material-ui/core';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport {PAGE_TITLE} from \"../contexts/Constants\";\r\nimport PoolUdego from \"./pool-udego\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UdegoPool() {\r\n    const { themeStretch } = useSettings();\r\n\r\n    return (\r\n        <Page title={`Swap | ${PAGE_TITLE}`}>\r\n            <Container maxWidth={themeStretch ? false : 'xl'}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <PoolUdego />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Page>\r\n    );\r\n}\r\n"],"sourceRoot":""}