{"version":3,"sources":["utils/analytics.js","components/Page.js","utils/wrappedCurrency.js","state/user/hooks/index.js","state/wallet/hooks.js","utils/prices.js","hooks/useCallWithGasPrice.js","hooks/usePairs.js","utils/isZero.js","state/transactions/hooks.js","components/Layout/Column.js","utils/trades.js","hooks/Trades.js","components/Layout/Row.js","hooks/ENS/useENS.js","hooks/ENS/useENSName.js","hooks/ENS/useENSAddress.js","state/swap/hooks.js","hooks/useParsedQueryString.js","hooks/useTokenAllowance.js","hooks/useApproveCallback.js","utils/maxAmountSpend.js","hooks/useHttpLocations.js","hooks/ENS/useENSContentHash.js","utils/getTokenLogoURL.js","components/Logo/Logo.js","components/Logo/CurrencyLogo.js","components/Logo/DoubleLogo.js","components/Logo/ListLogo.js","hooks/useTransactionDeadline.js","hooks/useCurrentBlockTimestamp.js","pages/swap-udego/ListToken.js","pages/swap-udego/TokenSelect.js","hooks/useWrapCallback.js","hooks/useSwapCallback.js","components/Card/index.js","components/Loader/CircleLoader.js","hooks/useLast.js","components/QuestionHelper/index.js","pages/swap-udego/components/styleds.js","pages/swap-udego/components/FormattedPriceImpact.js","pages/swap-udego/components/SwapRoute.js","pages/swap-udego/components/AdvancedSwapDetails.js","pages/swap-udego/components/AdvancedSwapDetailsDropdown.js","pages/swap-udego/components/TradePrice.js","pages/swap-udego/index.js","pages/swap-udego/components/confirmPriceImpactWithoutFee.js","pages/UdegoSwap.js"],"names":["setup","window","gtag","track","pageview","props","googleAnalyticsConfig","event","type","Page","forwardRef","ref","children","title","other","pathname","useLocation","sendPageViewEvent","useCallback","page_path","useEffect","Box","wrappedCurrency","currency","chainId","ETHER","WETH","wrappedCurrencyAmount","currencyAmount","token","undefined","TokenAmount","raw","unwrappedToken","equals","useIsExpertMode","useSelector","state","user","userExpertMode","useExpertModeManager","dispatch","useDispatch","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","updateUserSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","slippage","updateUserSlippageTolerance","useGasPrice","userGas","gasPrice","process","ChainId","MAINNET","toString","GAS_PRICE_GWEI","testnet","toV2LiquidityToken","tokenA","tokenB","Token","UDEPair","getAddress","useTrackedTokenPairs","useActiveWeb3React","tokens","useAllTokens","pinnedPairs","useMemo","PINNED_PAIRS","generatedPairs","flatMap","Object","keys","tokenAddress","BASES_TO_TRACK_LIQUIDITY_FOR","map","base","address","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","token0","token1","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key","useTokenBalancesWithLoadingIndicator","validatedTokens","_a","t","isAddress","validatedTokenAddresses","vt","balances","useMultipleContractSingleData","ERC20_INTERFACE","anyLoading","some","callState","loading","length","i","value","result","amount","JSBI","BigInt","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","a","sort","results","useSingleContractMultipleData","_b","CurrencyAmount","ether","useBNBBalances","useCurrencyBalance","BASE_FEE","Percent","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","route","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","computeSlippageAdjustedAmounts","allowedSlippage","pct","basisPointsToPercent","Field","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","useCallWithGasPrice","callWithGasPrice","contract","methodName","methodArgs","overrides","contractMethod","get","hasManualGasPriceOverride","tx","PAIR_INTERFACE","Interface","IUniswapV2PairABI","PairState","usePairs","currencyA","currencyB","pairAddresses","Pair","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","isZero","hexNumberString","test","useTransactionAdder","response","summary","approval","claim","hash","Error","addTransaction","from","useAllTransactions","s","transactions","useHasPendingApproval","spender","allTransactions","receipt","Date","getTime","addedTime","isTransactionRecent","Column","styled","div","AutoColumn","gap","justify","isTradeBetter","tradeA","tradeB","minimumDelta","ZERO_PERCENT","tradeType","currencyEquals","outputAmount","equalTo","executionPrice","add","useAllCommonPairs","bases","common","BASES_TO_CHECK_TRADES_AGAINST","additionalA","ADDITIONAL_BASES","additionalB","basePairs","otherBase","allPairCombinations","Boolean","t0","t1","tokenA_","tokenB_","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","allPairs","values","curr","liquidityToken","useTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","bestTradeExactIn","maxHops","maxNumResults","bestTradeSoFar","currentTrade","BETTER_TRADE_LESS_HOPS_THRESHOLD","useTradeExactOut","currencyIn","currencyAmountOut","bestTradeExactOut","useIsTransactionUnsupported","unsupportedTokens","useUnsupportedTokens","tokenIn","tokenOut","includes","Row","width","align","padding","border","borderRadius","AutoRow","useENS","nameOrAddress","validated","reverseLookup","_c","debouncedAddress","useDebounce","ensNodeArgument","namehash","toLowerCase","substr","error","registrarContract","useENSRegistrarContract","resolverAddress","useSingleCallResult","resolverAddressResult","resolverContract","useENSResolverContract","name","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","useSwapState","swap","useSwapActionHandlers","onCurrencySelection","field","selectCurrency","currencyId","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","typedValueParsed","parseUnits","decimals","console","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","pair","useDerivedSwapInfo","inputError","independentField","inputCurrencyId","outputCurrencyId","inputCurrency","useCurrency","outputCurrency","recipientLookup","to","relevantTokenBalances","isExactIn","parsedAmount","v2Trade","currencyBalances","formattedTo","indexOf","slippageAdjustedAmounts","balanceIn","amountIn","symbol","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","useState","setResult","parsed","replaceSwapState","useTokenAllowance","owner","useTokenContract","inputs","allowance","ApprovalState","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","approvalState","APPROVED","log","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","calculateGasMargin","then","useApproveCallbackFromTrade","PC_ROUTER_ADDRESS","useApproveCallbackForRemove","pairToApprove","toFixed","maxAmountSpend","greaterThan","MIN_BNB","useHttpLocations","uri","ens","parseENSAddress","resolvedContentHash","contenthash","useENSContentHash","uriToHttp","contenthashToUri","getTokenLogoURL","BAD_SRCS","Logo","srcs","alt","rest","e","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","__rest","refresh","src","React","createElement","onError","HelpIcon","StyledLogo","size","CurrencyLogo","style","uriLocations","WrappedTokenInfo","logoURI","BinanceIcon","margin","useTransactionDeadline","ttl","userDeadline","blockTimestamp","multicall","useCurrentBlockTimestamp","ListToken","item","selectedToken","tokenSelected","currencyBalance","ListItem","button","selected","onClick","disabled","secondaryAction","Typography","toSignificant","ListItemAvatar","Avatar","tokenImg","srcSet","ListItemText","primary","secondary","inputRegex","RegExp","TokenSelect","tokenSymbol","isMax","label","placeHolder","inputValue","onInputChange","onItemChange","showApprove","onApprove","approveText","onMax","isDisabled","setSymbol","setToken","setAddress","isDialogOpen","setDialog","getTokens","handleClose","selectedCurrencyBalance","Card","sx","maxWidth","CardContent","background","Button","variant","marginLeft","marginTop","Grid","container","spacing","xs","md","TextField","fullWidth","placeholder","onChange","nextUserInput","target","replace","escapeRegExp","display","justifyContent","alignItems","slice","ArrowDropDown","Dialog","open","onClose","DialogTitle","DialogContent","LoadingButton","List","cols","tokenItem","DialogActions","WrapType","NOT_APPLICABLE","WRAP","UNWRAP","wrapType","SwapCallbackState","useSwapCallArguments","INITIAL_ALLOWED_SLIPPAGE","recipientAddressOrName","library","recipientAddress","deadline","getRouterContract","swapMethods","push","Router","swapCallParameters","feeOnTransfer","BIPS_BASE","toNumber","TradeType","EXACT_INPUT","parameters","theme","colors","backgroundAlt","cardBorder","dropdown","rotate","keyframes","StyledSVG","svg","stroke","CircleLoader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","isDefined","x","useLastTruthy","filterFn","last","setLast","prev","useLast","clickable","css","ErrorText","Text","severity","failure","warning","text","success","StyledBalanceMaxMini","SwapCallbackErrorInner","attrs","ellipsis","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","ErrorIcon","FormattedPriceImpact","fontSize","ONE_BIPS","flexWrap","isLastItem","ml","mr","TradeSummary","showRoute","textAlign","CardHeader","subheader","color","SwapRoute","AdvancedSwapDetails","AdvancedDetailsFooter","show","invertedContrast","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","price","showInverted","setShowInverted","formattedPrice","invert","baseCurrency","quoteCurrency","SwapUdego","navigate","useNavigate","loadedURLParams","useToast","toastSuccess","loadedInputCurrency","loadedOutputCurrency","c","isExpertMode","swapInputError","wethContract","useWETHContract","balance","sufficientBalance","execute","txReceipt","useWrapCallback","showWrap","parsedAmounts","isValid","dependentField","handleTypeInput","handleTypeOutput","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","_f","maxAmountInput","swapCalls","callback","Promise","all","args","options","gasEstimate","gasError","callStatic","callError","reason","data","message","errorMessage","estimatedCalls","successfulEstimation","el","ix","list","errorCalls","inputSymbol","outputSymbol","withRecipient","truncateHash","showPromise","wait","code","showError","useSwapCallback","swapCallback","handleSwap","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","confirmWord","prompt","word","confirm","confirmPriceImpactWithoutFee","priceImpactSeverity","showApproveFlow","handleInputSelect","handleMaxInput","handleOutputSelect","swapIsUnsupported","elevation","APP_NAME","action","ButtonGroup","IconButton","Add","isMobile","ArrowDownwardOutlined","ArrowForwardIosOutlined","WalletPopover","mb","UdegoSwap","themeStretch","useSettings","PAGE_TITLE","Container"],"mappings":"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","file":"static/js/10.cf01cf38.chunk.js","sourcesContent":["import { googleAnalyticsConfig } from '../config';\n\n// ----------------------------------------------------------------------\n\nconst setup = (...args) => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  if (!window.gtag) {\n    return;\n  }\n  window.gtag(...args);\n};\n\nconst track = {\n  pageview: (props) => {\n    setup('config', googleAnalyticsConfig, props);\n  },\n  event: (type, props) => {\n    setup('event', type, props);\n  }\n};\n\nexport default track;\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useLocation } from 'react-router-dom';\nimport { forwardRef, useEffect, useCallback } from 'react';\n// material\nimport { Box } from '@material-ui/core';\n// utils\nimport track from '../utils/analytics';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => {\n  const { pathname } = useLocation();\n\n  const sendPageViewEvent = useCallback(() => {\n    track.pageview({\n      page_path: pathname\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    sendPageViewEvent();\n  }, [sendPageViewEvent]);\n\n  return (\n    <Box ref={ref} {...other}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </Box>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import { ETHER, TokenAmount, WETH } from '@pancakeswap/sdk';\n\nexport function wrappedCurrency(currency, chainId) {\n    // eslint-disable-next-line no-nested-ternary\n    return chainId && currency === ETHER ? WETH[chainId] : currency;\n}\nexport function wrappedCurrencyAmount(currencyAmount, chainId) {\n    const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined;\n    return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined;\n}\nexport function unwrappedToken(token) {\n    if (token.equals(WETH[token.chainId]))\n        return ETHER;\n    return token;\n}","import { ChainId, Pair, Token } from '@pancakeswap/sdk';\r\nimport { Pair as UDEPair } from '@udegoswap/sdk';\r\nimport flatMap from 'lodash/flatMap';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../../config/constants/index';\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport { useAllTokens } from '../../../hooks/Tokens';\r\nimport { addSerializedPair, addSerializedToken, FarmStakedOnly, muteAudio, removeSerializedToken, toggleTheme as toggleThemeAction, unmuteAudio, updateUserDeadline, updateUserExpertMode, updateUserFarmStakedOnly, updateUserSingleHopOnly, updateUserSlippageTolerance, updateGasPrice, addWatchlistToken, addWatchlistPool, updateUserPoolStakedOnly, updateUserPoolsViewMode, updateUserFarmsViewMode, updateUserPredictionChartDisclaimerShow, updateUserPredictionAcceptedRisk, updateUserUsernameVisibility, updateUserExpertModeAcknowledgementShow, } from '../actions';\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers';\r\n\r\nexport function useAudioModeManager() {\r\n    const dispatch = useDispatch();\r\n    const audioPlay = useSelector((state) => state.user.audioPlay);\r\n    const toggleSetAudioMode = useCallback(() => {\r\n        if (audioPlay) {\r\n            dispatch(muteAudio());\r\n        }\r\n        else {\r\n            dispatch(unmuteAudio());\r\n        }\r\n    }, [audioPlay, dispatch]);\r\n    return [audioPlay, toggleSetAudioMode];\r\n}\r\nexport function useIsExpertMode() {\r\n    return useSelector((state) => state.user.userExpertMode);\r\n}\r\nexport function useExpertModeManager() {\r\n    const dispatch = useDispatch();\r\n    const expertMode = useIsExpertMode();\r\n    const toggleSetExpertMode = useCallback(() => {\r\n        dispatch(updateUserExpertMode({ userExpertMode: !expertMode }));\r\n    }, [expertMode, dispatch]);\r\n    return [expertMode, toggleSetExpertMode];\r\n}\r\nexport function useThemeManager() {\r\n    const dispatch = useDispatch();\r\n    const isDark = useSelector((state) => state.user.isDark);\r\n    const toggleTheme = useCallback(() => {\r\n        dispatch(toggleThemeAction());\r\n    }, [dispatch]);\r\n    return [isDark, toggleTheme];\r\n}\r\nexport function useUserSingleHopOnly() {\r\n    const dispatch = useDispatch();\r\n    const singleHopOnly = useSelector((state) => state.user.userSingleHopOnly);\r\n    const setSingleHopOnly = useCallback((newSingleHopOnly) => {\r\n        dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }));\r\n    }, [dispatch]);\r\n    return [singleHopOnly, setSingleHopOnly];\r\n}\r\nexport function useUserSlippageTolerance() {\r\n    const dispatch = useDispatch();\r\n    const userSlippageTolerance = useSelector((state) => state.user.userSlippageTolerance);\r\n    const setUserSlippageTolerance = useCallback((slippage) => {\r\n        dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }));\r\n    }, [dispatch]);\r\n    return [userSlippageTolerance, setUserSlippageTolerance];\r\n}\r\nexport function useUserFarmStakedOnly(isActive) {\r\n    const dispatch = useDispatch();\r\n    const userFarmStakedOnly = useSelector((state) => state.user.userFarmStakedOnly);\r\n    const setUserFarmStakedOnly = useCallback((stakedOnly) => {\r\n        const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE;\r\n        dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }));\r\n    }, [dispatch]);\r\n    return [\r\n        userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n        setUserFarmStakedOnly,\r\n    ];\r\n}\r\nexport function useUserPoolStakedOnly() {\r\n    const dispatch = useDispatch();\r\n    const userPoolStakedOnly = useSelector((state) => state.user.userPoolStakedOnly);\r\n    const setUserPoolStakedOnly = useCallback((stakedOnly) => {\r\n        dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }));\r\n    }, [dispatch]);\r\n    return [userPoolStakedOnly, setUserPoolStakedOnly];\r\n}\r\nexport function useUserPoolsViewMode() {\r\n    const dispatch = useDispatch();\r\n    const userPoolsViewMode = useSelector((state) => state.user.userPoolsViewMode);\r\n    const setUserPoolsViewMode = useCallback((viewMode) => {\r\n        dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }));\r\n    }, [dispatch]);\r\n    return [userPoolsViewMode, setUserPoolsViewMode];\r\n}\r\nexport function useUserFarmsViewMode() {\r\n    const dispatch = useDispatch();\r\n    const userFarmsViewMode = useSelector((state) => state.user.userFarmsViewMode);\r\n    const setUserFarmsViewMode = useCallback((viewMode) => {\r\n        dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }));\r\n    }, [dispatch]);\r\n    return [userFarmsViewMode, setUserFarmsViewMode];\r\n}\r\nexport function useUserPredictionAcceptedRisk() {\r\n    const dispatch = useDispatch();\r\n    const userPredictionAcceptedRisk = useSelector((state) => state.user.userPredictionAcceptedRisk);\r\n    const setUserPredictionAcceptedRisk = useCallback((acceptedRisk) => {\r\n        dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }));\r\n    }, [dispatch]);\r\n    return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk];\r\n}\r\nexport function useUserPredictionChartDisclaimerShow() {\r\n    const dispatch = useDispatch();\r\n    const userPredictionChartDisclaimerShow = useSelector((state) => state.user.userPredictionChartDisclaimerShow);\r\n    const setPredictionUserChartDisclaimerShow = useCallback((showDisclaimer) => {\r\n        dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }));\r\n    }, [dispatch]);\r\n    return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow];\r\n}\r\nexport function useUserExpertModeAcknowledgementShow() {\r\n    const dispatch = useDispatch();\r\n    const userExpertModeAcknowledgementShow = useSelector((state) => state.user.userExpertModeAcknowledgementShow);\r\n    const setUserExpertModeAcknowledgementShow = useCallback((showAcknowledgement) => {\r\n        dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }));\r\n    }, [dispatch]);\r\n    return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow];\r\n}\r\nexport function useUserUsernameVisibility() {\r\n    const dispatch = useDispatch();\r\n    const userUsernameVisibility = useSelector((state) => state.user.userUsernameVisibility);\r\n    const setUserUsernameVisibility = useCallback((usernameVisibility) => {\r\n        dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }));\r\n    }, [dispatch]);\r\n    return [userUsernameVisibility, setUserUsernameVisibility];\r\n}\r\nexport function useUserTransactionTTL() {\r\n    const dispatch = useDispatch();\r\n    const userDeadline = useSelector((state) => state.user.userDeadline);\r\n    const setUserDeadline = useCallback((deadline) => {\r\n        dispatch(updateUserDeadline({ userDeadline: deadline }));\r\n    }, [dispatch]);\r\n    return [userDeadline, setUserDeadline];\r\n}\r\nexport function useAddUserToken() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((token) => {\r\n        dispatch(addSerializedToken({ serializedToken: serializeToken(token) }));\r\n    }, [dispatch]);\r\n}\r\nexport function useRemoveUserAddedToken() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((chainId, address) => {\r\n        dispatch(removeSerializedToken({ chainId, address }));\r\n    }, [dispatch]);\r\n}\r\nexport function useGasPrice() {\r\n    const chainId = process.env.REACT_APP_CHAIN_ID;\r\n    const userGas = useSelector((state) => state.user.gasPrice);\r\n    return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet;\r\n}\r\nexport function useGasPriceManager() {\r\n    const dispatch = useDispatch();\r\n    const userGasPrice = useGasPrice();\r\n    const setGasPrice = useCallback((gasPrice) => {\r\n        dispatch(updateGasPrice({ gasPrice }));\r\n    }, [dispatch]);\r\n    return [userGasPrice, setGasPrice];\r\n}\r\nfunction serializePair(pair) {\r\n    return {\r\n        token0: serializeToken(pair.token0),\r\n        token1: serializeToken(pair.token1),\r\n    };\r\n}\r\nexport function usePairAdder() {\r\n    const dispatch = useDispatch();\r\n    return useCallback((pair) => {\r\n        dispatch(addSerializedPair({ serializedPair: serializePair(pair) }));\r\n    }, [dispatch]);\r\n}\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]) {\r\n    return new Token(tokenA.chainId, UDEPair.getAddress(tokenA, tokenB), 18, 'UDE-LP', 'UDEGO LPs');\r\n}\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs() {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useAllTokens();\r\n    // pinned pairs\r\n    // eslint-disable-next-line no-cond-assign,no-void,no-nested-ternary\r\n    const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n    // pairs for every token against every base\r\n    const generatedPairs = useMemo(() => chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress];\r\n            // for each token on the current chain,\r\n            return (\r\n            // loop though all bases on the current chain\r\n                // eslint-disable-next-line no-cond-assign,no-void\r\n                (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                if (base.address === token.address) {\r\n                    return null;\r\n                }\r\n                return [base, token];\r\n            })\r\n                .filter((p) => p !== null));\r\n        })\r\n        : [], [tokens, chainId]);\r\n    // pairs saved by users\r\n    const savedSerializedPairs = useSelector(({ user: { pairs } }) => pairs);\r\n    const userPairs = useMemo(() => {\r\n        if (!chainId || !savedSerializedPairs)\r\n            return [];\r\n        const forChain = savedSerializedPairs[chainId];\r\n        if (!forChain)\r\n            return [];\r\n        return Object.keys(forChain).map((pairId) => [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]);\r\n    }, [savedSerializedPairs, chainId]);\r\n    const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\r\n    return useMemo(() => {\r\n        // dedupes pairs of tokens in the combined list\r\n        const keyed = combinedList.reduce((memo, [tokenA, tokenB]) => {\r\n            const sorted = tokenA.sortsBefore(tokenB);\r\n            const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\r\n            if (memo[key])\r\n                return memo;\r\n            memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\r\n            return memo;\r\n        }, {});\r\n        return Object.keys(keyed).map((key) => keyed[key]);\r\n    }, [combinedList]);\r\n}\r\nexport const useWatchlistTokens = () => {\r\n    let _a;\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const savedTokens = (_a = useSelector((state) => state.user.watchlistTokens)) !== null && _a !== void 0 ? _a : [];\r\n    const updatedSavedTokens = useCallback((address) => {\r\n        dispatch(addWatchlistToken({ address }));\r\n    }, [dispatch]);\r\n    return [savedTokens, updatedSavedTokens];\r\n};\r\nexport const useWatchlistPools = () => {\r\n    let _a;\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const savedPools = (_a = useSelector((state) => state.user.watchlistPools)) !== null && _a !== void 0 ? _a : [];\r\n    const updateSavedPools = useCallback((address) => {\r\n        dispatch(addWatchlistPool({ address }));\r\n    }, [dispatch]);\r\n    return [savedPools, updateSavedPools];\r\n};","import { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport ERC20_INTERFACE from '../../config/abi/erc20';\r\nimport { useAllTokens } from '../../hooks/Tokens';\r\nimport { useMulticallContract } from '../../hooks/useContract';\r\nimport { isAddress } from '../../utils';\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks';\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses) {\r\n    const multicallContract = useMulticallContract();\r\n    const addresses = useMemo(() => uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a) => a !== false)\r\n            .sort()\r\n        : [], [uncheckedAddresses]);\r\n    const results = useSingleContractMultipleData(multicallContract, 'getEthBalance', addresses.map((address) => [address]));\r\n    return useMemo(() => addresses.reduce((memo, address, i) => {\r\n        let _a; let _b;\r\n        // eslint-disable-next-line no-cond-assign,no-void\r\n        const value = (_b = (_a = results === null || results === void 0 ? void 0 : results[i]) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b[0];\r\n        if (value)\r\n            memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()));\r\n        return memo;\r\n    }, {}), [addresses, results]);\r\n}\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(address, tokens) {\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const validatedTokens = useMemo(() => { let _a; return (_a = tokens === null || tokens === void 0 ? void 0 : tokens.filter((t) => isAddress(t === null || t === void 0 ? void 0 : t.address) !== false)) !== null && _a !== void 0 ? _a : []; }, [tokens]);\r\n    const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens]);\r\n    const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address]);\r\n    const anyLoading = useMemo(() => balances.some((callState) => callState.loading), [balances]);\r\n    return [\r\n        useMemo(\r\n            () =>\r\n                address && validatedTokens.length > 0\r\n                    ? validatedTokens.reduce((memo, token, i) => {\r\n                const value = balances?.[i]?.result?.[0]\r\n                const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n                if (amount) {\r\n                    memo[token.address] = new TokenAmount(token, amount)\r\n                }\r\n                return memo\r\n            }, {})\r\n        : {},\r\n            [address, validatedTokens, balances],\r\n        ),\r\n        anyLoading,\r\n    ];\r\n}\r\nexport function useTokenBalances(address, tokens) {\r\n    return useTokenBalancesWithLoadingIndicator(address, tokens)[0];\r\n}\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account, token) {\r\n    const tokenBalances = useTokenBalances(account, [token]);\r\n    if (!token)\r\n        return undefined;\r\n    return tokenBalances[token.address];\r\n}\r\nexport function useCurrencyBalances(account, currencies) {\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const tokens = useMemo(() => { let _a; return (_a = currencies === null || currencies === void 0 ? void 0 : currencies.filter((currency) => true)) !== null && _a !== void 0 ? _a : []; }, [currencies]);\r\n    const tokenBalances = useTokenBalances(account, tokens)\r\n    const containsBNB = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n    const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n    return useMemo(() =>\r\n        currencies?.map((currency) => {\r\n            if (!account || !currency) return undefined\r\n            if (currency === ETHER) return ethBalance[account]\r\n            if (currency) return tokenBalances[currency.address]\r\n            return undefined\r\n        }) ?? []\r\n    , [account, currencies, ethBalance, tokenBalances]);\r\n}\r\nexport function useCurrencyBalance(account, currency) {\r\n    return useCurrencyBalances(account, [currency])[0];\r\n}\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances() {\r\n    const { account } = useWeb3React();\r\n    const allTokens = useAllTokens();\r\n    // eslint-disable-next-line no-void\r\n    const allTokensArray = useMemo(() => Object.values(allTokens !== null && allTokens !== void 0 ? allTokens : {}), [allTokens]);\r\n    // eslint-disable-next-line no-void\r\n    const balances = useTokenBalances(account !== null && account !== void 0 ? account : undefined, allTokensArray);\r\n    // eslint-disable-next-line no-void\r\n    return balances !== null && balances !== void 0 ? balances : {};\r\n}\r\n","import { CurrencyAmount, JSBI, Percent, TokenAmount } from '@pancakeswap/sdk';\r\nimport { BLOCKED_PRICE_IMPACT_NON_EXPERT, ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM, } from '../config/constants/index';\r\nimport { Field } from '../state/swap/actions';\r\nimport { basisPointsToPercent } from './index';\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000));\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000));\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE);\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade) {\r\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n    const realizedLPFee = !trade\r\n        ? undefined\r\n        : ONE_HUNDRED_PERCENT.subtract(trade.route.pairs.reduce((currentFee) => currentFee.multiply(INPUT_FRACTION_AFTER_FEE), ONE_HUNDRED_PERCENT));\r\n    // remove lp fees from price impact\r\n    const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined;\r\n    // the x*y=k impact\r\n    const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n        // eslint-disable-next-line no-void\r\n        ? new Percent(priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.numerator, priceImpactWithoutFeeFraction === null || priceImpactWithoutFeeFraction === void 0 ? void 0 : priceImpactWithoutFeeFraction.denominator)\r\n        : undefined;\r\n    // the amount of the input that accrues to LPs\r\n    const realizedLPFeeAmount = realizedLPFee &&\r\n        trade &&\r\n        (trade.inputAmount instanceof TokenAmount\r\n            ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n            : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient));\r\n    return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount };\r\n}\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(trade, allowedSlippage) {\r\n    const pct = basisPointsToPercent(allowedSlippage);\r\n    return {\r\n        // eslint-disable-next-line no-void\r\n        [Field.INPUT]: trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(pct),\r\n        // eslint-disable-next-line no-void\r\n        [Field.OUTPUT]: trade === null || trade === void 0 ? void 0 : trade.minimumAmountOut(pct),\r\n    };\r\n}\r\nexport function warningSeverity(priceImpact) {\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)))\r\n        return 4;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_HIGH)))\r\n        return 3;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)))\r\n        return 2;\r\n    // eslint-disable-next-line no-void\r\n    if (!(priceImpact === null || priceImpact === void 0 ? void 0 : priceImpact.lessThan(ALLOWED_PRICE_IMPACT_LOW)))\r\n        return 1;\r\n    return 0;\r\n}\r\nexport function formatExecutionPrice(trade, inverted) {\r\n    if (!trade) {\r\n        return '';\r\n    }\r\n    return inverted\r\n        ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${trade.outputAmount.currency.symbol}`\r\n        : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${trade.inputAmount.currency.symbol}`;\r\n}\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price, amount, significantDigits = 18) => {\r\n    if (!price) {\r\n        return 0;\r\n    }\r\n    return parseFloat(price.toSignificant(significantDigits)) * amount;\r\n};\r\n","import { useCallback } from 'react';\r\nimport { get } from 'lodash';\r\nimport { useGasPrice } from '../state/user/hooks';\r\n/**\r\n * Perform a contract call with a gas price returned from useGasPrice\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport function useCallWithGasPrice() {\r\n    const gasPrice = useGasPrice();\r\n    const callWithGasPrice = useCallback(async (contract, methodName, methodArgs = [], overrides = null) => {\r\n        const contractMethod = get(contract, methodName);\r\n        const hasManualGasPriceOverride = overrides === null || overrides === undefined ? undefined : overrides.gasPrice;\r\n        const tx = await contractMethod(...methodArgs, hasManualGasPriceOverride ? ({ ...overrides}) : ({...overrides, gasPrice}));\r\n        return tx;\r\n    }, [gasPrice]);\r\n    return { callWithGasPrice };\r\n}","import { TokenAmount, Pair } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\r\n// eslint-disable-next-line import/no-mutable-exports,no-var\r\nexport const PairState = {\r\n    \"LOADING\": 0,\r\n    \"NOT_EXISTS\": 1,\r\n    \"EXISTS\": 2,\r\n    \"INVALID\": 3,\r\n}\r\n\r\nexport function usePairs(currencies) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokens = useMemo(() => currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n    ]), [chainId, currencies]);\r\n\r\n    const pairAddresses = useMemo(() => tokens.map(([tokenA, tokenB]) => tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined), [tokens]);\r\n    const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\r\n\r\n    return useMemo(() => results.map((result, i) => {\r\n            const { result: reserves, loading } = result;\r\n            const tokenA = tokens[i][0];\r\n            const tokenB = tokens[i][1];\r\n\r\n            if (loading)\r\n                return [PairState.LOADING, null];\r\n            if (!tokenA || !tokenB || tokenA.equals(tokenB))\r\n                return [PairState.INVALID, null];\r\n            if (!reserves)\r\n                return [PairState.NOT_EXISTS, null];\r\n            const { reserve0, reserve1 } = reserves;\r\n            const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\r\n\r\n            return [\r\n                PairState.EXISTS,\r\n                new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n            ];\r\n        }), [results, tokens]);\r\n}\r\nexport function usePair(tokenA, tokenB) {\r\n    return usePairs([[tokenA, tokenB]])[0];\r\n}","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString) {\r\n    return /^0x0*$/.test(hexNumberString);\r\n}","import { useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport { addTransaction } from './actions';\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder() {\r\n    const { chainId, account } = useActiveWeb3React();\r\n    const dispatch = useDispatch();\r\n    return useCallback((response, { summary, approval, claim, } = {}) => {\r\n        if (!account)\r\n            return;\r\n        if (!chainId)\r\n            return;\r\n        const { hash } = response;\r\n        if (!hash) {\r\n            throw Error('No transaction hash found.');\r\n        }\r\n        dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }));\r\n    }, [dispatch, chainId, account]);\r\n}\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions() {\r\n    let _a;\r\n    const { chainId } = useActiveWeb3React();\r\n    const state = useSelector((s) => s.transactions);\r\n    // eslint-disable-next-line no-nested-ternary,no-cond-assign,no-void\r\n    return chainId ? (_a = state[chainId]) !== null && _a !== void 0 ? _a : {} : {};\r\n}\r\nexport function useIsTransactionPending(transactionHash) {\r\n    const transactions = useAllTransactions();\r\n    if (!transactionHash || !transactions[transactionHash])\r\n        return false;\r\n    return !transactions[transactionHash].receipt;\r\n}\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx) {\r\n    return new Date().getTime() - tx.addedTime < 86400000;\r\n}\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress, spender) {\r\n    const allTransactions = useAllTransactions();\r\n    return useMemo(() => typeof tokenAddress === 'string' &&\r\n        typeof spender === 'string' &&\r\n        Object.keys(allTransactions).some((hash) => {\r\n            const tx = allTransactions[hash];\r\n            if (!tx)\r\n                return false;\r\n            if (tx.receipt) {\r\n                return false;\r\n            }\r\n            const { approval } = tx;\r\n            if (!approval)\r\n                return false;\r\n            return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\r\n        }), [allTransactions, spender, tokenAddress]);\r\n}","import styled from 'styled-components';\n\nconst Column = styled.div `\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\nexport const ColumnCenter = styled(Column) `\n  width: 100%;\n  align-items: center;\n`;\nexport const AutoColumn = styled.div `\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`;\nexport default Column;\n","import { currencyEquals } from '@pancakeswap/sdk';\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index';\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(tradeA, tradeB, minimumDelta = ZERO_PERCENT) {\r\n    if (tradeA && !tradeB)\r\n        return false;\r\n    if (tradeB && !tradeA)\r\n        return true;\r\n    if (!tradeA || !tradeB)\r\n        return undefined;\r\n    if (tradeA.tradeType !== tradeB.tradeType ||\r\n        !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n        !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)) {\r\n        throw new Error('Trades are not comparable');\r\n    }\r\n    if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n        return tradeA.executionPrice.lessThan(tradeB.executionPrice);\r\n    }\r\n    return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);\r\n}\r\nexport default isTradeBetter;","import { Trade } from '@pancakeswap/sdk';\r\nimport flatMap from 'lodash/flatMap';\r\nimport { useMemo } from 'react';\r\nimport { isTradeBetter } from '../utils/trades';\r\nimport { useUserSingleHopOnly } from '../state/user/hooks';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES, BETTER_TRADE_LESS_HOPS_THRESHOLD, ADDITIONAL_BASES, } from '../config/constants/index';\r\nimport { PairState, usePairs } from './usePairs';\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\r\nimport { useUnsupportedTokens } from './Tokens';\r\n\r\nfunction useAllCommonPairs(currencyA, currencyB) {\r\n    const { chainId } = useActiveWeb3React();\r\n    const [tokenA, tokenB] = chainId\r\n        ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n        : [undefined, undefined];\r\n\r\n    const bases = useMemo(() => {\r\n        if (!chainId)\r\n            return [];\r\n        // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n        const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n        const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n        const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n        return [...common, ...additionalA, ...additionalB];\r\n    }, [chainId, tokenA, tokenB]);\r\n\r\n    const basePairs = useMemo(() => flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase])), [bases]);\r\n    const allPairCombinations = useMemo(() => tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base) => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base) => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n        ]\r\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            .filter(([tokenA_, tokenB_]) => {\r\n            if (!chainId)\r\n                return true;\r\n            const customBases = CUSTOM_BASES[chainId];\r\n            // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n            const customBasesA = customBases === null || customBases === undefined ? undefined : customBases[tokenA_.address];\r\n            // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n            const customBasesB = customBases === null || customBases === undefined ? undefined : customBases[tokenB_.address];\r\n            if (!customBasesA && !customBasesB)\r\n                return true;\r\n            if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base)))\r\n                return false;\r\n            if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base)))\r\n                return false;\r\n            return true;\r\n        })\r\n        : [], [tokenA, tokenB, bases, basePairs, chainId]);\r\n    const allPairs = usePairs(allPairCombinations);\r\n    // only pass along valid pairs, non-duplicated pairs\r\n    return useMemo(() => Object.values(allPairs\r\n        // filter out invalid pairs\r\n        .filter((result) => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n        // filter out duplicated pairs\r\n        .reduce((memo, [, curr]) => {\r\n        let _a;\r\n            // eslint-disable-next-line no-cond-assign,no-void\r\n        memo[curr.liquidityToken.address] = (_a = memo[curr.liquidityToken.address]) !== null && _a !== undefined ? _a : curr;\r\n        return memo;\r\n    }, {})), [allPairs]);\r\n}\r\nconst MAX_HOPS = 3;\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\n// eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\nexport function useTradeExactIn(currencyAmountIn, currencyOut) {\r\n    // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n    const allowedPairs = useAllCommonPairs(currencyAmountIn === null || currencyAmountIn === undefined ? undefined : currencyAmountIn.currency, currencyOut);\r\n    const [singleHopOnly] = useUserSingleHopOnly();\r\n    return useMemo(() => {\r\n        if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n            if (singleHopOnly) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                return Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ?? null\r\n            }\r\n            // search through trades with varying hops, find best trade out of them\r\n            let bestTradeSoFar = null;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 1; i <= MAX_HOPS; i++) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                const currentTrade = Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ?? null\r\n                // if current trade is best yet, save it\r\n                if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n                    bestTradeSoFar = currentTrade;\r\n                }\r\n            }\r\n            return bestTradeSoFar;\r\n        }\r\n        return null;\r\n    }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly]);\r\n}\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\n\r\nexport function useTradeExactOut(currencyIn, currencyAmountOut) {\r\n    // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n    const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut === null || currencyAmountOut === undefined ? undefined : currencyAmountOut.currency);\r\n    const [singleHopOnly] = useUserSingleHopOnly();\r\n    return useMemo(() => {\r\n        if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n            if (singleHopOnly) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                return Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ?? null\r\n            }\r\n            // search through trades with varying hops, find best trade out of them\r\n            let bestTradeSoFar = null;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 1; i <= MAX_HOPS; i++) {\r\n                // eslint-disable-next-line no-cond-assign,no-void,prefer-destructuring\r\n                const currentTrade = Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ?? null\r\n                if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n                    bestTradeSoFar = currentTrade;\r\n                }\r\n            }\r\n            return bestTradeSoFar;\r\n        }\r\n        return null;\r\n    }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly]);\r\n}\r\nexport function useIsTransactionUnsupported(currencyIn, currencyOut) {\r\n    const unsupportedTokens = useUnsupportedTokens();\r\n    const { chainId } = useActiveWeb3React();\r\n    const tokenIn = wrappedCurrency(currencyIn, chainId);\r\n    const tokenOut = wrappedCurrency(currencyOut, chainId);\r\n    // if unsupported list loaded & either token on list, mark as unsupported\r\n    if (unsupportedTokens) {\r\n        if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n            return true;\r\n        }\r\n        if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}","import styled from 'styled-components';\r\nimport { Box } from '@pancakeswap/uikit';\r\n\r\nconst Row = styled(Box) `\r\n  width: ${({ width }) => width !== null && width !== undefined ? width : '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align !== null && align !== undefined ? align : 'center'};\r\n  justify-content: ${({ justify }) => justify !== null && justify !== undefined ? justify : 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`;\r\nexport const RowBetween = styled(Row) `\r\n  justify-content: space-between;\r\n`;\r\nexport const RowFlat = styled.div `\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\nexport const AutoRow = styled(Row) `\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`;\r\nexport const RowFixed = styled(Row) `\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`;\r\nexport default Row;","import { isAddress } from '../../utils';\r\nimport useENSAddress from './useENSAddress';\r\nimport useENSName from './useENSName';\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress) {\r\n    const validated = isAddress(nameOrAddress);\r\n    const reverseLookup = useENSName(validated || undefined);\r\n    const lookup = useENSAddress(nameOrAddress);\r\n    return {\r\n        loading: reverseLookup.loading || lookup.loading,\r\n        address: validated || lookup.address,\r\n        // eslint-disable-next-line no-nested-ternary\r\n        name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n    };\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport { isAddress, isZero } from '../../utils';\r\n\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\nimport useDebounce from '../useDebounce';\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address) {\r\n    let _a; let _b; let _c;\r\n    const debouncedAddress = useDebounce(address, 200);\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!debouncedAddress || !isAddress(debouncedAddress))\r\n            return [undefined];\r\n        try {\r\n            return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [debouncedAddress]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-cond-assign,no-void\r\n    const resolverAddressResult = (_a = resolverAddress.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\r\n    const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\r\n    const changed = debouncedAddress !== address;\r\n    return {\r\n        // eslint-disable-next-line no-nested-ternary,no-cond-assign,no-void\r\n        ENSName: changed ? null : (_c = (_b = name.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: changed || resolverAddress.loading || name.loading,\r\n    };\r\n}","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport isZero from '../../utils/isZero';\r\n\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\nimport useDebounce from '../useDebounce';\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName) {\r\n    let _a; let _b; let _c;\r\n    const debouncedName = useDebounce(ensName, 200);\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!debouncedName)\r\n            return [undefined];\r\n        try {\r\n            return debouncedName ? [namehash(debouncedName)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [debouncedName]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-void,no-cond-assign\r\n    const resolverAddressResult = (_a = resolverAddress.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\r\n    const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\r\n    const changed = debouncedName !== ensName;\r\n    return {\r\n        // eslint-disable-next-line no-cond-assign,no-nested-ternary,no-void\r\n        address: changed ? null : (_c = (_b = addr.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: changed || resolverAddress.loading || addr.loading,\r\n    };\r\n}\r\n","import { parseUnits } from '@ethersproject/units';\r\nimport { CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString';\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades';\r\nimport { isAddress } from '../../utils';\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices';\r\nimport { useCurrency } from '../../hooks/Tokens';\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport useENS from \"../../hooks/ENS/useENS\";\r\nimport { useCurrencyBalances } from '../wallet/hooks';\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions';\r\nimport { useUserSlippageTolerance } from '../user/hooks';\r\n\r\nexport function useSwapState() {\r\n    return useSelector((state) => state.swap);\r\n}\r\nexport function useSwapActionHandlers() {\r\n    const dispatch = useDispatch();\r\n    const onCurrencySelection = useCallback((field, currency) => {\r\n        dispatch(selectCurrency({\r\n            field,\r\n            // eslint-disable-next-line no-nested-ternary\r\n            currencyId: currency ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        }));\r\n    }, [dispatch]);\r\n    const onSwitchTokens = useCallback(() => {\r\n        dispatch(switchCurrencies());\r\n    }, [dispatch]);\r\n    const onUserInput = useCallback((field, typedValue) => {\r\n        dispatch(typeInput({ field, typedValue }));\r\n    }, [dispatch]);\r\n    const onChangeRecipient = useCallback((recipient) => {\r\n        dispatch(setRecipient({ recipient }));\r\n    }, [dispatch]);\r\n    return {\r\n        onSwitchTokens,\r\n        onCurrencySelection,\r\n        onUserInput,\r\n        onChangeRecipient,\r\n    };\r\n}\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value, currency) {\r\n    if (!value || !currency) {\r\n        return undefined;\r\n    }\r\n    try {\r\n        const typedValueParsed = parseUnits(value, currency.decimals).toString();\r\n        if (typedValueParsed !== '0') {\r\n            return currency instanceof Token\r\n                ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n                : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed));\r\n        }\r\n    }\r\n    catch (error) {\r\n        // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n        console.debug(`Failed to parse input amount: \"${value}\"`, error);\r\n    }\r\n    // necessary for all paths to return a value\r\n    return undefined;\r\n}\r\nconst BAD_RECIPIENT_ADDRESSES = [\r\n    '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',\r\n    '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a',\r\n    '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\r\n];\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade, checksummedAddress) {\r\n    return (trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n        trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress));\r\n}\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo() {\r\n    let _a; let _b;\r\n    const { account } = useActiveWeb3React();\r\n\r\n    const {\r\n        independentField,\r\n        typedValue,\r\n        [Field.INPUT]: {\r\n            currencyId: inputCurrencyId\r\n        },\r\n        [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId\r\n        },\r\n        recipient,\r\n    } = useSwapState();\r\n\r\n    const inputCurrency = useCurrency(inputCurrencyId);\r\n    const outputCurrency = useCurrency(outputCurrencyId);\r\n\r\n    const recipientLookup = useENS(recipient !== null && recipient !== undefined ? recipient : undefined);\r\n    // eslint-disable-next-line no-cond-assign\r\n    const to = (_a = (recipient === null ? account : recipientLookup.address)) !== null && _a !== undefined ? _a : null;\r\n    const relevantTokenBalances = useCurrencyBalances(account !== null && account !== undefined ? account : undefined, [\r\n        inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined,\r\n        outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined,\r\n    ]);\r\n    const isExactIn = independentField === Field.INPUT;\r\n    // eslint-disable-next-line no-cond-assign\r\n    const parsedAmount = tryParseAmount(typedValue, (_b = (isExactIn ? inputCurrency : outputCurrency)) !== null && _b !== undefined ? _b : undefined);\r\n\r\n    const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined);\r\n    const bestTradeExactOut = useTradeExactOut(inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined, !isExactIn ? parsedAmount : undefined);\r\n\r\n    const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut;\r\n    const currencyBalances = {\r\n        [Field.INPUT]: relevantTokenBalances[0],\r\n        [Field.OUTPUT]: relevantTokenBalances[1],\r\n    };\r\n    const currencies = {\r\n        [Field.INPUT]: inputCurrency !== null && inputCurrency !== undefined ? inputCurrency : undefined,\r\n        [Field.OUTPUT]: outputCurrency !== null && outputCurrency !== undefined ? outputCurrency : undefined,\r\n    };\r\n    let inputError;\r\n    if (!account) {\r\n        inputError = 'Connect Wallet';\r\n    }\r\n    if (!parsedAmount) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Enter an amount';\r\n    }\r\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Select a token';\r\n    }\r\n    const formattedTo = isAddress(to);\r\n    if (!to || !formattedTo) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Enter a recipient';\r\n    }\r\n    else if (BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n        (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n        (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))) {\r\n        inputError = inputError !== null && inputError !== undefined ? inputError : 'Invalid recipient';\r\n    }\r\n    const [allowedSlippage] = useUserSlippageTolerance();\r\n    const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage);\r\n    // compare input balance to max input based on version\r\n    const [balanceIn, amountIn] = [\r\n        currencyBalances[Field.INPUT],\r\n        slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n    ];\r\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n        // eslint-disable-next-line no-sequences\r\n        inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n    }\r\n    return {\r\n        currencies,\r\n        currencyBalances,\r\n        parsedAmount,\r\n        v2Trade: v2Trade !== null && v2Trade !== undefined ? v2Trade : undefined,\r\n        inputError,\r\n    };\r\n}\r\nfunction parseCurrencyFromURLParameter(urlParam) {\r\n    if (typeof urlParam === 'string') {\r\n        const valid = isAddress(urlParam);\r\n        if (valid)\r\n            return valid;\r\n        if (urlParam.toUpperCase() === 'BNB')\r\n            return 'BNB';\r\n        if (valid === false)\r\n            return 'BNB';\r\n    }\r\n    return 'BNB';\r\n}\r\nfunction parseTokenAmountURLParameter(urlParam) {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : '';\r\n}\r\nfunction parseIndependentFieldURLParameter(urlParam) {\r\n    return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT;\r\n}\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\r\nfunction validatedRecipient(recipient) {\r\n    if (typeof recipient !== 'string')\r\n        return null;\r\n    const address = isAddress(recipient);\r\n    if (address)\r\n        return address;\r\n    if (ENS_NAME_REGEX.test(recipient))\r\n        return recipient;\r\n    if (ADDRESS_REGEX.test(recipient))\r\n        return recipient;\r\n    return null;\r\n}\r\nexport function queryParametersToSwapState(parsedQs) {\r\n    let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency);\r\n    let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency);\r\n\r\n    if (inputCurrency === outputCurrency) {\r\n        if (typeof parsedQs.outputCurrency === 'string') {\r\n            inputCurrency = '';\r\n        }\r\n        else {\r\n            outputCurrency = '';\r\n        }\r\n    }\r\n    const recipient = validatedRecipient(parsedQs.recipient);\r\n    return {\r\n        [Field.INPUT]: {\r\n            currencyId: inputCurrency,\r\n        },\r\n        [Field.OUTPUT]: {\r\n            currencyId: outputCurrency,\r\n        },\r\n        typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n        independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n        recipient,\r\n    };\r\n}\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch() {\r\n    const { chainId } = useActiveWeb3React();\r\n    const dispatch = useDispatch();\r\n    const parsedQs = useParsedQueryString();\r\n    const [result, setResult] = useState();\r\n    useEffect(() => {\r\n        if (!chainId)\r\n            return;\r\n        const parsed = queryParametersToSwapState(parsedQs);\r\n        dispatch(replaceSwapState({\r\n            typedValue: parsed.typedValue,\r\n            field: parsed.independentField,\r\n            inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n            outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n            recipient: null,\r\n        }));\r\n        setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, chainId]);\r\n    return result;\r\n}","import { parse } from 'qs';\r\nimport { useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function useParsedQueryString() {\r\n    const { search } = useLocation();\r\n    return useMemo(() => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}), [search]);\r\n}\r\n","import { TokenAmount } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport { useTokenContract } from './useContract';\r\nimport { useSingleCallResult } from '../state/multicall/hooks';\r\n\r\nfunction useTokenAllowance(token, owner, spender) {\r\n    // eslint-disable-next-line no-void\r\n    const contract = useTokenContract(token === null || token === void 0 ? void 0 : token.address, false);\r\n    const inputs = useMemo(() => [owner, spender], [owner, spender]);\r\n    const allowance = useSingleCallResult(contract, 'allowance', inputs).result;\r\n    return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [token, allowance]);\r\n}\r\nexport default useTokenAllowance;","import { MaxUint256 } from '@ethersproject/constants';\r\nimport { TokenAmount, ETHER } from '@pancakeswap/sdk';\r\nimport { useCallback, useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { PC_ROUTER_ADDRESS } from '../config/config';\r\nimport useTokenAllowance from './useTokenAllowance';\r\nimport { Field } from '../state/swap/actions';\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\r\nimport { calculateGasMargin } from '../utils';\r\nimport { useTokenContract } from './useContract';\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice';\r\n\r\nexport const ApprovalState = {\r\n    \"UNKNOWN\": 0,\r\n    \"NOT_APPROVED\": 1,\r\n    \"PENDING\": 2,\r\n    \"APPROVED\": 3\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(amountToApprove, spender) {\r\n    const { account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\r\n    const currentAllowance = useTokenAllowance(token, account !== null && account !== undefined ? account : undefined, spender);\r\n    const pendingApproval = useHasPendingApproval(token === null || token === undefined ? undefined : token.address, spender);\r\n    // check the current approval status\r\n    const approvalState = useMemo(() => {\r\n        if (!amountToApprove || !spender)\r\n            return ApprovalState.UNKNOWN;\r\n        if (amountToApprove.currency === ETHER)\r\n            return ApprovalState.APPROVED;\r\n        // we might not have enough data to know whether or not we need to approve\r\n        if (!currentAllowance)\r\n            return ApprovalState.UNKNOWN;\r\n        console.log(amountToApprove)\r\n        // amountToApprove will be defined if currentAllowance is\r\n        // eslint-disable-next-line no-nested-ternary\r\n        return currentAllowance.lessThan(amountToApprove)\r\n            ? pendingApproval\r\n                ? ApprovalState.PENDING\r\n                : ApprovalState.NOT_APPROVED\r\n            : ApprovalState.APPROVED;\r\n    }, [amountToApprove, currentAllowance, pendingApproval, spender]);\r\n    const tokenContract = useTokenContract(token === null || token === undefined ? undefined : token.address);\r\n    const addTransaction = useTransactionAdder();\r\n    const approve = useCallback(async () => {\r\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n            console.error('approve was called unnecessarily');\r\n            return;\r\n        }\r\n        if (!token) {\r\n            console.error('no token');\r\n            return;\r\n        }\r\n        if (!tokenContract) {\r\n            console.error('tokenContract is null');\r\n            return;\r\n        }\r\n        if (!amountToApprove) {\r\n            console.error('missing amount to approve');\r\n            return;\r\n        }\r\n        if (!spender) {\r\n            console.error('no spender');\r\n            return;\r\n        }\r\n        let useExact = false;\r\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n            // general fallback for tokens who restrict approval amounts\r\n            useExact = true;\r\n            return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\r\n        });\r\n        // eslint-disable-next-line consistent-return\r\n        return callWithGasPrice(tokenContract, 'approve', [spender, useExact ? amountToApprove.raw.toString() : MaxUint256], {\r\n            gasLimit: calculateGasMargin(estimatedGas),\r\n        })\r\n            .then((response) => {\r\n            addTransaction(response, {\r\n                summary: `Approve ${amountToApprove.currency.symbol}`,\r\n                approval: { tokenAddress: token.address, spender },\r\n            });\r\n        })\r\n            .catch((error) => {\r\n            console.error('Failed to approve token', error);\r\n            throw error;\r\n        });\r\n    }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice]);\r\n    return [approvalState, approve];\r\n}\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade, allowedSlippage = 0) {\r\n    const amountToApprove = useMemo(() => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined), [trade, allowedSlippage]);\r\n    return useApproveCallback(amountToApprove, PC_ROUTER_ADDRESS);\r\n}\r\n\r\nexport function useApproveCallbackForRemove(pairToApprove, spender) {\r\n    const { account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const token = pairToApprove ? pairToApprove.liquidityToken : undefined;\r\n    const currentAllowance = useTokenAllowance(token, account !== null && account !== undefined ? account : undefined, spender);\r\n    const pendingApproval = useHasPendingApproval(token === null || token === undefined ? undefined : token.address, spender);\r\n    // check the current approval status\r\n    const approvalState = useMemo(() => {\r\n        if (!pairToApprove || !spender)\r\n            return ApprovalState.UNKNOWN;\r\n        if (pairToApprove.currency === ETHER)\r\n            return ApprovalState.APPROVED;\r\n        // we might not have enough data to know whether or not we need to approve\r\n        if (!currentAllowance)\r\n            return ApprovalState.UNKNOWN;\r\n        // pairToApprove will be defined if currentAllowance is\r\n        // eslint-disable-next-line no-nested-ternary\r\n        return parseFloat(currentAllowance.toFixed(2)) <= 0\r\n            ? pendingApproval\r\n                ? ApprovalState.PENDING\r\n                : ApprovalState.NOT_APPROVED\r\n            : ApprovalState.APPROVED;\r\n    }, [pairToApprove, currentAllowance, pendingApproval, spender]);\r\n    const tokenContract = useTokenContract(token === null || token === undefined ? undefined : token.address);\r\n    const addTransaction = useTransactionAdder();\r\n    const approve = useCallback(async () => {\r\n        if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n            console.error('approve was called unnecessarily');\r\n            return;\r\n        }\r\n        if (!token) {\r\n            console.error('no token');\r\n            return;\r\n        }\r\n        if (!tokenContract) {\r\n            console.error('tokenContract is null');\r\n            return;\r\n        }\r\n        if (!pairToApprove) {\r\n            console.error('missing amount to approve');\r\n            return;\r\n        }\r\n        if (!spender) {\r\n            console.error('no spender');\r\n            return;\r\n        }\r\n        let useExact = false;\r\n        const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n            // general fallback for tokens who restrict approval amounts\r\n            useExact = true;\r\n            return tokenContract.estimateGas.approve(spender, pairToApprove.raw.toString());\r\n        });\r\n        // eslint-disable-next-line consistent-return\r\n        return callWithGasPrice(tokenContract, 'approve', [spender, useExact ? pairToApprove.raw.toString() : MaxUint256], {\r\n            gasLimit: calculateGasMargin(estimatedGas),\r\n        })\r\n            .then((response) => {\r\n                addTransaction(response, {\r\n                    summary: `Approve ${pairToApprove.liquidityToken.symbol}`,\r\n                    approval: { tokenAddress: token.address, spender },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Failed to approve token', error);\r\n                throw error;\r\n            });\r\n    }, [approvalState, token, tokenContract, pairToApprove, spender, addTransaction, callWithGasPrice]);\r\n    return [approvalState, approve];\r\n}\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk';\r\nimport { MIN_BNB } from '../config/constants/index';\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount) {\r\n    if (!currencyAmount)\r\n        return undefined;\r\n    if (currencyAmount.currency === ETHER) {\r\n        if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n            return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB));\r\n        }\r\n        return CurrencyAmount.ether(JSBI.BigInt(0));\r\n    }\r\n    return currencyAmount;\r\n}\r\nexport default maxAmountSpend;\r\n","import { useMemo } from 'react';\r\nimport contenthashToUri from '../utils/contenthashToUri';\r\nimport { parseENSAddress } from '../utils/ENS/parseENSAddress';\r\nimport uriToHttp from '../utils/uriToHttp';\r\nimport useENSContentHash from './ENS/useENSContentHash';\r\n\r\nexport default function useHttpLocations(uri) {\r\n    const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri]);\r\n    const resolvedContentHash = useENSContentHash(ens === null || ens === undefined ? undefined : ens.ensName);\r\n    return useMemo(() => {\r\n        if (ens) {\r\n            return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : [];\r\n        }\r\n        return uri ? uriToHttp(uri) : [];\r\n    }, [ens, resolvedContentHash.contenthash, uri]);\r\n}\r\n","import { namehash } from 'ethers/lib/utils';\r\nimport { useMemo } from 'react';\r\nimport { useSingleCallResult } from '../../state/multicall/hooks';\r\nimport isZero from '../../utils/isZero';\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract';\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName) {\r\n    let _a; let _b; let _c;\r\n    const ensNodeArgument = useMemo(() => {\r\n        if (!ensName)\r\n            return [undefined];\r\n        try {\r\n            return ensName ? [namehash(ensName)] : [undefined];\r\n        }\r\n        catch (error) {\r\n            return [undefined];\r\n        }\r\n    }, [ensName]);\r\n    const registrarContract = useENSRegistrarContract(false);\r\n    const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\r\n    // eslint-disable-next-line no-void,no-cond-assign\r\n    const resolverAddress = (_a = resolverAddressResult.result) === null || _a === void 0 ? void 0 : _a[0];\r\n    const resolverContract = useENSResolverContract(resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress, false);\r\n    const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument);\r\n    return {\r\n        // eslint-disable-next-line no-cond-assign,no-void\r\n        contenthash: (_c = (_b = contenthash.result) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null,\r\n        loading: resolverAddressResult.loading || contenthash.loading,\r\n    };\r\n}\r\n","const getTokenLogoURL = (address) => `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`;\r\nexport default getTokenLogoURL;","import React, { useState } from 'react';\r\nimport { HelpIcon } from '@pancakeswap/uikit';\r\n\r\nfunction __rest (s, e) {\r\n    const t = {};\r\n    // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top,no-plusplus,no-redeclare\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                // eslint-disable-next-line no-restricted-syntax,no-var,block-scoped-var,vars-on-top\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\nconst BAD_SRCS = {};\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo = (_a) => {\r\n    const { srcs, alt } = _a; const rest = __rest(_a, [\"srcs\", \"alt\"]);\r\n    const [, refresh] = useState(0);\r\n    const src = srcs.find((s) => !BAD_SRCS[s]);\r\n    if (src) {\r\n        return (React.createElement(\"img\", { ...rest, alt, src, onError: () => {\r\n                if (src)\r\n                    BAD_SRCS[src] = true;\r\n                refresh((i) => i + 1);\r\n            }}));\r\n    }\r\n    return React.createElement(HelpIcon, { ...rest});\r\n};\r\nexport default Logo;","import { ETHER, Token } from '@pancakeswap/sdk';\r\nimport { BinanceIcon } from '@pancakeswap/uikit';\r\nimport React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport useHttpLocations from '../../hooks/useHttpLocations';\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL';\r\nimport Logo from './Logo';\r\n\r\nconst StyledLogo = styled(Logo) `\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`;\r\nexport default function CurrencyLogo({ currency, size = '24px', style, }) {\r\n    let _a;\r\n    const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\r\n    const srcs = useMemo(() => {\r\n        if (currency === ETHER)\r\n            return [];\r\n        if (currency instanceof Token) {\r\n            if (currency instanceof WrappedTokenInfo) {\r\n                return [...uriLocations, getTokenLogoURL(currency.address)];\r\n            }\r\n            return [getTokenLogoURL(currency.address)];\r\n        }\r\n        return [];\r\n    }, [currency, uriLocations]);\r\n    if (currency === ETHER) {\r\n        return React.createElement(BinanceIcon, { width: size, style });\r\n    }\r\n    // eslint-disable-next-line no-cond-assign\r\n    return React.createElement(StyledLogo, { size, srcs, alt: `${(_a = currency === null || currency === undefined ? undefined : currency.symbol) !== null && _a !== undefined ? _a : 'token'} logo`, style });\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CurrencyLogo from './CurrencyLogo';\r\n\r\nconst Wrapper = styled.div `\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`;\r\nexport default function DoubleCurrencyLogo({ currency0, currency1, size = 20, margin = false, }) {\r\n    return (React.createElement(Wrapper, { margin },\r\n        currency0 && React.createElement(CurrencyLogo, { currency: currency0, size: `${size.toString()}px`, style: { marginRight: '4px' } }),\r\n        currency1 && React.createElement(CurrencyLogo, { currency: currency1, size: `${size.toString()}px` })));\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useHttpLocations from '../../hooks/useHttpLocations';\r\nimport Logo from './Logo';\r\n\r\nconst StyledListLogo = styled(Logo) `\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`;\r\nexport default function ListLogo({ logoURI, style, size = '24px', alt, }) {\r\n    const srcs = useHttpLocations(logoURI);\r\n    return React.createElement(StyledListLogo, { alt, size, srcs, style });\r\n}\r\n","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline() {\r\n    const ttl = useSelector((state) => state.user.userDeadline);\r\n    const blockTimestamp = useCurrentBlockTimestamp();\r\n    return useMemo(() => {\r\n        if (blockTimestamp && ttl)\r\n            return blockTimestamp.add(ttl);\r\n        return undefined;\r\n    }, [blockTimestamp, ttl]);\r\n}","import { useSingleCallResult } from '../state/multicall/hooks';\r\nimport { useMulticallContract } from './useContract';\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp() {\r\n    let _a; let _b;\r\n    const multicall = useMulticallContract();\r\n    // eslint-disable-next-line no-cond-assign\r\n    return (_b = (_a = useSingleCallResult(multicall, 'getCurrentBlockTimestamp')) === null || _a === undefined ? undefined : _a.result) === null || _b === undefined ? undefined : _b[0];\r\n}","import PropTypes from 'prop-types'\r\nimport {Avatar, ListItem, ListItemAvatar, ListItemText, Typography} from \"@material-ui/core\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\n\r\nListToken.propTypes = {\r\n    currency: PropTypes.any,\r\n    item: PropTypes.any,\r\n    selectedToken: PropTypes.any,\r\n    tokenSelected: PropTypes.func\r\n}\r\nexport default function ListToken ({currency, item, selectedToken, tokenSelected}) {\r\n    const {account} = useActiveWeb3React()\r\n    const currencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n\r\n    return (\r\n        <ListItem\r\n            key={item?.address} button selected={(selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()) || (selectedToken?.symbol?.toLowerCase() === item?.symbol?.toLowerCase())}\r\n            onClick={() => {tokenSelected(item)}}\r\n            disabled={selectedToken?.address?.toLowerCase() === item?.address?.toLowerCase()}\r\n            secondaryAction={\r\n                <Typography\r\n                >\r\n                    {`${currencyBalance?.toSignificant(6) ?? 'Loading'}`}\r\n                </Typography>\r\n            }\r\n        >\r\n            <ListItemAvatar>\r\n                <Avatar\r\n                    src={`${item?.tokenImg}?w=248&fit=crop&auto=format`}\r\n                    srcSet={`${item?.tokenImg}?w=248&fit=crop&auto=format&dpr=2 2x`}\r\n                    alt={item?.name}\r\n                    loading=\"lazy\"\r\n                />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={item?.name}\r\n                secondary={item?.symbol}\r\n            />\r\n        </ListItem>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport {useEffect, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Grid, ImageList, ImageListItem, ImageListItemBar, ListSubheader, Paper, IconButton,\r\n    TextField,\r\n    Typography, ListItem, List, ListItemAvatar, ListItemText, Avatar, DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {ArrowDropDown, InfoOutlined} from \"@material-ui/icons\";\r\nimport {LoadingButton} from \"@material-ui/lab\";\r\nimport TokenImage from \"../../components/udego/TokenImage\";\r\nimport {useDispatch, useSelector} from \"../../redux/store\";\r\nimport {getTokens} from \"../../redux/slices/tokens\";\r\nimport {escapeRegExp} from \"../../utils\";\r\nimport {useCurrencyBalance} from \"../../state/wallet/hooks\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {CurrencyLogo} from \"../../components/Logo/index\";\r\nimport ListToken from \"./ListToken\";\r\n\r\nTokenSelect.propTypes = {\r\n    tokenSymbol: PropTypes.string.isRequired,\r\n    isMax: PropTypes.bool,\r\n    showApprove: PropTypes.bool,\r\n    tokenAddress: PropTypes.string,\r\n    label: PropTypes.string,\r\n    placeHolder: PropTypes.string,\r\n    inputValue: PropTypes.number,\r\n    tokenImg: PropTypes.string,\r\n    onItemChange: PropTypes.func,\r\n    onInputChange: PropTypes.func,\r\n    onApprove: PropTypes.func,\r\n    approveText: PropTypes.any,\r\n    onMax: PropTypes.func,\r\n    selectedToken: PropTypes.any,\r\n    isDisabled: PropTypes.bool\r\n}\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`)\r\n\r\nexport default function TokenSelect(\r\n    {\r\n        tokenSymbol = \"bnb\",\r\n        isMax=false,\r\n        tokenAddress=\"\",\r\n        label=\"\",\r\n        placeHolder=\"\",\r\n        inputValue=\"\",\r\n        onInputChange=null,\r\n        onItemChange=null,\r\n        tokenImg='./tokens/bnb.png',\r\n        showApprove=true,\r\n        onApprove=null,\r\n        approveText='',\r\n        onMax=null,\r\n        selectedToken,\r\n        isDisabled= true\r\n    }\r\n) {\r\n    const [symbol, setSymbol] = useState(tokenSymbol);\r\n    const [token, setToken] = useState(tokenImg);\r\n    const [address, setAddress] = useState(tokenAddress);\r\n    const { account } = useActiveWeb3React()\r\n\r\n    const [isDialogOpen, setDialog] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { tokens } = useSelector((state) => state.tokens);\r\n\r\n    useEffect(() => {\r\n        dispatch(getTokens());\r\n    }, [dispatch]);\r\n\r\n    const selectDialog = () => {\r\n        setDialog(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setDialog(false)\r\n    }\r\n\r\n    const tokenSelected = (item) => {\r\n        console.log(item)\r\n        setToken(item.tokenImg)\r\n        setAddress(item.address)\r\n        setSymbol(item.symbol)\r\n        setDialog(false)\r\n        onItemChange(item)\r\n    }\r\n\r\n    const enforcer = (nextUserInput) => {\r\n        if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n            onInputChange(nextUserInput)\r\n        }\r\n    }\r\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, selectedToken ?? undefined)\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{maxWidth: 620}}>\r\n                <CardContent sx={{background: '#e7e9ec', margin: '5px', borderRadius:'inherit'}}>\r\n                    <div>\r\n                        <p>\r\n                            {selectedToken\r\n                            ? `Balance: ${selectedCurrencyBalance?.toSignificant(6) ?? 'Loading' } `\r\n                            : ' - '}\r\n                            {\r\n                                (account && isMax && selectedToken) &&\r\n                                <Button variant=\"outlined\" style={{marginLeft:'3px'}} onClick={onMax} size=\"small\">Max</Button>\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                    <div style={{marginTop: '5px'}}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={10}>\r\n                                <TextField\r\n                                    type=\"number\"\r\n                                    fullWidth\r\n                                    value={inputValue}\r\n                                    variant=\"filled\"\r\n                                    label={label}\r\n                                    placeholder={placeHolder}\r\n                                    title={label}\r\n                                    onChange={(event) => {\r\n                                        enforcer(event.target.value.replace(/,/g, '.'))\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} md={2} sx={{display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                                <Button onClick={selectDialog} variant='text' sx={{padding:'5px'}}>\r\n                                    <CurrencyLogo currency={selectedToken} />\r\n                                    <Typography sx={{marginLeft:'5px'}}>\r\n                                        {(selectedToken && selectedToken.symbol && selectedToken.symbol.length > 20\r\n                                        ? `${selectedToken.symbol.slice(0, 4)}...${selectedToken.symbol.slice(\r\n                                            selectedToken.symbol.length - 5,\r\n                                            selectedToken.symbol.length,\r\n                                          )}`\r\n                                        : selectedToken?.symbol) || 'Select token'}\r\n                                    </Typography>\r\n                                    <ArrowDropDown />\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    {\r\n                        showApprove && <Button variant='outlined' disabled={(symbol.toLowerCase() === \"bnb\") || (isDisabled)} onClick={onApprove} sx={{marginTop:'7px'}}>\r\n                            {\r\n                                approveText\r\n                            }\r\n                        </Button>\r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth=\"md\"\r\n                open={isDialogOpen} onClose={handleClose}>\r\n                <DialogTitle>\r\n                    Select Token\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {\r\n                        !tokens && <LoadingButton loading>Loading Token List...</LoadingButton>\r\n                    }\r\n                    <List cols={4} gap={8}>\r\n                        {tokens?.map((tokenItem) => <ListToken item={tokenItem} tokenSelected={tokenSelected} selectedToken={selectedToken} currency={tokenItem} />)}\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { currencyEquals, ETHER, WETH } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { tryParseAmount } from '../state/swap/hooks';\r\nimport { useTransactionAdder } from '../state/transactions/hooks';\r\nimport { useCurrencyBalance } from '../state/wallet/hooks';\r\nimport { useWETHContract } from './useContract';\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice';\r\n\r\nexport const WrapType = () => {\r\n    WrapType[WrapType.NOT_APPLICABLE = 0] = \"NOT_APPLICABLE\";\r\n    WrapType[WrapType.WRAP = 1] = \"WRAP\";\r\n    WrapType[WrapType.UNWRAP = 2] = \"UNWRAP\";\r\n};\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE };\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(inputCurrency, outputCurrency, typedValue) {\r\n    const { chainId, account } = useActiveWeb3React();\r\n    const { callWithGasPrice } = useCallWithGasPrice();\r\n    const wethContract = useWETHContract();\r\n    const balance = useCurrencyBalance(account !== null && account !== undefined ? account : undefined, inputCurrency);\r\n    // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n    const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue]);\r\n    const addTransaction = useTransactionAdder();\r\n    return useMemo(() => {\r\n        if (!wethContract || !chainId || !inputCurrency || !outputCurrency)\r\n            return NOT_APPLICABLE;\r\n        const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount);\r\n        if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n            return {\r\n                wrapType: WrapType.WRAP,\r\n                execute: sufficientBalance && inputAmount\r\n                    ? async () => {\r\n                        try {\r\n                            const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\r\n                                value: `0x${inputAmount.raw.toString(16)}`,\r\n                            });\r\n                            addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` });\r\n                        }\r\n                        catch (error) {\r\n                            console.error('Could not deposit', error);\r\n                        }\r\n                    }\r\n                    : undefined,\r\n                inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n            };\r\n        }\r\n        if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n            return {\r\n                wrapType: WrapType.UNWRAP,\r\n                execute: sufficientBalance && inputAmount\r\n                    ? async () => {\r\n                        try {\r\n                            const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\r\n                                `0x${inputAmount.raw.toString(16)}`,\r\n                            ]);\r\n                            addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` });\r\n                        }\r\n                        catch (error) {\r\n                            console.error('Could not withdraw', error);\r\n                        }\r\n                    }\r\n                    : undefined,\r\n                inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n            };\r\n        }\r\n        return NOT_APPLICABLE;\r\n    }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice]);\r\n}","import { JSBI, Percent, Router, TradeType } from '@pancakeswap/sdk';\r\nimport { useMemo } from 'react';\r\nimport useActiveWeb3React from \"./useWeb3\";\r\nimport { useGasPrice } from '../state/user/hooks';\r\nimport truncateHash from '../utils/truncateHash';\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index';\r\nimport { useTransactionAdder } from '../state/transactions/hooks';\r\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils';\r\nimport isZero from '../utils/isZero';\r\nimport useTransactionDeadline from './useTransactionDeadline';\r\nimport useENS from './ENS/useENS';\r\nimport {showError, showPromise} from \"../config/helpers\";\r\n\r\nexport const SwapCallbackState = {\r\n    'INVALID': 0,\r\n    'LOADING': 1,\r\n    'VALID': 2\r\n};\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(trade, // trade to execute, required\r\nallowedSlippage = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\nrecipientAddressOrName) {\r\n    const { account, chainId, library } = useActiveWeb3React();\r\n    const { address: recipientAddress } = useENS(recipientAddressOrName);\r\n    const recipient = recipientAddressOrName === null ? account : recipientAddress;\r\n    const deadline = useTransactionDeadline();\r\n    return useMemo(() => {\r\n        if (!trade || !recipient || !library || !account || !chainId || !deadline)\r\n            return [];\r\n        const contract = getRouterContract(chainId, library, account);\r\n        if (!contract) {\r\n            return [];\r\n        }\r\n        const swapMethods = [];\r\n        swapMethods.push(Router.swapCallParameters(trade, {\r\n            feeOnTransfer: false,\r\n            allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n            recipient,\r\n            deadline: deadline.toNumber(),\r\n        }));\r\n        if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n            swapMethods.push(Router.swapCallParameters(trade, {\r\n                feeOnTransfer: true,\r\n                allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n                recipient,\r\n                deadline: deadline.toNumber(),\r\n            }));\r\n        }\r\n        return swapMethods.map((parameters) => ({ parameters, contract }));\r\n    }, [account, allowedSlippage, chainId, deadline, library, recipient, trade]);\r\n}\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(trade, // trade to execute, required\r\nallowedSlippage = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\nrecipientAddressOrName) {\r\n    const { account, chainId, library } = useActiveWeb3React();\r\n    const gasPrice = useGasPrice();\r\n    const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName);\r\n    const addTransaction = useTransactionAdder();\r\n    const { address: recipientAddress } = useENS(recipientAddressOrName);\r\n    const recipient = recipientAddressOrName === null ? account : recipientAddress;\r\n    return useMemo(() => {\r\n        if (!trade || !library || !account || !chainId) {\r\n            return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' };\r\n        }\r\n        if (!recipient) {\r\n            if (recipientAddressOrName !== null) {\r\n                return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' };\r\n            }\r\n            return { state: SwapCallbackState.LOADING, callback: null, error: null };\r\n        }\r\n        return {\r\n            state: SwapCallbackState.VALID,\r\n            callback: async function onSwap() {\r\n                const estimatedCalls = await Promise.all(swapCalls.map((call) => {\r\n                    const { parameters: { methodName, args, value }, contract, } = call;\r\n                    const options = !value || isZero(value) ? {} : { value };\r\n                    return contract.estimateGas[methodName](...args, options)\r\n                        .then((gasEstimate) => ({\r\n                            call,\r\n                            gasEstimate,\r\n                        }))\r\n                        .catch((gasError) => {\r\n                        console.error('Gas estimate failed, trying eth_call to extract error', call);\r\n                        return contract.callStatic[methodName](...args, options)\r\n                            .then((result) => {\r\n                            console.error('Unexpected successful call after failed estimate gas', call, gasError, result);\r\n                            return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') };\r\n                        })\r\n                            .catch((callError) => {\r\n                            let _a;\r\n                            console.error('Call threw error', call, callError);\r\n                                // eslint-disable-next-line no-cond-assign\r\n                            const reason = callError.reason || ((_a = callError.data) === null || _a === undefined ? undefined : _a.message) || callError.message;\r\n                            const errorMessage = `The transaction cannot succeed due to error: ${reason !== null && reason !== undefined ? reason : 'Unknown error, check the logs'}.`;\r\n                            return { call, error: new Error(errorMessage) };\r\n                        });\r\n                    });\r\n                }));\r\n                // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n                const successfulEstimation = estimatedCalls.find((el, ix, list) => 'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]));\r\n                if (!successfulEstimation) {\r\n                    const errorCalls = estimatedCalls.filter((call) => 'error' in call);\r\n                    if (errorCalls.length > 0)\r\n                        throw errorCalls[errorCalls.length - 1].error;\r\n                    throw new Error('Unexpected error. Please contact support: none of the calls threw an error');\r\n                }\r\n                const { call: { contract, parameters: { methodName, args, value }, }, gasEstimate, } = successfulEstimation;\r\n                return contract[methodName](...args, {gasLimit: calculateGasMargin(gasEstimate), gasPrice, ...(value && !isZero(value) ? { value, from: account } : { from: account })})\r\n                    .then((response) => {\r\n                    const inputSymbol = trade.inputAmount.currency.symbol;\r\n                    const outputSymbol = trade.outputAmount.currency.symbol;\r\n                    const inputAmount = trade.inputAmount.toSignificant(3);\r\n                    const outputAmount = trade.outputAmount.toSignificant(3);\r\n                    const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`;\r\n                    const withRecipient = recipient === account\r\n                        ? base\r\n                        : `${base} to ${recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                            ? truncateHash(recipientAddressOrName)\r\n                            : recipientAddressOrName}`;\r\n                    showPromise(response.wait())\r\n                    addTransaction(response, {\r\n                        summary: withRecipient,\r\n                    });\r\n                    return response.hash;\r\n                })\r\n                    .catch((error) => {\r\n                    // if the user rejected the tx, pass this along\r\n                    if ((error === null || error === undefined ? undefined : error.code) === 4001) {\r\n                        showError('Transaction Rejected.')\r\n                        throw new Error('Transaction rejected.');\r\n                    }\r\n                    else {\r\n                        // otherwise, the error was unexpected and we need to convey that\r\n                        console.error(`Swap failed`, error, methodName, args, value);\r\n                        showError(`Swap failed: ${error.message}`)\r\n                        throw new Error(`Swap failed: ${error.message}`);\r\n                    }\r\n                });\r\n            },\r\n            error: null,\r\n        };\r\n    }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice]);\r\n}","import styled from 'styled-components';\r\nimport { Box } from '@pancakeswap/uikit';\r\n\r\nconst Card = styled(Box) `\r\n  width: ${({ width }) => width !== null && width !== undefined ? width : '100%'};\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme?.colors?.background};\r\n`;\r\nexport default Card;\r\nexport const LightCard = styled(Card) `\r\n  border: 1px solid ${({ theme }) => theme?.colors?.background};\r\n  background-color: ${({ theme }) => theme?.colors?.backgroundAlt};\r\n`;\r\nexport const LightGreyCard = styled(Card) `\r\n  border: 1px solid ${({ theme }) => theme?.colors?.cardBorder};\r\n  background-color: ${({ theme }) => theme?.colors?.background};\r\n`;\r\nexport const GreyCard = styled(Card) `\r\n  background-color: ${({ theme }) => theme?.colors?.dropdown};\r\n`;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nfunction __rest (s, e) {\r\n    const t = {};\r\n    // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var,no-redeclare,no-plusplus\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                // eslint-disable-next-line no-var,no-restricted-syntax,vars-on-top,block-scoped-var\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\n\r\nconst rotate = keyframes `\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nconst StyledSVG = styled.svg `\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke !== null && stroke !== undefined ? stroke : theme.colors.primary};\r\n  }\r\n`;\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader(_a) {\r\n    const { size = '16px', stroke } = _a; const rest = __rest(_a, [\"size\", \"stroke\"]);\r\n    return (React.createElement(StyledSVG, {viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", size, stroke, ...rest},\r\n        React.createElement(\"path\", { d: \"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\", strokeWidth: \"2.5\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })));\r\n}","import { useEffect, useState } from 'react';\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast(value, filterFn) {\r\n    const [last, setLast] = useState(filterFn && filterFn(value) ? value : undefined);\r\n    useEffect(() => {\r\n        setLast((prev) => {\r\n            const shouldUse = filterFn ? filterFn(value) : true;\r\n            if (shouldUse)\r\n                return value;\r\n            return prev;\r\n        });\r\n    }, [filterFn, value]);\r\n    return last;\r\n}\r\nfunction isDefined(x) {\r\n    return x !== null && x !== undefined;\r\n}\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy(value) {\r\n    return useLast(value, isDefined);\r\n}\r\nexport default useLastTruthy;","import React from 'react';\r\nimport { HelpIcon, useTooltip, Box } from '@pancakeswap/uikit';\r\nimport styled from 'styled-components';\r\n\r\nfunction __rest (s, e) {\r\n    let p;\r\n    const t = {};\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        // eslint-disable-next-line no-var,vars-on-top\r\n        var i = 0;\r\n    // eslint-disable-next-line no-lone-blocks\r\n    {\r\n        p = Object.getOwnPropertySymbols(s);\r\n        // eslint-disable-next-line no-plusplus\r\n        for (; i < p.length; i++) {\r\n                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                        t[p[i]] = s[p[i]];\r\n                }\r\n    }\r\n    return t;\r\n};\r\nconst QuestionWrapper = styled.div `\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\nconst QuestionHelper = (_a) => {\r\n    const { text, placement = 'right-end' } = _a; const props = __rest(_a, [\"text\", \"placement\"]);\r\n    const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' });\r\n    return (React.createElement(Box, { ...props},\r\n        tooltipVisible && tooltip,\r\n        React.createElement(QuestionWrapper, { ref: targetRef },\r\n            React.createElement(HelpIcon, { color: \"textSubtle\", width: \"16px\" }))));\r\n};\r\nexport default QuestionHelper;","import React from 'react';\r\nimport { Text, ErrorIcon } from '@pancakeswap/uikit';\r\nimport styled, { css } from 'styled-components';\r\nimport { AutoColumn } from '../../../components/Layout/Column';\r\n\r\nexport const Wrapper = styled.div `\r\n  position: relative;\r\n  padding: 1rem;\r\n`;\r\nexport const ArrowWrapper = styled.div `\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) => clickable\r\n    ? css `\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n    : null}\r\n`;\r\nexport const ErrorText = styled(Text) `\r\n  color: ${({ theme, severity }) =>\r\n  // eslint-disable-next-line no-nested-ternary  \r\n    severity === 3 || severity === 4\r\n    ? theme.colors?.failure\r\n    // eslint-disable-next-line no-nested-ternary\r\n    : severity === 2\r\n        ? theme.colors?.warning\r\n        : severity === 1\r\n            ? theme.colors?.text\r\n            : theme.colors?.success};\r\n`;\r\nexport const StyledBalanceMaxMini = styled.button `\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors?.background};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors?.text};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors?.dropdown};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors?.dropdown};\r\n    outline: none;\r\n  }\r\n`;\r\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true }) `\r\n  width: 220px;\r\n`;\r\nconst SwapCallbackErrorInner = styled.div `\r\n  background-color: ${({ theme }) => `${theme.colors?.failure}33`};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors?.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`;\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div `\r\n  background-color: ${({ theme }) => `${theme.colors?.failure}33`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`;\r\nexport function SwapCallbackError({ error }) {\r\n    return (React.createElement(SwapCallbackErrorInner, null,\r\n        React.createElement(SwapCallbackErrorInnerAlertTriangle, null,\r\n            React.createElement(ErrorIcon, { width: \"24px\" })),\r\n        React.createElement(\"p\", null, error)));\r\n}\r\nexport const SwapShowAcceptChanges = styled(AutoColumn) `\r\n  background-color: ${({ theme }) => `${theme.colors?.warning}33`};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`;","import React from 'react'\r\nimport { warningSeverity } from '../../../utils/prices'\r\nimport { ONE_BIPS } from '../../../config/constants/index'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact } ) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n        {/* eslint-disable-next-line no-nested-ternary */}\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import React, { Fragment, memo } from 'react'\r\nimport { Trade } from '@pancakeswap/sdk'\r\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { unwrappedToken } from '../../../utils/wrappedCurrency'\r\n\r\nexport default memo(({ trade } ) => (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem = i === path.length - 1\r\n        const currency = unwrappedToken(token)\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  ))\r\n","import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport {Card, CardContent, CardHeader, Grid} from \"@material-ui/core\";\r\nimport { Field } from '../../../state/swap/actions'\r\n\r\nimport { useUserSlippageTolerance } from '../../../state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../../utils/prices'\r\nimport { AutoColumn } from '../../../components/Layout/Column'\r\nimport QuestionHelper from '../../../components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../../../components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage, showRoute }) {\r\n\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n      <Grid item xs={12} md={12} sx={{textAlign: 'center'}}>\r\n                    <Card>\r\n                        <CardHeader\r\n                            title=\"Swap Details\"\r\n                            subheader=\"Detailed information about the swap\"\r\n                        />\r\n                        <CardContent>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6} md={6}>\r\n                                    Min. Received\r\n                                </Grid>\r\n                                <Grid item xs={6} md={6}>\r\n                                    <b>\r\n                                      {isExactIn\r\n                                      ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                                        '-'\r\n                                      : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n                                    </b>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6} md={6}>\r\n                                    Price Impact\r\n                                </Grid>\r\n                                <Grid item xs={6} md={6}>\r\n                                    <b style={{color: 'green'}}>\r\n                                      <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n                                    </b>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6} md={6}>\r\n                                    Is Routed?\r\n                                </Grid>\r\n                                <Grid item xs={6} md={6}>\r\n                                    {\r\n                                        !showRoute &&\r\n                                        <b style={{color: 'red'}}>\r\n                                            False\r\n                                        </b>\r\n                                    }\r\n                                    {\r\n                                        showRoute &&\r\n                                        <SwapRoute trade={trade} />\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={6} md={6}>\r\n                                    Liquidity Fee\r\n                                </Grid>\r\n                                <Grid item xs={6} md={6}>\r\n                                    <b>{realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}</b>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n  )\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }) {\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n      <>\r\n      {\r\n          trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} showRoute={showRoute} />\r\n        </>\r\n      )}\r\n      </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useLastTruthy from '../../../hooks/useLast'\r\nimport { AdvancedSwapDetails } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div`\r\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 20px;\r\n  background-color: ${({ theme }) => theme.colors?.invertedContrast};\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from '@pancakeswap/sdk'\r\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <AutoRenewIcon width=\"14px\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import {useCallback, useMemo, useState, useEffect} from \"react\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    ButtonGroup,\r\n    IconButton,\r\n    Grid,\r\n    Button\r\n} from '@material-ui/core';\r\nimport {\r\n    Add,\r\n    ArrowDownwardOutlined,\r\n    ArrowForwardIosOutlined,\r\n    History,\r\n    Settings\r\n} from \"@material-ui/icons\";\r\nimport {isMobile} from 'react-device-detect';\r\nimport {useNavigate} from \"react-router-dom\";\r\n// hooks\r\nimport {JSBI, Token, TradeType} from \"@pancakeswap/sdk\";\r\nimport {Box, Text} from \"@pancakeswap/uikit\";\r\nimport {APP_NAME} from \"../../contexts/Constants\";\r\nimport TokenSelect from \"./TokenSelect\";\r\nimport tokens from \"../../config/tokens\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport WalletPopover from \"../../layouts/dashboard/WalletPopover\";\r\nimport {\r\n    useDefaultsFromURLSearch,\r\n    useDerivedSwapInfo,\r\n    useSwapActionHandlers,\r\n    useSwapState\r\n} from \"../../state/swap/hooks\";\r\nimport {useAllTokens, useCurrency} from \"../../hooks/Tokens\";\r\nimport {useExpertModeManager, useUserSingleHopOnly, useUserSlippageTolerance} from \"../../state/user/hooks\";\r\nimport useWrapCallback, {WrapType} from \"../../hooks/useWrapCallback\";\r\nimport { Field } from '../../state/swap/actions'\r\nimport {ApprovalState, useApproveCallbackFromTrade} from \"../../hooks/useApproveCallback\";\r\nimport {useIsTransactionUnsupported} from \"../../hooks/Trades\";\r\nimport {maxAmountSpend} from \"../../utils/maxAmountSpend\";\r\nimport {computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity} from \"../../utils/prices\";\r\nimport confirmPriceImpactWithoutFee from \"./components/confirmPriceImpactWithoutFee\";\r\nimport {useSwapCallback} from \"../../hooks/useSwapCallback\";\r\nimport {GreyCard} from \"../../components/Card\";\r\nimport {AutoRow, RowBetween} from \"../../components/Layout/Row\";\r\nimport CircleLoader from \"../../components/Loader/CircleLoader\";\r\nimport Column from \"../../components/Layout/Column\";\r\nimport AdvancedSwapDetailsDropdown from \"./components/AdvancedSwapDetailsDropdown\";\r\nimport TradePrice from \"./components/TradePrice\";\r\nimport {SwapCallbackError} from \"./components/styleds\";\r\nimport useToast from \"../../hooks/useToast\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SwapUdego() {\r\n    const { account } = useActiveWeb3React()\r\n    const navigate = useNavigate()\r\n    const loadedURLParams = useDefaultsFromURLSearch()\r\n\r\n    const { toastSuccess } = useToast()\r\n\r\n    const [loadedInputCurrency, loadedOutputCurrency] = [\r\n        useCurrency(loadedURLParams?.inputCurrencyId),\r\n        useCurrency(loadedURLParams?.outputCurrencyId)\r\n    ]\r\n\r\n    const urlLoadedTokens = useMemo(\r\n        () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c) => c instanceof Token) ?? [],\r\n        [loadedInputCurrency, loadedOutputCurrency],\r\n    )\r\n\r\n    const defaultTokens = useAllTokens()\r\n    const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n    const [isExpertMode] = useExpertModeManager()\r\n\r\n    const { independentField, typedValue, recipient } = useSwapState()\r\n    const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n    const { wrapType, execute: onWrap, inputError: wrapInputError, } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n    const showWrap = wrapType !== WrapType.NOT_APPLICABLE\r\n    const trade = showWrap ? undefined : v2Trade\r\n\r\n    const parsedAmounts = showWrap ? { [Field.INPUT]: parsedAmount, [Field.OUTPUT]: parsedAmount } : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n    }\r\n\r\n    const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n    const isValid = !swapInputError\r\n    const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n    const handleTypeInput = useCallback((value) => {\r\n            onUserInput(Field.INPUT, value)\r\n        },\r\n        [onUserInput]\r\n    )\r\n    const handleTypeOutput = useCallback((value) => {\r\n            onUserInput(Field.OUTPUT, value)\r\n        },\r\n        [onUserInput],\r\n    )\r\n\r\n    const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState({\r\n        tradeToConfirm: undefined,\r\n        attemptingTxn: false,\r\n        swapErrorMessage: undefined,\r\n        txHash: undefined,\r\n    })\r\n\r\n    const formattedAmounts = {\r\n        [independentField]: typedValue,\r\n        [dependentField]: showWrap\r\n          ? parsedAmounts[independentField]?.toExact() ?? ''\r\n          : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n    }\r\n\r\n    const route = trade?.route\r\n    const userHasSpecifiedInputOutput = Boolean(\r\n        currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n    )\r\n    const noRoute = !route\r\n    // check whether the user has approved the router on the input token\r\n    const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n    // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n    const [approvalSubmitted, setApprovalSubmitted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (approval === ApprovalState.PENDING) {\r\n            setApprovalSubmitted(true);\r\n        }\r\n    }, [approval, approvalSubmitted]);\r\n    const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\r\n    let _f;\r\n    // eslint-disable-next-line no-cond-assign\r\n    const atMaxAmountInput = Boolean(maxAmountInput && ((_f = parsedAmounts[Field.INPUT]) === null || _f === undefined ? undefined : _f.equalTo(maxAmountInput)));\r\n    // the callback to execute the swap\r\n    const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient);\r\n    const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\r\n\r\n    const handleSwap = useCallback(() => {\r\n        if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n            return;\r\n        }\r\n        if (!swapCallback) {\r\n            return;\r\n        }\r\n        setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined });\r\n        swapCallback()\r\n            .then((hash) => {\r\n            setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash });\r\n        })\r\n            .catch((error) => {\r\n            setSwapState({\r\n                attemptingTxn: false,\r\n                tradeToConfirm,\r\n                swapErrorMessage: error.message,\r\n                txHash: undefined,\r\n            });\r\n        });\r\n    }, [priceImpactWithoutFee, swapCallback, tradeToConfirm]);\r\n    // errors\r\n    const [showInverted, setShowInverted] = useState(false);\r\n    // warnings on slippage\r\n    const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\r\n    // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n    // never show if price impact is above threshold in non expert mode\r\n    const showApproveFlow = !swapInputError &&\r\n        (approval === ApprovalState.NOT_APPROVED ||\r\n            approval === ApprovalState.PENDING ||\r\n            (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n        !(priceImpactSeverity > 3 && !isExpertMode);\r\n\r\n    const handleInputSelect = useCallback((inputCurrency) => {\r\n        setApprovalSubmitted(false); // reset 2 step UI for approvals\r\n        onCurrencySelection(Field.INPUT, inputCurrency);\r\n    }, [onCurrencySelection]);\r\n    const handleMaxInput = useCallback(() => {\r\n        if (maxAmountInput) {\r\n            onUserInput(Field.INPUT, maxAmountInput.toExact());\r\n        }\r\n    }, [maxAmountInput, onUserInput]);\r\n    const handleOutputSelect = useCallback((outputCurrency) => {\r\n        console.log(outputCurrency)\r\n        onCurrencySelection(Field.OUTPUT, outputCurrency);\r\n    }, [onCurrencySelection]);\r\n    const swapIsUnsupported = useIsTransactionUnsupported(currencies === null || currencies === undefined ? undefined : currencies.INPUT, currencies === null || currencies === undefined ? undefined : currencies.OUTPUT);\r\n\r\n    const openPool = () => {\r\n        navigate('/pool')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={12}>\r\n                    <Card elevation={1}>\r\n                        <CardHeader\r\n                            title=\"SWAPPING\"\r\n                            subheader={`Trade tokens on ${APP_NAME} AMM platform.`}\r\n                            action={\r\n                                <ButtonGroup>\r\n                                    {/* <IconButton aria-label=\"recent transactions\"> */}\r\n                                    {/*    <History /> */}\r\n                                    {/* </IconButton> */}\r\n                                    {/* <IconButton aria-label=\"settings\"> */}\r\n                                    {/*    <Settings /> */}\r\n                                    {/* </IconButton> */}\r\n                                    <IconButton aria-label=\"add liquidity\" onClick={openPool}>\r\n                                        <Add />\r\n                                    </IconButton>\r\n                                </ButtonGroup>\r\n                            }\r\n                        />\r\n                        <CardContent />\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TokenSelect\r\n                        placeHolder=\"Input Amount\"\r\n                        label=\"Swap From\"\r\n                        isMax\r\n                        tokenAddress={currencies[Field.INPUT]?.address}\r\n                        tokenSymbol={currencies[Field.INPUT]?.symbol}\r\n                        tokenImg={`./tokens/${currencies[Field.INPUT]?.symbol ?? 'bnb'}.png`}\r\n                        onItemChange={handleInputSelect}\r\n                        onInputChange={handleTypeInput}\r\n                        inputValue={formattedAmounts[Field.INPUT]}\r\n                        selectedToken={currencies[Field.INPUT]}\r\n                        showApprove={showApproveFlow}\r\n                        isDisabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                        onApprove={approveCallback}\r\n                        onMax={handleMaxInput}\r\n                        approveText={(showApproveFlow) &&\r\n                                // eslint-disable-next-line no-nested-ternary\r\n                                (approval === ApprovalState.PENDING ? (\r\n                                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                                      Approving <CircleLoader stroke=\"white\" />\r\n                                    </AutoRow>\r\n                                ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                                    'Approved'\r\n                                ) : (\r\n                                    `Approve ${currencies[Field.INPUT]?.symbol ?? '' }`\r\n                                ))}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={2} sx={{display:'flex', justifyContent:'center', alignItems:'center', textAlign: 'center'}}>\r\n                    <div>\r\n                        <TradePrice\r\n                          price={trade?.executionPrice}\r\n                          showInverted={showInverted}\r\n                          setShowInverted={setShowInverted}\r\n                        />\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                console.log(\"[+] Switch Tokens\")\r\n                                setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                                onSwitchTokens()\r\n                            }}\r\n                        >\r\n                            {\r\n                                !isMobile ?\r\n                                    <ArrowForwardIosOutlined />\r\n                                : <ArrowDownwardOutlined />\r\n                            }\r\n                        </IconButton>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={5}>\r\n                    <TokenSelect\r\n                        placeHolder=\"Output Amount\"\r\n                        label=\"Swap To\"\r\n                        tokenAddress={currencies[Field.OUTPUT]?.address}\r\n                        tokenSymbol={currencies[Field.OUTPUT]?.symbol}\r\n                        tokenImg={`./tokens/${currencies[Field.OUTPUT]?.address}.png`}\r\n                        onItemChange={handleOutputSelect}\r\n                        onInputChange={handleTypeOutput}\r\n                        selectedToken={currencies[Field.OUTPUT]}\r\n                        inputValue={formattedAmounts[Field.OUTPUT]}\r\n                        showApprove={false}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={12} sx={{display: 'flex', justifyContent:'center', alignItems: 'center'}}>\r\n                    {\r\n                        !account && <WalletPopover />\r\n                    }\r\n                    {\r\n                        (account) &&\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            color={isValid && priceImpactSeverity > 2 ? 'error' : 'primary'}\r\n                            sx={{maxWidth: 620, borderRadius: 25}}\r\n                            size=\"large\"\r\n                            onClick={() => {\r\n                                handleSwap()\r\n                            }}\r\n                            disabled={\r\n                                !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                            }\r\n                        >\r\n                            {\r\n                                // eslint-disable-next-line no-nested-ternary\r\n                                 (\r\n                                    (noRoute && userHasSpecifiedInputOutput) ? (\r\n                                        'Insufficient liquidity for this trade'\r\n                                    ) : (\r\n                                    swapInputError ||\r\n                                        (\r\n                                            // eslint-disable-next-line no-nested-ternary\r\n                                            priceImpactSeverity > 3 && !isExpertMode\r\n                                                ? 'Price Impact Too High'\r\n                                                : priceImpactSeverity > 2\r\n                                                ? 'Swap Anyway'\r\n                                                : 'Swap'\r\n                                        )\r\n                                )\r\n                                    )\r\n                            }\r\n                        </Button>\r\n                    }\r\n                    {swapIsUnsupported && (\r\n                            <Button width=\"100%\" variant=\"contained\" disabled mb=\"4px\">\r\n                                Unsupported Asset\r\n                            </Button>\r\n                        )\r\n                    }\r\n\r\n                    {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n                </Grid>\r\n                <Grid item xs={12} md={12} sx={{display: 'flex', justifyContent:'center', alignItems: 'center'}}>\r\n                    {\r\n                        (!swapIsUnsupported && trade) && (\r\n                            <AdvancedSwapDetailsDropdown trade={trade} />\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index';\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n * @param t Translation\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee) {\r\n    if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n        const confirmWord = 'confirm';\r\n        return (\r\n        // eslint-disable-next-line no-alert\r\n        window.prompt('This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.', {\r\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\r\n            word: confirmWord,\r\n        }) === confirmWord);\r\n    }\r\n    if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n        // eslint-disable-next-line no-alert\r\n        return window.confirm('This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.', {\r\n            amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\r\n        });\r\n    }\r\n    return true;\r\n}\r\n","// material\r\nimport { Container, Grid } from '@material-ui/core';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport {PAGE_TITLE} from \"../contexts/Constants\";\r\nimport SwapUdego from \"./swap-udego\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UdegoSwap() {\r\n    const { themeStretch } = useSettings();\r\n\r\n    return (\r\n        <Page title={`Swap | ${PAGE_TITLE}`}>\r\n            <Container maxWidth={themeStretch ? false : 'xl'}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={12}>\r\n                        <SwapUdego />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Page>\r\n    );\r\n}\r\n"],"sourceRoot":""}