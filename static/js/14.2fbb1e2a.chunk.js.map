{"version":3,"sources":["../node_modules/@material-ui/core/CardActions/cardActionsClasses.js","../node_modules/@material-ui/core/CardActions/CardActions.js","../node_modules/@material-ui/core/Skeleton/skeletonClasses.js","../node_modules/@material-ui/core/Skeleton/Skeleton.js","pages/farm-udego/hooks/useApproveFarm.js","pages/farm-udego/components/InputField.js","pages/farm-udego/hooks/useStakeFarms.js","pages/farm-udego/hooks/useUnstakeFarms.js","pages/farm-udego/components/StakeAction.js","pages/farm-udego/hooks/useHarvestFarm.js","pages/farm-udego/components/HarvestAction.js","pages/farm-udego/components/farmActions.js","pages/farm-udego/FarmCard.js","pages/UdegoFarm.js"],"names":["getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","styleProps","root","disableSpacing","spacing","_extends","display","alignItems","padding","marginLeft","CardActions","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","getSkeletonUtilityClass","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","getUnit","shape","borderRadius","radiusValue","toUnitless","backgroundColor","alpha","palette","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","css","action","hover","Skeleton","component","style","Boolean","children","as","useApproveFarm","lpContract","masterChefContract","useMasterchef","callWithGasPrice","useCallWithGasPrice","onApprove","useCallback","a","address","ethers","constants","MaxUint256","tx","wait","receipt","status","inputRegex","RegExp","InputField","tokenSymbol","isMax","label","placeHolder","inputValue","onInputChange","onMax","selectedToken","tokenBalance","max","onConfirm","onDismiss","account","useActiveWeb3React","useState","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","BigNumber","fullBalanceNumber","isBalanceZero","Card","sx","CardContent","background","margin","balance","stakedBalanceBigNumber","getBalanceAmount","gt","toFixed","ROUND_DOWN","e","showError","data","message","displayBalance","Button","onClick","size","Grid","container","item","xs","md","TextField","inputMode","step","min","type","fullWidth","value","parseFloat","placeholder","title","onChange","event","nextUserInput","currentTarget","replace","test","escapeRegExp","fontSize","marginRight","disabled","isFinite","eq","useStakeFarms","pid","onStake","amount","stakeFarm","txHash","console","info","useUnstakeFarms","onUnstake","unstakeFarm","StakeAction","farm","tokenName","lpLabel","isUnstake","isDisabled","open","setOpen","input","setInput","dispatch","useAppDispatch","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","color","Dialog","onClose","DialogTitle","DialogContent","dividers","lpSymbol","lpAddresses","ChainId","MAINNET","val","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","timeStamp","rawEarningsBalance","BIG_ZERO","showFulfill","InfoItem","number","Typography","mb","FarmActions","addLiquidityUrl","udePrice","requestedApproval","setRequestedApproval","userData","allowance","stakedBalance","userLast","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","error","differ","Date","now","hours","useEffect","py","textAlign","WalletPopover","mt","Divider","formatUnit","toNumber","toString","CardMediaStyle","position","justifyContent","paddingTop","top","zIndex","backdropFilter","WebkitBackdropFilter","borderTopLeftRadius","borderRadiusMd","borderTopRightRadius","darker","CoverImgStyle","objectFit","FarmInfo","fontWeight","FarmCard","displayApr","stakeAssetImage","id","totalValueFormatted","liquidity","toLocaleString","undefined","maximumFractionDigits","toUpperCase","earnLabel","dual","weight","poolWeight","SvgIconStyle","src","bottom","Avatar","alt","align","Box","SkeletonLoad","Array","map","_","index","sm","getDisplayApr","udeRewardsApr","lpRewardsApr","UdegoFarm","themeStretch","useSettings","useDispatch","useFarms","farmsLP","userDataLoaded","usePriceUdeBusd","activeFarms","filter","multiplier","isArchivedPid","usePollFarmsWithUserData","choseFarms","farmsToDisplay","lpTotalInQuoteToken","quoteTokenPriceBusd","totalLiquidity","times","getFarmApr","apr","farmsList","Page","PAGE_TITLE","Container","length"],"mappings":"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","file":"static/js/14.2fbb1e2a.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, !styleProps.disableSpacing && styles.spacing];\n  }\n})(({\n  styleProps\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = styleProps;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\n\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return [styles.root, styles[styleProps.variant], styleProps.animation !== false && styles[styleProps.animation], styleProps.hasChildren && styles.withChildren, styleProps.hasChildren && !styleProps.width && styles.fitContent, styleProps.hasChildren && !styleProps.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  styleProps\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, styleProps.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, styleProps.variant === 'circular' && {\n    borderRadius: '50%'\n  }, styleProps.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, styleProps.hasChildren && !styleProps.width && {\n    maxWidth: 'fit-content'\n  }, styleProps.hasChildren && !styleProps.height && {\n    height: 'auto'\n  });\n}, ({\n  styleProps\n}) => styleProps.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  styleProps,\n  theme\n}) => styleProps.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(90deg, transparent, ${0}, transparent);\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, theme.palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'text']), PropTypes.string]),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import { useCallback } from 'react'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useMasterchef } from '../../../hooks/useContract'\r\nimport { useCallWithGasPrice } from '../../../hooks/useCallWithGasPrice'\r\n\r\nconst useApproveFarm = (lpContract) => {\r\n    const masterChefContract = useMasterchef()\r\n    const { callWithGasPrice } = useCallWithGasPrice()\r\n    const handleApprove = useCallback(async () => {\r\n        try {\r\n            const tx = await callWithGasPrice(lpContract, 'approve', [\r\n                masterChefContract.address,\r\n                ethers.constants.MaxUint256,\r\n            ])\r\n            const receipt = await tx.wait()\r\n            return receipt.status\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }, [lpContract, masterChefContract, callWithGasPrice])\r\n\r\n    return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApproveFarm\r\n","import PropTypes from 'prop-types';\r\nimport {useMemo, useState} from 'react';\r\nimport {\r\n    Button,\r\n    Card, CardActions,\r\n    CardContent,\r\n    Grid,\r\n    TextField\r\n} from \"@material-ui/core\";\r\n\r\nimport {ethers} from \"ethers\";\r\nimport BigNumber from \"bignumber.js/bignumber\";\r\nimport {escapeRegExp} from \"../../../utils\";\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport {showError} from \"../../../config/helpers\";\r\nimport {getBalanceAmount, getFullDisplayBalance} from \"../../../utils/formatBalance\";\r\n\r\nInputField.propTypes = {\r\n    tokenSymbol: PropTypes.string.isRequired,\r\n    isMax: PropTypes.bool,\r\n    label: PropTypes.string,\r\n    placeHolder: PropTypes.string,\r\n    inputValue: PropTypes.number,\r\n    onInputChange: PropTypes.func,\r\n    onMax: PropTypes.func,\r\n    selectedToken: PropTypes.any,\r\n    tokenBalance: PropTypes.any,\r\n    max: PropTypes.any,\r\n    onConfirm: PropTypes.any,\r\n    onDismiss: PropTypes.any\r\n}\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`)\r\n\r\nexport default function InputField(\r\n    {\r\n        tokenSymbol = \"\",\r\n        isMax=false,\r\n        label=\"\",\r\n        placeHolder=\"\",\r\n        inputValue=\"\",\r\n        onInputChange=null,\r\n        onMax=null,\r\n        selectedToken,\r\n        tokenBalance,\r\n        max,\r\n        onConfirm,\r\n        onDismiss\r\n    }\r\n) {\r\n    const { account } = useActiveWeb3React()\r\n    const [pendingTx, setPendingTx] = useState(false)\r\n\r\n    const fullBalance = useMemo(() => getFullDisplayBalance(max), [max])\r\n\r\n    const valNumber = new BigNumber(inputValue)\r\n    const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n    const enforcer = (nextUserInput) => {\r\n        if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n            onInputChange(nextUserInput)\r\n        }\r\n    }\r\n\r\n    const isBalanceZero = max === '0' || !max\r\n\r\n    const displayBalance = (balance) => {\r\n        try{\r\n            const stakedBalanceBigNumber = getBalanceAmount(balance)\r\n            if (isBalanceZero) {\r\n                return '0'\r\n            }\r\n            if (stakedBalanceBigNumber.gt(0)) {\r\n                return stakedBalanceBigNumber.toFixed(8, BigNumber.ROUND_DOWN)\r\n            }\r\n            return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n        }catch (e) {\r\n            showError(e.data ? e.data.message : e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{maxWidth: 620}}>\r\n                <CardContent sx={{background: '#e7e9ec', margin: '5px', borderRadius:'inherit'}}>\r\n                    <div>\r\n                        <p>\r\n                            {selectedToken\r\n                                ? `Balance: ${displayBalance(tokenBalance) ?? 'Loading' } `\r\n                                : ' - '}\r\n                            {\r\n                                (account && isMax && selectedToken) &&\r\n                                <Button variant=\"outlined\" style={{marginLeft:'3px'}} onClick={onMax} size=\"small\">Max</Button>\r\n                            }\r\n                        </p>\r\n                    </div>\r\n                    <div style={{marginTop: '5px'}}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={8} md={8}>\r\n                                <TextField\r\n                                    inputMode=\"decimal\"\r\n                                    step=\"any\"\r\n                                    min=\"0\"\r\n                                    type=\"number\"\r\n                                    fullWidth\r\n                                    value={parseFloat(inputValue)}\r\n                                    variant=\"filled\"\r\n                                    label={label}\r\n                                    placeholder={placeHolder}\r\n                                    title={label}\r\n                                    onChange={(event) => {\r\n                                        enforcer(event.currentTarget.value.replace(/,/g, '.'))\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={4} md={4} style={{fontSize:'10px', display: 'flex', alignItems:'center'}}>\r\n                                <Button onClick={onMax} variant=\"outlined\" style={{marginRight: '5px'}}>\r\n                                    Max\r\n                                </Button>\r\n                                {tokenSymbol}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={\r\n                        async () => {\r\n                            setPendingTx(true)\r\n                            try{\r\n                                await onConfirm(inputValue)\r\n                                onDismiss()\r\n                            }catch(e){\r\n                                showError(e.data ? e.data.message : e.message)\r\n                            }finally {\r\n                                setPendingTx(false)\r\n                            }\r\n                        }}\r\n                        fullWidth\r\n                        disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}>\r\n                        Confirm\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    )\r\n}","import { useCallback } from 'react'\r\nimport { stakeFarm } from '../../../utils/calls'\r\nimport { useMasterchef } from '../../../hooks/useContract'\r\n\r\nconst useStakeFarms = (pid) => {\r\n    const masterChefContract = useMasterchef()\r\n\r\n    const handleStake = useCallback(\r\n        async (amount) => {\r\n            const txHash = await stakeFarm(masterChefContract, pid, amount)\r\n            console.info(txHash)\r\n        },\r\n        [masterChefContract, pid],\r\n    )\r\n\r\n    return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakeFarms\r\n","import { useCallback } from 'react'\r\nimport { unstakeFarm } from '../../../utils/calls'\r\nimport { useMasterchef } from '../../../hooks/useContract'\r\n\r\nconst useUnstakeFarms = (pid) => {\r\n    const masterChefContract = useMasterchef()\r\n\r\n    const handleUnstake = useCallback(\r\n        async (amount) => {\r\n            await unstakeFarm(masterChefContract, pid, amount)\r\n        },\r\n        [masterChefContract, pid],\r\n    )\r\n\r\n    return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakeFarms\r\n","import PropTypes from 'prop-types'\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogTitle\r\n} from \"@material-ui/core\";\r\nimport {useMemo, useState} from \"react\";\r\nimport {ChainId} from \"@pancakeswap/sdk\";\r\nimport {ethers} from \"ethers\";\r\nimport InputField from \"./InputField\";\r\nimport useStakeFarms from \"../hooks/useStakeFarms\";\r\nimport useUnstakeFarms from \"../hooks/useUnstakeFarms\";\r\nimport {useLpTokenPrice} from \"../../../state/farms/hooks\";\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport {useAppDispatch} from \"../../../redux/store\";\r\nimport {fetchFarmUserDataAsync} from \"../../../state/farms\";\r\nimport {showError} from \"../../../config/helpers\";\r\nimport {getFullDisplayBalance} from \"../../../utils/formatBalance\";\r\n\r\nconst StakeAction = ({\r\n    farm,\r\n    tokenBalance,\r\n    tokenName,\r\n    pid,\r\n    lpLabel,\r\n    isUnstake,\r\n    isDisabled=false\r\n}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [input, setInput] = useState(false)\r\n    const { onStake } = useStakeFarms(pid)\r\n    const { onUnstake } = useUnstakeFarms(pid)\r\n    const { account } = useActiveWeb3React()\r\n    const dispatch = useAppDispatch()\r\n    const lpPrice = useLpTokenPrice(tokenName)\r\n\r\n    const fullBalance = useMemo(() => getFullDisplayBalance(tokenBalance), [tokenBalance])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const openDialog = () => {\r\n        setInput(\"\")\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleInput = (val) => {\r\n        setInput(val)\r\n    }\r\n\r\n    const handleMax = () => {\r\n        setInput(fullBalance)\r\n    }\r\n\r\n    const handleStake = async (amount) => {\r\n        try {\r\n            await onStake(amount)\r\n            dispatch(fetchFarmUserDataAsync({account, pids: [pid]}))\r\n        }catch (e) {\r\n            showError(e.data ? e.data.message : e.message)\r\n            return null\r\n        }\r\n    }\r\n\r\n    const handleUnstake = async (amount) => {\r\n        try{\r\n            await onUnstake(amount)\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n        }catch (e) {\r\n            showError(e.data ? e.data.message : e.message)\r\n            return null\r\n        }\r\n    }\r\n\r\n    const onDismiss = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={isDisabled} onClick={openDialog}>\r\n                {\r\n                    isUnstake ?\r\n                        \"Unstake\"\r\n                        : \"Stake\"\r\n                }\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>\r\n                    {\r\n                        isUnstake ?\r\n                            \"Unstake\"\r\n                            : \"Stake\"\r\n                    } {lpLabel}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <InputField\r\n                        tokenSymbol={farm.lpSymbol}\r\n                        selectedToken={farm.lpAddresses[ChainId.MAINNET]}\r\n                        tokenBalance={tokenBalance}\r\n                        onInputChange={handleInput}\r\n                        inputValue={input}\r\n                        max={tokenBalance}\r\n                        onMax={handleMax}\r\n                        onConfirm={isUnstake ? handleUnstake : handleStake}\r\n                        onDismiss={onDismiss}\r\n                    />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nStakeAction.propTypes = {\r\n    farm: PropTypes.any,\r\n    tokenBalance: PropTypes.any,\r\n    stakedBalance: PropTypes.any,\r\n    tokenName: PropTypes.any,\r\n    pid: PropTypes.any,\r\n    lpLabel: PropTypes.any,\r\n    isUnstake: PropTypes.bool,\r\n    isDisabled: PropTypes.bool\r\n}\r\n\r\nexport default StakeAction\r\n\r\n","import { useCallback } from 'react'\r\nimport { harvestFarm } from '../../../utils/calls'\r\nimport { useMasterchef } from '../../../hooks/useContract'\r\n\r\nconst useHarvestFarm = (farmPid) => {\r\n    const masterChefContract = useMasterchef()\r\n\r\n    const handleHarvest = useCallback(async () => {\r\n        await harvestFarm(masterChefContract, farmPid)\r\n    }, [farmPid, masterChefContract])\r\n\r\n    return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestFarm\r\n","import PropTypes from 'prop-types'\r\nimport {\r\n    Button,\r\n} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport BigNumber from \"bignumber.js/bignumber\";\r\nimport { usePriceUdeBusd} from \"../../../state/farms/hooks\";\r\nimport useActiveWeb3React from \"../../../hooks/useWeb3\";\r\nimport {useAppDispatch} from \"../../../redux/store\";\r\nimport useHarvestFarm from \"../hooks/useHarvestFarm\";\r\nimport {getBalanceAmount} from \"../../../utils/formatBalance\";\r\nimport {BIG_ZERO} from \"../../../utils/bigNumber\";\r\nimport {fetchFarmUserDataAsync} from \"../../../state/farms\";\r\nimport {showError, showFulfill} from \"../../../config/helpers\";\r\n\r\nconst HarvestAction = ({\r\n    earnings,\r\n    pid,\r\n    timeStamp=0\r\n }) => {\r\n    const { account } = useActiveWeb3React()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [pendingTx, setPendingTx] = useState(false)\r\n    const { onReward } = useHarvestFarm(pid)\r\n    const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                disabled={(parseFloat(timeStamp) > 0) || (rawEarningsBalance.eq(0) || pendingTx)}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={async () => {\r\n                    setPendingTx(true)\r\n                    try{\r\n                        await onReward()\r\n                        showFulfill(\"Successfully Harvested UDE\")\r\n                    }catch (e) {\r\n                        showError(e.data ? e.data.message : e.message)\r\n                    }\r\n                    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n                }}\r\n            >\r\n                Harvest\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nHarvestAction.propTypes = {\r\n    earnings: PropTypes.any,\r\n    pid: PropTypes.any,\r\n    timeStamp: PropTypes.number\r\n}\r\n\r\nexport default HarvestAction\r\n\r\n","import PropTypes from 'prop-types'\r\nimport {Button, Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport {getAddress} from \"../../../utils/addressHelpers\";\r\nimport {useAppDispatch} from \"../../../redux/store\";\r\nimport {useERC20} from \"../../../hooks/useContract\";\r\nimport useApproveFarm from \"../hooks/useApproveFarm\";\r\nimport {fetchFarmUserDataAsync} from \"../../../state/farms\";\r\nimport StakeAction from \"./StakeAction\";\r\nimport WalletPopover from \"../../../layouts/dashboard/WalletPopover\";\r\nimport HarvestAction from \"./HarvestAction\";\r\nimport {formatUnit} from \"../../../config/index\";\r\n\r\nfunction InfoItem(number, label=\"\") {\r\n    return (\r\n        <Grid item xs={4}>\r\n            <Typography variant=\"caption\" sx={{ mb: 0.5, color: 'text.secondary', display: 'block' }}>\r\n                {label}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">{number}</Typography>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst FarmActions = ({\r\n    farm,\r\n    account,\r\n    lpLabel,\r\n    addLiquidityUrl,\r\n    udePrice\r\n    }) => {\r\n\r\n    const [requestedApproval, setRequestedApproval] = useState(false)\r\n    const { pid, lpAddresses } = farm\r\n    const { allowance, tokenBalance, stakedBalance, earnings, userLast } = farm.userData || {}\r\n    const lpAddress = getAddress(lpAddresses)\r\n    const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const lpContract = useERC20(lpAddress)\r\n\r\n    const { onApprove } = useApproveFarm(lpContract)\r\n\r\n    const handleApprove = useCallback(async () => {\r\n        try {\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n            setRequestedApproval(true)\r\n            await onApprove()\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n            setRequestedApproval(false)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n    }, [onApprove, dispatch, account, pid])\r\n\r\n    const withdraw = 604800\r\n    const investWithdraw = (parseFloat(userLast) + parseFloat(withdraw)) *  1000\r\n    const nowStamp = Date.now()\r\n\r\n    const differ = investWithdraw - nowStamp;\r\n    const timeSt = ((differ/1000) > 0 ? (differ/1000) : 0)\r\n    const hours = timeSt / ( 60 * 60 )\r\n\r\n    const renderApprovalOrStakeButton = () => isApproved ? (\r\n            <StakeAction\r\n                farm={farm}\r\n                tokenBalance={tokenBalance}\r\n                tokenName={farm.lpSymbol}\r\n                pid={pid}\r\n                lpLabel={lpLabel}\r\n            />\r\n        ) : (\r\n            <Button variant=\"contained\" disabled={requestedApproval} onClick={handleApprove}>\r\n                Approve\r\n            </Button>\r\n        )\r\n\r\n    useEffect(\r\n        () => dispatch(fetchFarmUserDataAsync({ account, pids: [pid] })),\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Grid container sx={{ py: 3, textAlign: 'center' }} spacing={3}>\r\n                <Grid item xs={4} md={4}>\r\n                    <HarvestAction pid={pid} earnings={earnings} timeStamp={hours} />\r\n                </Grid>\r\n                <Grid item xs={4} md={4}>\r\n                    {!account ? <WalletPopover mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n                </Grid>\r\n                <Grid item xs={4} md={4}>\r\n                    <StakeAction\r\n                        farm={farm}\r\n                        pid={pid}\r\n                        tokenBalance={stakedBalance}\r\n                        lpLabel={lpLabel}\r\n                        tokenName={farm.lpSymbol}\r\n                        isUnstake\r\n                        isDisabled={!isApproved || parseFloat(stakedBalance) <= 0}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider />\r\n\r\n            <Grid container sx={{ py: 3, textAlign: 'center' }}>\r\n                {InfoItem(formatUnit(stakedBalance.toNumber()), \"STAKED\")}\r\n                {InfoItem(formatUnit(earnings.toNumber(), 6), \"REWARDS\")}\r\n                {InfoItem(`${parseFloat(hours.toString()).toFixed(2)} Hrs`, \"LOCKED\")}\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nFarmActions.propTypes = {\r\n    farm: PropTypes.any\r\n}\r\n\r\nexport default FarmActions","import PropTypes from 'prop-types'\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Card,\r\n    Grid,\r\n    Avatar,\r\n    Typography,\r\n} from '@material-ui/core';\r\n// utils\r\nimport {useEffect, useState} from \"react\";\r\n//\r\nimport SvgIconStyle from '../../components/SvgIconStyle';\r\nimport FarmActions from \"./components/farmActions\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CardMediaStyle = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    position: 'relative',\r\n    justifyContent: 'center',\r\n    paddingTop: 'calc(100% * 9 / 16)',\r\n    '&:before': {\r\n        top: 0,\r\n        zIndex: 9,\r\n        content: \"''\",\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        backdropFilter: 'blur(3px)',\r\n        WebkitBackdropFilter: 'blur(3px)', // Fix on Mobile\r\n        borderTopLeftRadius: theme.shape.borderRadiusMd,\r\n        borderTopRightRadius: theme.shape.borderRadiusMd,\r\n        backgroundColor: alpha(theme.palette.primary.darker, 0.72)\r\n    }\r\n}));\r\n\r\nconst CoverImgStyle = styled('img')({\r\n    top: 0,\r\n    zIndex: 8,\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n    position: 'absolute'\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction FarmInfo(label=\"\", value=\"\"){\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={6} md={6}>\r\n                {label}\r\n            </Grid>\r\n            <Grid item xs={6} md={6} sx={{fontWeight:\"bold\"}}>\r\n                {value}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nFarmCard.propTypes = {\r\n    farm: PropTypes.object.isRequired,\r\n    displayApr: PropTypes.any,\r\n    udePrice: PropTypes.any\r\n};\r\n\r\nexport default function FarmCard({ farm, displayApr, udePrice, ...other }) {\r\n    const { account } = useActiveWeb3React()\r\n    const { id, stakeAssetImage, userData } = farm;\r\n\r\n    const totalValueFormatted =\r\n        farm.liquidity && farm.liquidity.gt(0)\r\n            ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n            : '$0.00'\r\n\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('UDEGO', '')\r\n    const earnLabel = farm.dual ? farm.dual.earnLabel : 'UDE + Fees'\r\n\r\n    const weight = farm.poolWeight.toNumber() || 0\r\n\r\n    return (\r\n        <Card {...other}>\r\n            <CardMediaStyle>\r\n                <SvgIconStyle\r\n                    color=\"paper\"\r\n                    src=\"/static/icons/shape-avatar.svg\"\r\n                    sx={{\r\n                        width: 144,\r\n                        height: 62,\r\n                        zIndex: 10,\r\n                        bottom: -26,\r\n                        position: 'absolute'\r\n                    }}\r\n                />\r\n                <Avatar\r\n                    alt={stakeAssetImage}\r\n                    src={`./tokens/${stakeAssetImage}.png`}\r\n                    sx={{\r\n                        width: 64,\r\n                        height: 64,\r\n                        zIndex: 11,\r\n                        position: 'absolute',\r\n                        transform: 'translateY(-50%)'\r\n                    }}\r\n                />\r\n                <CoverImgStyle alt={lpLabel} src=\"./images/farming.png\" />\r\n            </CardMediaStyle>\r\n\r\n            <Typography variant=\"subtitle1\" align=\"center\" sx={{ mt: 6 }}>\r\n                {lpLabel}\r\n            </Typography>\r\n            <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary' }}>\r\n                Earn {earnLabel}\r\n            </Typography>\r\n\r\n            <Box sx={{ textAlign: 'center', mt: 2, mb: 2.5 }}>\r\n                {FarmInfo(\"Multiplier\", `${Math.round(weight*100)}x`)}\r\n                {FarmInfo(\"APR\", `${displayApr}%`)}\r\n                {FarmInfo(\"TVL\", totalValueFormatted)}\r\n            </Box>\r\n\r\n            <FarmActions farm={farm} lpLabel={lpLabel} account={account} udePrice={udePrice} />\r\n        </Card>\r\n    );\r\n}\r\n","import {useCallback, useEffect} from 'react';\r\nimport BigNumber from 'bignumber.js'\r\n// material\r\nimport {Container, Divider, Grid, Skeleton} from '@material-ui/core';\r\n// redux\r\nimport {ChainId} from \"@pancakeswap/sdk\";\r\nimport { useDispatch, useSelector } from '../redux/store';\r\n// routes\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\n// components\r\nimport Page from '../components/Page';\r\nimport {getFarms} from \"../redux/slices/farms\";\r\nimport {FarmCard} from \"./farm-udego\";\r\nimport {PAGE_TITLE} from \"../contexts/Constants\";\r\nimport {useFarms, usePollFarmsPublicData, usePollFarmsWithUserData, usePriceUdeBusd} from \"../state/farms/hooks\";\r\nimport useActiveWeb3React from \"../hooks/useWeb3\";\r\nimport {getFarmApr} from \"../utils/apr\";\r\nimport isArchivedPid from \"../utils/farmHelpers\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SkeletonLoad = (\r\n    <>\r\n        {[...Array(8)].map((_, index) => (\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '115%', borderRadius: 2 }} />\r\n            </Grid>\r\n        ))}\r\n    </>\r\n);\r\n\r\nconst getDisplayApr = (udeRewardsApr=0, lpRewardsApr=0) => {\r\n    if (udeRewardsApr && lpRewardsApr) {\r\n        return (udeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n    }\r\n    if (udeRewardsApr) {\r\n        return udeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n    }\r\n    return null\r\n}\r\n\r\nexport default function UdegoFarm() {\r\n    const { account } = useActiveWeb3React()\r\n    const { themeStretch } = useSettings();\r\n    const dispatch = useDispatch();\r\n    const { data: farmsLP, userDataLoaded } = useFarms()\r\n    const udePrice = usePriceUdeBusd()\r\n\r\n    const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n    const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n    const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n    const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n    usePollFarmsWithUserData(false)\r\n\r\n    const farmsList = useCallback(\r\n        (farmsToDisplay) => {\r\n            const farmsToDisplayWithAPR = farmsToDisplay.map((farm) => {\r\n                if (!farm.lpTotalInQuoteToken || !farm.quoteTokenPriceBusd) {\r\n                    return farm\r\n                }\r\n                const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteTokenPriceBusd)\r\n                const { udeRewardsApr, lpRewardsApr } = getFarmApr(new BigNumber(farm.poolWeight), udePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\r\n\r\n                return { ...farm, apr: udeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\r\n            })\r\n\r\n            return farmsToDisplayWithAPR\r\n        },\r\n        [udePrice],\r\n    )\r\n\r\n    const choseFarms = farmsList(activeFarms)\r\n\r\n    return (\r\n        <Page title={`Farms | ${PAGE_TITLE}`}>\r\n            <Container maxWidth={themeStretch ? false : 'lg'}>\r\n                <div>\r\n                    <h2>Farm & Harvest UDE Rewards</h2>\r\n                    <p>Stake LP Tokens to earn UDE Tokens in rewards</p>\r\n                </div>\r\n                <br />\r\n                <Divider />\r\n                <br />\r\n                <Grid container spacing={3}>\r\n                    {choseFarms && choseFarms.map((farm) => (\r\n                        <Grid key={farm.id} item xs={12} sm={6} md={4}>\r\n                            <FarmCard\r\n                                farm={farm}\r\n                                displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\r\n                                udePrice={udePrice}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                    {(!choseFarms || !choseFarms.length) && SkeletonLoad}\r\n                </Grid>\r\n            </Container>\r\n        </Page>\r\n    );\r\n}\r\n"],"sourceRoot":""}