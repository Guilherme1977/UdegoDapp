{"version":3,"sources":["../node_modules/@material-ui/core/Card/cardClasses.js","../node_modules/@material-ui/core/Card/Card.js","../node_modules/@material-ui/core/CardContent/cardContentClasses.js","../node_modules/@material-ui/core/CardContent/CardContent.js","pages/referral/refercard.js","pages/referral/earncards.js","pages/referral/index.js"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","Card","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","styleProps","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","CardContent","component","as","useStyles","makeStyles","theme","cardContainer","display","justifyContent","width","swapCard","borderRadius","boxShadow","palette","mode","dark","secondary","flexDisplay","alignItems","tokenImg","height","textInput","border","flex","robUINput","backgroundColor","textInputDiv","centerFloat","robUtt","infoSwap","textAlign","floatLeft","iconButton","color","balInfo","fontSize","secondary200","linkText","lineBreak","ReferCard","account","useActiveWeb3React","useState","setLoading","referLink","setRefer","getReferLink","a","nowAddress","showError","REFER_LINK","navigator","clipboard","writeText","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","e","useEffect","title","Typography","Button","style","marginTop","variant","onClick","cardThis","amountDisplay","margin","Earncards","forwardRef","header","amount","subtitle","icon","marginBottom","Referral","farmRewards","setFarm","stakeRewards","setStake","getRewards","getContract","FARMING","farmingABI","farming","rewards","console","log","inter","setInterval","clearInterval","Grid","container","spacing","item","lg","md","xs","sm","config","TOKEN_SYMBOL","parseFloat","formatEther","toFixed"],"mappings":"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","file":"static/js/15.9d5510c5.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    styleProps: styleProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('Material-UI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Card;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const styleProps = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","import React, { useEffect, useState } from 'react';\r\nimport {Button, Card, Slide, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {toast} from \"react-toastify\";\r\nimport {REFER_LINK, WALLET_ADDRESS} from \"../../config/config\";\r\nimport {showError} from \"../../config/helpers\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    swapCard: {\r\n        borderRadius: \"20px\",\r\n        padding: \"20px\",\r\n        '&:hover':{\r\n            boxShadow: `0px 0px 15px 3px ${theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.secondary.dark}`\r\n        }\r\n    },\r\n    flexDisplay: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    tokenImg: {\r\n        width: \"24px\",\r\n        height: \"auto\"\r\n    },\r\n    textInput: {\r\n        border: \"none\",\r\n        borderRadius: \"18px\",\r\n        width:\"max-content\",\r\n        padding: \"10px\",\r\n        flex: 'auto'\r\n    },\r\n    robUINput: {\r\n        backgroundColor: `${theme.palette.mode === 'dark' ? 'lightgrey' : '#675ec033'}`,\r\n        padding: \"10px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    textInputDiv: {\r\n        border: \"none\",\r\n        display: \"flex !important\",\r\n        alignItems: \"center\"\r\n    },\r\n    centerFloat: {\r\n        display: \"flex\",\r\n        justifyContent:\"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    robUtt: {\r\n        borderRadius: \"15px\",\r\n        padding: \"10px\",\r\n        width: \"-webkit-fill-available\"\r\n    },\r\n    infoSwap: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    floatLeft: {\r\n    },\r\n    iconButton: {\r\n        color: \"lightgray\",\r\n        \"&:hover\":{\r\n            color: `${theme.palette.secondary.dark}`\r\n        }\r\n    },\r\n    balInfo: {\r\n        fontSize: \"12px\",\r\n        color: `${theme.palette.mode === 'dark' ? 'lightgray' : theme.palette.secondary200}`\r\n    },\r\n    linkText: {\r\n        padding:\"10px\",\r\n        backgroundColor: \"lightgray\",\r\n        borderRadius: \"15px\",\r\n        lineBreak: \"anywhere\"\r\n    }\r\n}));\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"left\" />;\r\n}\r\n\r\nconst ReferCard = () => {\r\n    const { account } = useActiveWeb3React()\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [referLink, setRefer] = useState('');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [transition, setTransition] = React.useState(undefined);\r\n    const [message, setMessage] = useState('')\r\n\r\n    const getReferLink = async () => {\r\n        const nowAddress = account;\r\n        if(!account){\r\n            showError(\"Connect wallet!!\")\r\n            return\r\n        }\r\n        setRefer(REFER_LINK+nowAddress);\r\n        try{\r\n            navigator.clipboard.writeText(REFER_LINK+nowAddress)\r\n            toast.success('Copied Successfully!', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } catch (e) {\r\n            showError(`Could Not Copy To Clipboard - ${e}`)\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <Card\r\n            className={classes.swapCard}\r\n            title=\"Referral Link\"\r\n        >\r\n            <Typography className={classes.linkText}>\r\n                {referLink}\r\n            </Typography>\r\n            <Button style={{marginTop:\"20px\"}} variant=\"contained\" color=\"secondary\" className={classes.robUtt} onClick={getReferLink}>\r\n                Generate & Copy Link\r\n            </Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ReferCard;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    swapCard: {\r\n        borderRadius: \"20px\",\r\n        padding: \"20px\",\r\n        '&:hover':{\r\n            boxShadow: `0px 0px 15px 3px ${theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.secondary.dark}`\r\n        }\r\n    },\r\n    flexDisplay: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    tokenImg: {\r\n        width: \"24px\",\r\n        height: \"auto\"\r\n    },\r\n    textInput: {\r\n        border: \"none\",\r\n        borderRadius: \"18px\",\r\n        width:\"max-content\",\r\n        padding: \"10px\",\r\n        flex: 'auto'\r\n    },\r\n    robUINput: {\r\n        backgroundColor: `${theme.palette.mode === 'dark' ? 'lightgrey' : '#675ec033'}`,\r\n        padding: \"10px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    textInputDiv: {\r\n        border: \"none\",\r\n        display: \"flex !important\",\r\n        alignItems: \"center\"\r\n    },\r\n    centerFloat: {\r\n        display: \"flex\",\r\n        justifyContent:\"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    robUtt: {\r\n        borderRadius: \"15px\",\r\n        padding: \"10px\",\r\n        width: \"-webkit-fill-available\"\r\n    },\r\n    infoSwap: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    floatLeft: {\r\n    },\r\n    iconButton: {\r\n        color: \"lightgray\",\r\n        \"&:hover\":{\r\n            color: `${theme.palette.secondary.dark}`\r\n        }\r\n    },\r\n    balInfo: {\r\n        fontSize: \"12px\",\r\n        color: `${theme.palette.mode === 'dark' ? 'lightgray' : theme.palette.secondary200}`\r\n    },\r\n    cardThis: {\r\n        alignItems:\"center\"\r\n    },\r\n    amountDisplay: {\r\n        fontSize: \"38px\",\r\n        margin: \"auto\"\r\n    }\r\n}));\r\n\r\nconst Earncards = React.forwardRef((\r\n    {\r\n        header=\"\",\r\n        amount=\"\",\r\n        onClick=null,\r\n        subtitle=\"\",\r\n        icon=null,\r\n        ...others\r\n    },\r\n    ref\r\n    ) => {\r\n        const [isLoading, setLoading] = useState(true);\r\n        const classes = useStyles()\r\n        useEffect(() => {\r\n            setLoading(false);\r\n        }, []);\r\n        return (\r\n            <Card\r\n                title={header}\r\n                className={classes.swapCard}\r\n                style={{textAlign: \"center\"}}\r\n            >\r\n                <div className={classes.flexDisplay}  style={{marginBottom: \"10px\"}}>\r\n                    <span className={classes.amountDisplay}>{amount} UDE</span>\r\n                </div>\r\n                <p>\r\n                    {subtitle}\r\n                </p>\r\n            </Card>\r\n        );\r\n    }\r\n)\r\n\r\nEarncards.propTypes = {\r\n    header: PropTypes.string,\r\n    amount: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    subtitle: PropTypes.string\r\n}\r\n\r\nexport default Earncards;","import React, { useEffect, useState } from 'react';\r\nimport {Card, CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {formatEther} from \"@ethersproject/units\";\r\nimport ReferCard from \"./refercard\";\r\nimport EarnCard from \"./earncards\";\r\nimport {config} from \"../../config/config\";\r\n\r\nimport {farmingABI} from \"../../config/abis\";\r\nimport {getContract} from \"../../config/helpers\";\r\nimport useActiveWeb3React from \"../../hooks/useWeb3\";\r\nimport {FARMING} from \"../../config/constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        width: \"100%\"\r\n    },\r\n    swapCard: {\r\n        borderRadius: \"20px\",\r\n        '&:hover':{\r\n            boxShadow: `0px 0px 15px 3px ${theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.secondary.dark}`\r\n        }\r\n},\r\n    flexDisplay: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    tokenImg: {\r\n        width: \"24px\",\r\n        height: \"auto\"\r\n    },\r\n    textInput: {\r\n        border: \"none\",\r\n        borderRadius: \"18px\",\r\n        width:\"max-content\",\r\n        padding: \"10px\",\r\n        flex: 'auto'\r\n    },\r\n    robUINput: {\r\n        backgroundColor: `${theme.palette.mode === 'dark' ? 'lightgrey' : '#675ec033'}`,\r\n        padding: \"10px\",\r\n        borderRadius: \"15px\",\r\n    },\r\n    textInputDiv: {\r\n        border: \"none\",\r\n        display: \"flex !important\",\r\n        alignItems: \"center\"\r\n    },\r\n    centerFloat: {\r\n        display: \"flex\",\r\n        justifyContent:\"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    robUtt: {\r\n        borderRadius: \"15px\",\r\n        padding: \"10px\",\r\n        width: \"-webkit-fill-available\"\r\n    },\r\n    infoSwap: {\r\n        padding: \"20px\",\r\n        textAlign: \"center\"\r\n    },\r\n    floatLeft: {\r\n    },\r\n    iconButton: {\r\n        color: \"lightgray\",\r\n        \"&:hover\":{\r\n            color: `${theme.palette.secondary.dark}`\r\n        }\r\n    },\r\n    balInfo: {\r\n        fontSize: \"12px\",\r\n        color: `${theme.palette.mode === 'dark' ? 'lightgray' : theme.palette.secondary200}`\r\n    },\r\n    cardThis: {\r\n        alignItems:\"center\"\r\n    }\r\n}));\r\n\r\nconst Referral = () => {\r\n    const { account } = useActiveWeb3React()\r\n    const classes = useStyles()\r\n\r\n    const [farmRewards, setFarm] = useState(0);\r\n    const [stakeRewards, setStake] = useState(0);\r\n\r\n    const getRewards = async () => {\r\n        try{\r\n            if(!account) return\r\n            const farming = await getContract(FARMING, farmingABI)\r\n            const rewards = await farming.getRewards(account)\r\n            console.log(rewards)\r\n            setFarm(rewards[0])\r\n            setStake(rewards[1])\r\n        }catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const inter = setInterval(() => getRewards(), 5000)\r\n        return (() => clearInterval(inter))\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardContent>\r\n                    <Grid container spacing={2} className={classes.cardThis}>\r\n                        <Grid item lg={6} md={6} xs={12} sm={12} >\r\n                            <Typography variant=\"h2\">\r\n                                Invite Your Friends.<br />Earn {config.TOKEN_SYMBOL}\r\n                            </Typography>\r\n                            <p>\r\n                                Earn 5% commission reward from your friends earnings generated from Farms & Staking Pools\r\n                            </p>\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} xs={12} sm={12}>\r\n                            <ReferCard />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n            <Grid container spacing={2} className={classes.cardThis} style={{marginTop:\"10px\"}}>\r\n                <Grid item lg={6} md={6} xs={12} sm={12} >\r\n                    <EarnCard\r\n                        header=\"Farm Referral\"\r\n                        amount={parseFloat(formatEther(farmRewards)).toFixed(4)}\r\n                        subtitle=\"Referral Earnings on Farm Rewards your Refer earns\"\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} xs={12} sm={12} >\r\n                    <EarnCard\r\n                        header=\"Staking Referral\"\r\n                        amount={parseFloat(formatEther(stakeRewards)).toFixed(4)}\r\n                        subtitle=\"Referral Earnings on Stake Rewards your Refer earns\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Referral;"],"sourceRoot":""}